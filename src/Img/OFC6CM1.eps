%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: cbcg_tria2_052.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zydd
%%CreationDate: 10/4/2016
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-10-04T15:07:30+02:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AN2hn06PjAr21siFY0dg4&#xA;jjWXaRSx4sjHYs26cuL/AAlHWNifPc/j7fv5jeweXRP6QmNaEAlpKK4K8QoqiE8SS5IZd1UbdviC&#xA;w4B+Px+PlbakdUvgCfRqBxDEMpALryANBsadsPhjvW1v6XvP99f8Mv8ATD4QW3fpe8/31/wy/wBM&#xA;fCC279L3n++v+GX+mPhBbXLql8wqIfh6Fi6hR8JbckU+ypP0YPDHetqrX1wUHxhGNeQoTxrGx3qo&#xA;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&#xA;L//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
0 0 mo
1000 0 li
1000 1000 li
0 1000 li
0 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
gsave
0 0 mo
1000 0 li
1000 1000 li
0 1000 li
0 0 li
cp
clp
166.667 166.667 mo
0 0 li
273.333 0 li
166.667 166.667 li
cp
.0588235 .364706 .439216 rgb
f
.01 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
166.667 166.667 mo
0 0 li
273.333 0 li
166.667 166.667 li
cp
@
165.867 162.222 mo
5.86719 2.22217 li
268.267 2.22217 li
165.867 162.222 li
cp
.705882 .992157 .67451 rgb
f
165.867 162.222 mo
5.86719 2.22217 li
268.267 2.22217 li
165.867 162.222 li
cp
@
165.067 157.778 mo
11.7329 4.44385 li
263.2 4.44385 li
165.067 157.778 li
cp
.0588235 .364706 .439216 rgb
f
165.067 157.778 mo
11.7329 4.44385 li
263.2 4.44385 li
165.067 157.778 li
cp
@
164.267 153.333 mo
17.6001 6.66699 li
258.133 6.66699 li
164.267 153.333 li
cp
.705882 .992157 .67451 rgb
f
164.267 153.333 mo
17.6001 6.66699 li
258.133 6.66699 li
164.267 153.333 li
cp
@
163.467 148.889 mo
23.4668 8.88916 li
253.067 8.88916 li
163.467 148.889 li
cp
.0588235 .364706 .439216 rgb
f
163.467 148.889 mo
23.4668 8.88916 li
253.067 8.88916 li
163.467 148.889 li
cp
@
162.667 144.444 mo
29.333 11.1108 li
248 11.1108 li
162.667 144.444 li
cp
.705882 .992157 .67451 rgb
f
162.667 144.444 mo
29.333 11.1108 li
248 11.1108 li
162.667 144.444 li
cp
@
161.867 140 mo
35.2002 13.333 li
242.933 13.333 li
161.867 140 li
cp
.0588235 .364706 .439216 rgb
f
161.867 140 mo
35.2002 13.333 li
242.933 13.333 li
161.867 140 li
cp
@
161.067 135.556 mo
41.0669 15.5562 li
237.867 15.5562 li
161.067 135.556 li
cp
.705882 .992157 .67451 rgb
f
161.067 135.556 mo
41.0669 15.5562 li
237.867 15.5562 li
161.067 135.556 li
cp
@
160.267 131.111 mo
46.9331 17.7778 li
232.8 17.7778 li
160.267 131.111 li
cp
.0588235 .364706 .439216 rgb
f
160.267 131.111 mo
46.9331 17.7778 li
232.8 17.7778 li
160.267 131.111 li
cp
@
159.467 126.667 mo
52.7998 20 li
227.733 20 li
159.467 126.667 li
cp
.705882 .992157 .67451 rgb
f
159.467 126.667 mo
52.7998 20 li
227.733 20 li
159.467 126.667 li
cp
@
158.667 122.222 mo
58.667 22.2222 li
222.667 22.2222 li
158.667 122.222 li
cp
.0588235 .364706 .439216 rgb
f
158.667 122.222 mo
58.667 22.2222 li
222.667 22.2222 li
158.667 122.222 li
cp
@
157.867 117.778 mo
64.5332 24.4438 li
217.6 24.4438 li
157.867 117.778 li
cp
.705882 .992157 .67451 rgb
f
157.867 117.778 mo
64.5332 24.4438 li
217.6 24.4438 li
157.867 117.778 li
cp
@
157.067 113.333 mo
70.3999 26.667 li
212.533 26.667 li
157.067 113.333 li
cp
.0588235 .364706 .439216 rgb
f
157.067 113.333 mo
70.3999 26.667 li
212.533 26.667 li
157.067 113.333 li
cp
@
156.267 108.889 mo
76.2671 28.8892 li
207.467 28.8892 li
156.267 108.889 li
cp
.705882 .992157 .67451 rgb
f
156.267 108.889 mo
76.2671 28.8892 li
207.467 28.8892 li
156.267 108.889 li
cp
@
155.467 104.444 mo
82.1328 31.1108 li
202.4 31.1108 li
155.467 104.444 li
cp
.0588235 .364706 .439216 rgb
f
155.467 104.444 mo
82.1328 31.1108 li
202.4 31.1108 li
155.467 104.444 li
cp
@
154.667 100 mo
88 33.333 li
197.333 33.333 li
154.667 100 li
cp
.705882 .992157 .67451 rgb
f
154.667 100 mo
88 33.333 li
197.333 33.333 li
154.667 100 li
cp
@
153.867 95.5562 mo
93.8672 35.5562 li
192.267 35.5562 li
153.867 95.5562 li
cp
.0588235 .364706 .439216 rgb
f
153.867 95.5562 mo
93.8672 35.5562 li
192.267 35.5562 li
153.867 95.5562 li
cp
@
153.067 91.1108 mo
99.7329 37.7778 li
187.2 37.7778 li
153.067 91.1108 li
cp
.705882 .992157 .67451 rgb
f
153.067 91.1108 mo
99.7329 37.7778 li
187.2 37.7778 li
153.067 91.1108 li
cp
@
152.267 86.667 mo
105.6 40 li
182.133 40 li
152.267 86.667 li
cp
.0588235 .364706 .439216 rgb
f
152.267 86.667 mo
105.6 40 li
182.133 40 li
152.267 86.667 li
cp
@
151.467 82.2222 mo
111.467 42.2222 li
177.067 42.2222 li
151.467 82.2222 li
cp
.705882 .992157 .67451 rgb
f
151.467 82.2222 mo
111.467 42.2222 li
177.067 42.2222 li
151.467 82.2222 li
cp
@
150.667 77.7778 mo
117.333 44.4438 li
172 44.4438 li
150.667 77.7778 li
cp
.0588235 .364706 .439216 rgb
f
150.667 77.7778 mo
117.333 44.4438 li
172 44.4438 li
150.667 77.7778 li
cp
@
149.867 73.333 mo
123.2 46.667 li
166.933 46.667 li
149.867 73.333 li
cp
.705882 .992157 .67451 rgb
f
149.867 73.333 mo
123.2 46.667 li
166.933 46.667 li
149.867 73.333 li
cp
@
149.067 68.8892 mo
129.067 48.8892 li
161.867 48.8892 li
149.067 68.8892 li
cp
.0588235 .364706 .439216 rgb
f
149.067 68.8892 mo
129.067 48.8892 li
161.867 48.8892 li
149.067 68.8892 li
cp
@
148.267 64.4438 mo
134.933 51.1108 li
156.8 51.1108 li
148.267 64.4438 li
cp
.705882 .992157 .67451 rgb
f
148.267 64.4438 mo
134.933 51.1108 li
156.8 51.1108 li
148.267 64.4438 li
cp
@
147.467 60 mo
140.8 53.333 li
151.733 53.333 li
147.467 60 li
cp
.0588235 .364706 .439216 rgb
f
147.467 60 mo
140.8 53.333 li
151.733 53.333 li
147.467 60 li
cp
@
146.667 55.5562 mo
146.667 55.5562 li
146.667 55.5562 li
cp
.705882 .992157 .67451 rgb
f
146.667 55.5562 mo
146.667 55.5562 li
146.667 55.5562 li
cp
@
166.667 166.667 mo
273.333 0 li
326.667 280 li
166.667 166.667 li
cp
.0588235 .364706 .439216 rgb
f
166.667 166.667 mo
273.333 0 li
326.667 280 li
166.667 166.667 li
cp
@
170.222 165.956 mo
272.622 5.95605 li
323.822 274.756 li
170.222 165.956 li
cp
.705882 .992157 .67451 rgb
f
170.222 165.956 mo
272.622 5.95605 li
323.822 274.756 li
170.222 165.956 li
cp
@
173.778 165.244 mo
271.911 11.9111 li
320.978 269.511 li
173.778 165.244 li
cp
.0588235 .364706 .439216 rgb
f
173.778 165.244 mo
271.911 11.9111 li
320.978 269.511 li
173.778 165.244 li
cp
@
177.333 164.533 mo
271.2 17.8672 li
318.133 264.267 li
177.333 164.533 li
cp
.705882 .992157 .67451 rgb
f
177.333 164.533 mo
271.2 17.8672 li
318.133 264.267 li
177.333 164.533 li
cp
@
180.889 163.822 mo
270.489 23.8223 li
315.289 259.022 li
180.889 163.822 li
cp
.0588235 .364706 .439216 rgb
f
180.889 163.822 mo
270.489 23.8223 li
315.289 259.022 li
180.889 163.822 li
cp
@
184.444 163.111 mo
269.778 29.7778 li
312.444 253.778 li
184.444 163.111 li
cp
.705882 .992157 .67451 rgb
f
184.444 163.111 mo
269.778 29.7778 li
312.444 253.778 li
184.444 163.111 li
cp
@
188 162.4 mo
269.067 35.7329 li
309.6 248.533 li
188 162.4 li
cp
.0588235 .364706 .439216 rgb
f
188 162.4 mo
269.067 35.7329 li
309.6 248.533 li
188 162.4 li
cp
@
191.556 161.689 mo
268.356 41.689 li
306.756 243.289 li
191.556 161.689 li
cp
.705882 .992157 .67451 rgb
f
191.556 161.689 mo
268.356 41.689 li
306.756 243.289 li
191.556 161.689 li
cp
@
195.111 160.978 mo
267.644 47.644 li
303.911 238.044 li
195.111 160.978 li
cp
.0588235 .364706 .439216 rgb
f
195.111 160.978 mo
267.644 47.644 li
303.911 238.044 li
195.111 160.978 li
cp
@
198.667 160.267 mo
266.933 53.6001 li
301.067 232.8 li
198.667 160.267 li
cp
.705882 .992157 .67451 rgb
f
198.667 160.267 mo
266.933 53.6001 li
301.067 232.8 li
198.667 160.267 li
cp
@
202.222 159.556 mo
266.222 59.5562 li
298.222 227.556 li
202.222 159.556 li
cp
.0588235 .364706 .439216 rgb
f
202.222 159.556 mo
266.222 59.5562 li
298.222 227.556 li
202.222 159.556 li
cp
@
205.778 158.844 mo
265.511 65.5107 li
295.378 222.311 li
205.778 158.844 li
cp
.705882 .992157 .67451 rgb
f
205.778 158.844 mo
265.511 65.5107 li
295.378 222.311 li
205.778 158.844 li
cp
@
209.333 158.133 mo
264.8 71.4668 li
292.533 217.067 li
209.333 158.133 li
cp
.0588235 .364706 .439216 rgb
f
209.333 158.133 mo
264.8 71.4668 li
292.533 217.067 li
209.333 158.133 li
cp
@
212.889 157.422 mo
264.089 77.4219 li
289.689 211.822 li
212.889 157.422 li
cp
.705882 .992157 .67451 rgb
f
212.889 157.422 mo
264.089 77.4219 li
289.689 211.822 li
212.889 157.422 li
cp
@
216.444 156.711 mo
263.378 83.3779 li
286.844 206.578 li
216.444 156.711 li
cp
.0588235 .364706 .439216 rgb
f
216.444 156.711 mo
263.378 83.3779 li
286.844 206.578 li
216.444 156.711 li
cp
@
220 156 mo
262.667 89.333 li
284 201.333 li
220 156 li
cp
.705882 .992157 .67451 rgb
f
220 156 mo
262.667 89.333 li
284 201.333 li
220 156 li
cp
@
223.556 155.289 mo
261.956 95.2891 li
281.156 196.089 li
223.556 155.289 li
cp
.0588235 .364706 .439216 rgb
f
223.556 155.289 mo
261.956 95.2891 li
281.156 196.089 li
223.556 155.289 li
cp
@
227.111 154.578 mo
261.244 101.244 li
278.311 190.844 li
227.111 154.578 li
cp
.705882 .992157 .67451 rgb
f
227.111 154.578 mo
261.244 101.244 li
278.311 190.844 li
227.111 154.578 li
cp
@
230.667 153.867 mo
260.533 107.2 li
275.467 185.6 li
230.667 153.867 li
cp
.0588235 .364706 .439216 rgb
f
230.667 153.867 mo
260.533 107.2 li
275.467 185.6 li
230.667 153.867 li
cp
@
234.222 153.156 mo
259.822 113.156 li
272.622 180.356 li
234.222 153.156 li
cp
.705882 .992157 .67451 rgb
f
234.222 153.156 mo
259.822 113.156 li
272.622 180.356 li
234.222 153.156 li
cp
@
237.778 152.444 mo
259.111 119.111 li
269.778 175.111 li
237.778 152.444 li
cp
.0588235 .364706 .439216 rgb
f
237.778 152.444 mo
259.111 119.111 li
269.778 175.111 li
237.778 152.444 li
cp
@
241.333 151.733 mo
258.4 125.067 li
266.933 169.867 li
241.333 151.733 li
cp
.705882 .992157 .67451 rgb
f
241.333 151.733 mo
258.4 125.067 li
266.933 169.867 li
241.333 151.733 li
cp
@
244.889 151.022 mo
257.689 131.022 li
264.089 164.622 li
244.889 151.022 li
cp
.0588235 .364706 .439216 rgb
f
244.889 151.022 mo
257.689 131.022 li
264.089 164.622 li
244.889 151.022 li
cp
@
248.444 150.311 mo
256.978 136.978 li
261.244 159.378 li
248.444 150.311 li
cp
.705882 .992157 .67451 rgb
f
248.444 150.311 mo
256.978 136.978 li
261.244 159.378 li
248.444 150.311 li
cp
@
252 149.6 mo
256.267 142.933 li
258.4 154.133 li
252 149.6 li
cp
.0588235 .364706 .439216 rgb
f
252 149.6 mo
256.267 142.933 li
258.4 154.133 li
252 149.6 li
cp
@
255.556 148.889 mo
255.556 148.889 li
255.556 148.889 li
cp
.705882 .992157 .67451 rgb
f
255.556 148.889 mo
255.556 148.889 li
255.556 148.889 li
cp
@
166.667 166.667 mo
326.667 280 li
0 413.333 li
166.667 166.667 li
cp
.0588235 .364706 .439216 rgb
f
166.667 166.667 mo
326.667 280 li
0 413.333 li
166.667 166.667 li
cp
@
166.578 171.467 mo
320.178 280.267 li
6.57813 408.267 li
166.578 171.467 li
cp
.705882 .992157 .67451 rgb
f
166.578 171.467 mo
320.178 280.267 li
6.57813 408.267 li
166.578 171.467 li
cp
@
166.489 176.267 mo
313.689 280.533 li
13.1558 403.2 li
166.489 176.267 li
cp
.0588235 .364706 .439216 rgb
f
166.489 176.267 mo
313.689 280.533 li
13.1558 403.2 li
166.489 176.267 li
cp
@
166.4 181.067 mo
307.2 280.8 li
19.7329 398.133 li
166.4 181.067 li
cp
.705882 .992157 .67451 rgb
f
166.4 181.067 mo
307.2 280.8 li
19.7329 398.133 li
166.4 181.067 li
cp
@
166.311 185.867 mo
300.711 281.067 li
26.311 393.067 li
166.311 185.867 li
cp
.0588235 .364706 .439216 rgb
f
166.311 185.867 mo
300.711 281.067 li
26.311 393.067 li
166.311 185.867 li
cp
@
166.222 190.667 mo
294.222 281.333 li
32.8892 388 li
166.222 190.667 li
cp
.705882 .992157 .67451 rgb
f
166.222 190.667 mo
294.222 281.333 li
32.8892 388 li
166.222 190.667 li
cp
@
166.133 195.467 mo
287.733 281.6 li
39.4668 382.933 li
166.133 195.467 li
cp
.0588235 .364706 .439216 rgb
f
166.133 195.467 mo
287.733 281.6 li
39.4668 382.933 li
166.133 195.467 li
cp
@
166.044 200.267 mo
281.244 281.867 li
46.0439 377.867 li
166.044 200.267 li
cp
.705882 .992157 .67451 rgb
f
166.044 200.267 mo
281.244 281.867 li
46.0439 377.867 li
166.044 200.267 li
cp
@
165.956 205.067 mo
274.756 282.133 li
52.6221 372.8 li
165.956 205.067 li
cp
.0588235 .364706 .439216 rgb
f
165.956 205.067 mo
274.756 282.133 li
52.6221 372.8 li
165.956 205.067 li
cp
@
165.867 209.867 mo
268.267 282.4 li
59.2002 367.733 li
165.867 209.867 li
cp
.705882 .992157 .67451 rgb
f
165.867 209.867 mo
268.267 282.4 li
59.2002 367.733 li
165.867 209.867 li
cp
@
165.778 214.667 mo
261.778 282.667 li
65.7778 362.667 li
165.778 214.667 li
cp
.0588235 .364706 .439216 rgb
f
165.778 214.667 mo
261.778 282.667 li
65.7778 362.667 li
165.778 214.667 li
cp
@
165.689 219.467 mo
255.289 282.933 li
72.356 357.6 li
165.689 219.467 li
cp
.705882 .992157 .67451 rgb
f
165.689 219.467 mo
255.289 282.933 li
72.356 357.6 li
165.689 219.467 li
cp
@
165.6 224.267 mo
248.8 283.2 li
78.9331 352.533 li
165.6 224.267 li
cp
.0588235 .364706 .439216 rgb
f
165.6 224.267 mo
248.8 283.2 li
78.9331 352.533 li
165.6 224.267 li
cp
@
165.511 229.067 mo
242.311 283.467 li
85.5112 347.467 li
165.511 229.067 li
cp
.705882 .992157 .67451 rgb
f
165.511 229.067 mo
242.311 283.467 li
85.5112 347.467 li
165.511 229.067 li
cp
@
165.422 233.867 mo
235.822 283.733 li
92.0889 342.4 li
165.422 233.867 li
cp
.0588235 .364706 .439216 rgb
f
165.422 233.867 mo
235.822 283.733 li
92.0889 342.4 li
165.422 233.867 li
cp
@
165.333 238.667 mo
229.333 284 li
98.667 337.333 li
165.333 238.667 li
cp
.705882 .992157 .67451 rgb
f
165.333 238.667 mo
229.333 284 li
98.667 337.333 li
165.333 238.667 li
cp
@
165.244 243.467 mo
222.844 284.267 li
105.244 332.267 li
165.244 243.467 li
cp
.0588235 .364706 .439216 rgb
f
165.244 243.467 mo
222.844 284.267 li
105.244 332.267 li
165.244 243.467 li
cp
@
165.156 248.267 mo
216.356 284.533 li
111.822 327.2 li
165.156 248.267 li
cp
.705882 .992157 .67451 rgb
f
165.156 248.267 mo
216.356 284.533 li
111.822 327.2 li
165.156 248.267 li
cp
@
165.067 253.067 mo
209.867 284.8 li
118.4 322.133 li
165.067 253.067 li
cp
.0588235 .364706 .439216 rgb
f
165.067 253.067 mo
209.867 284.8 li
118.4 322.133 li
165.067 253.067 li
cp
@
164.978 257.867 mo
203.378 285.067 li
124.978 317.067 li
164.978 257.867 li
cp
.705882 .992157 .67451 rgb
f
164.978 257.867 mo
203.378 285.067 li
124.978 317.067 li
164.978 257.867 li
cp
@
164.889 262.667 mo
196.889 285.333 li
131.556 312 li
164.889 262.667 li
cp
.0588235 .364706 .439216 rgb
f
164.889 262.667 mo
196.889 285.333 li
131.556 312 li
164.889 262.667 li
cp
@
164.8 267.467 mo
190.4 285.6 li
138.133 306.933 li
164.8 267.467 li
cp
.705882 .992157 .67451 rgb
f
164.8 267.467 mo
190.4 285.6 li
138.133 306.933 li
164.8 267.467 li
cp
@
164.711 272.267 mo
183.911 285.867 li
144.711 301.867 li
164.711 272.267 li
cp
.0588235 .364706 .439216 rgb
f
164.711 272.267 mo
183.911 285.867 li
144.711 301.867 li
164.711 272.267 li
cp
@
164.622 277.067 mo
177.422 286.133 li
151.289 296.8 li
164.622 277.067 li
cp
.705882 .992157 .67451 rgb
f
164.622 277.067 mo
177.422 286.133 li
151.289 296.8 li
164.622 277.067 li
cp
@
164.533 281.867 mo
170.933 286.4 li
157.867 291.733 li
164.533 281.867 li
cp
.0588235 .364706 .439216 rgb
f
164.533 281.867 mo
170.933 286.4 li
157.867 291.733 li
164.533 281.867 li
cp
@
164.444 286.667 mo
164.444 286.667 li
164.444 286.667 li
cp
.705882 .992157 .67451 rgb
f
164.444 286.667 mo
164.444 286.667 li
164.444 286.667 li
cp
@
166.667 166.667 mo
0 413.333 li
0 0 li
166.667 166.667 li
cp
.0588235 .364706 .439216 rgb
f
166.667 166.667 mo
0 413.333 li
0 0 li
166.667 166.667 li
cp
@
162.222 167.733 mo
2.22217 404.533 li
2.22217 7.73291 li
162.222 167.733 li
cp
.705882 .992157 .67451 rgb
f
162.222 167.733 mo
2.22217 404.533 li
2.22217 7.73291 li
162.222 167.733 li
cp
@
157.778 168.8 mo
4.44385 395.733 li
4.44385 15.4668 li
157.778 168.8 li
cp
.0588235 .364706 .439216 rgb
f
157.778 168.8 mo
4.44385 395.733 li
4.44385 15.4668 li
157.778 168.8 li
cp
@
153.333 169.867 mo
6.66699 386.933 li
6.66699 23.2002 li
153.333 169.867 li
cp
.705882 .992157 .67451 rgb
f
153.333 169.867 mo
6.66699 386.933 li
6.66699 23.2002 li
153.333 169.867 li
cp
@
148.889 170.933 mo
8.88916 378.133 li
8.88916 30.9331 li
148.889 170.933 li
cp
.0588235 .364706 .439216 rgb
f
148.889 170.933 mo
8.88916 378.133 li
8.88916 30.9331 li
148.889 170.933 li
cp
@
144.444 172 mo
11.1108 369.333 li
11.1108 38.667 li
144.444 172 li
cp
.705882 .992157 .67451 rgb
f
144.444 172 mo
11.1108 369.333 li
11.1108 38.667 li
144.444 172 li
cp
@
140 173.067 mo
13.333 360.533 li
13.333 46.3999 li
140 173.067 li
cp
.0588235 .364706 .439216 rgb
f
140 173.067 mo
13.333 360.533 li
13.333 46.3999 li
140 173.067 li
cp
@
135.556 174.133 mo
15.5562 351.733 li
15.5562 54.1328 li
135.556 174.133 li
cp
.705882 .992157 .67451 rgb
f
135.556 174.133 mo
15.5562 351.733 li
15.5562 54.1328 li
135.556 174.133 li
cp
@
131.111 175.2 mo
17.7778 342.933 li
17.7778 61.8672 li
131.111 175.2 li
cp
.0588235 .364706 .439216 rgb
f
131.111 175.2 mo
17.7778 342.933 li
17.7778 61.8672 li
131.111 175.2 li
cp
@
126.667 176.267 mo
20 334.133 li
20 69.6001 li
126.667 176.267 li
cp
.705882 .992157 .67451 rgb
f
126.667 176.267 mo
20 334.133 li
20 69.6001 li
126.667 176.267 li
cp
@
122.222 177.333 mo
22.2222 325.333 li
22.2222 77.333 li
122.222 177.333 li
cp
.0588235 .364706 .439216 rgb
f
122.222 177.333 mo
22.2222 325.333 li
22.2222 77.333 li
122.222 177.333 li
cp
@
117.778 178.4 mo
24.4438 316.533 li
24.4438 85.0669 li
117.778 178.4 li
cp
.705882 .992157 .67451 rgb
f
117.778 178.4 mo
24.4438 316.533 li
24.4438 85.0669 li
117.778 178.4 li
cp
@
113.333 179.467 mo
26.667 307.733 li
26.667 92.7998 li
113.333 179.467 li
cp
.0588235 .364706 .439216 rgb
f
113.333 179.467 mo
26.667 307.733 li
26.667 92.7998 li
113.333 179.467 li
cp
@
108.889 180.533 mo
28.8892 298.933 li
28.8892 100.533 li
108.889 180.533 li
cp
.705882 .992157 .67451 rgb
f
108.889 180.533 mo
28.8892 298.933 li
28.8892 100.533 li
108.889 180.533 li
cp
@
104.444 181.6 mo
31.1108 290.133 li
31.1108 108.267 li
104.444 181.6 li
cp
.0588235 .364706 .439216 rgb
f
104.444 181.6 mo
31.1108 290.133 li
31.1108 108.267 li
104.444 181.6 li
cp
@
100 182.667 mo
33.333 281.333 li
33.333 116 li
100 182.667 li
cp
.705882 .992157 .67451 rgb
f
100 182.667 mo
33.333 281.333 li
33.333 116 li
100 182.667 li
cp
@
95.5562 183.733 mo
35.5562 272.533 li
35.5562 123.733 li
95.5562 183.733 li
cp
.0588235 .364706 .439216 rgb
f
95.5562 183.733 mo
35.5562 272.533 li
35.5562 123.733 li
95.5562 183.733 li
cp
@
91.1108 184.8 mo
37.7778 263.733 li
37.7778 131.467 li
91.1108 184.8 li
cp
.705882 .992157 .67451 rgb
f
91.1108 184.8 mo
37.7778 263.733 li
37.7778 131.467 li
91.1108 184.8 li
cp
@
86.667 185.867 mo
40 254.933 li
40 139.2 li
86.667 185.867 li
cp
.0588235 .364706 .439216 rgb
f
86.667 185.867 mo
40 254.933 li
40 139.2 li
86.667 185.867 li
cp
@
82.2222 186.933 mo
42.2222 246.133 li
42.2222 146.933 li
82.2222 186.933 li
cp
.705882 .992157 .67451 rgb
f
82.2222 186.933 mo
42.2222 246.133 li
42.2222 146.933 li
82.2222 186.933 li
cp
@
77.7778 188 mo
44.4438 237.333 li
44.4438 154.667 li
77.7778 188 li
cp
.0588235 .364706 .439216 rgb
f
77.7778 188 mo
44.4438 237.333 li
44.4438 154.667 li
77.7778 188 li
cp
@
73.333 189.067 mo
46.667 228.533 li
46.667 162.4 li
73.333 189.067 li
cp
.705882 .992157 .67451 rgb
f
73.333 189.067 mo
46.667 228.533 li
46.667 162.4 li
73.333 189.067 li
cp
@
68.8892 190.133 mo
48.8892 219.733 li
48.8892 170.133 li
68.8892 190.133 li
cp
.0588235 .364706 .439216 rgb
f
68.8892 190.133 mo
48.8892 219.733 li
48.8892 170.133 li
68.8892 190.133 li
cp
@
64.4438 191.2 mo
51.1108 210.933 li
51.1108 177.867 li
64.4438 191.2 li
cp
.705882 .992157 .67451 rgb
f
64.4438 191.2 mo
51.1108 210.933 li
51.1108 177.867 li
64.4438 191.2 li
cp
@
60 192.267 mo
53.333 202.133 li
53.333 185.6 li
60 192.267 li
cp
.0588235 .364706 .439216 rgb
f
60 192.267 mo
53.333 202.133 li
53.333 185.6 li
60 192.267 li
cp
@
55.5562 193.333 mo
55.5562 193.333 li
55.5562 193.333 li
cp
.705882 .992157 .67451 rgb
f
55.5562 193.333 mo
55.5562 193.333 li
55.5562 193.333 li
cp
@
500 166.667 mo
273.333 0 li
736.667 0 li
500 166.667 li
cp
.0588235 .364706 .439216 rgb
f
500 166.667 mo
273.333 0 li
736.667 0 li
500 166.667 li
cp
@
500.133 162.222 mo
282.533 2.22217 li
727.333 2.22217 li
500.133 162.222 li
cp
.705882 .992157 .67451 rgb
f
500.133 162.222 mo
282.533 2.22217 li
727.333 2.22217 li
500.133 162.222 li
cp
@
500.267 157.778 mo
291.733 4.44385 li
718 4.44385 li
500.267 157.778 li
cp
.0588235 .364706 .439216 rgb
f
500.267 157.778 mo
291.733 4.44385 li
718 4.44385 li
500.267 157.778 li
cp
@
500.4 153.333 mo
300.933 6.66699 li
708.667 6.66699 li
500.4 153.333 li
cp
.705882 .992157 .67451 rgb
f
500.4 153.333 mo
300.933 6.66699 li
708.667 6.66699 li
500.4 153.333 li
cp
@
500.533 148.889 mo
310.133 8.88916 li
699.333 8.88916 li
500.533 148.889 li
cp
.0588235 .364706 .439216 rgb
f
500.533 148.889 mo
310.133 8.88916 li
699.333 8.88916 li
500.533 148.889 li
cp
@
500.667 144.444 mo
319.333 11.1108 li
690 11.1108 li
500.667 144.444 li
cp
.705882 .992157 .67451 rgb
f
500.667 144.444 mo
319.333 11.1108 li
690 11.1108 li
500.667 144.444 li
cp
@
500.8 140 mo
328.533 13.333 li
680.667 13.333 li
500.8 140 li
cp
.0588235 .364706 .439216 rgb
f
500.8 140 mo
328.533 13.333 li
680.667 13.333 li
500.8 140 li
cp
@
500.933 135.556 mo
337.733 15.5562 li
671.333 15.5562 li
500.933 135.556 li
cp
.705882 .992157 .67451 rgb
f
500.933 135.556 mo
337.733 15.5562 li
671.333 15.5562 li
500.933 135.556 li
cp
@
501.067 131.111 mo
346.933 17.7778 li
662 17.7778 li
501.067 131.111 li
cp
.0588235 .364706 .439216 rgb
f
501.067 131.111 mo
346.933 17.7778 li
662 17.7778 li
501.067 131.111 li
cp
@
501.2 126.667 mo
356.133 20 li
652.667 20 li
501.2 126.667 li
cp
.705882 .992157 .67451 rgb
f
501.2 126.667 mo
356.133 20 li
652.667 20 li
501.2 126.667 li
cp
@
501.333 122.222 mo
365.333 22.2222 li
643.333 22.2222 li
501.333 122.222 li
cp
.0588235 .364706 .439216 rgb
f
501.333 122.222 mo
365.333 22.2222 li
643.333 22.2222 li
501.333 122.222 li
cp
@
501.467 117.778 mo
374.533 24.4438 li
634 24.4438 li
501.467 117.778 li
cp
.705882 .992157 .67451 rgb
f
501.467 117.778 mo
374.533 24.4438 li
634 24.4438 li
501.467 117.778 li
cp
@
501.6 113.333 mo
383.733 26.667 li
624.667 26.667 li
501.6 113.333 li
cp
.0588235 .364706 .439216 rgb
f
501.6 113.333 mo
383.733 26.667 li
624.667 26.667 li
501.6 113.333 li
cp
@
501.733 108.889 mo
392.933 28.8892 li
615.333 28.8892 li
501.733 108.889 li
cp
.705882 .992157 .67451 rgb
f
501.733 108.889 mo
392.933 28.8892 li
615.333 28.8892 li
501.733 108.889 li
cp
@
501.867 104.444 mo
402.133 31.1108 li
606 31.1108 li
501.867 104.444 li
cp
.0588235 .364706 .439216 rgb
f
501.867 104.444 mo
402.133 31.1108 li
606 31.1108 li
501.867 104.444 li
cp
@
502 100 mo
411.333 33.333 li
596.667 33.333 li
502 100 li
cp
.705882 .992157 .67451 rgb
f
502 100 mo
411.333 33.333 li
596.667 33.333 li
502 100 li
cp
@
502.133 95.5562 mo
420.533 35.5562 li
587.333 35.5562 li
502.133 95.5562 li
cp
.0588235 .364706 .439216 rgb
f
502.133 95.5562 mo
420.533 35.5562 li
587.333 35.5562 li
502.133 95.5562 li
cp
@
502.267 91.1108 mo
429.733 37.7778 li
578 37.7778 li
502.267 91.1108 li
cp
.705882 .992157 .67451 rgb
f
502.267 91.1108 mo
429.733 37.7778 li
578 37.7778 li
502.267 91.1108 li
cp
@
502.4 86.667 mo
438.933 40 li
568.667 40 li
502.4 86.667 li
cp
.0588235 .364706 .439216 rgb
f
502.4 86.667 mo
438.933 40 li
568.667 40 li
502.4 86.667 li
cp
@
502.533 82.2222 mo
448.133 42.2222 li
559.333 42.2222 li
502.533 82.2222 li
cp
.705882 .992157 .67451 rgb
f
502.533 82.2222 mo
448.133 42.2222 li
559.333 42.2222 li
502.533 82.2222 li
cp
@
502.667 77.7778 mo
457.333 44.4438 li
550 44.4438 li
502.667 77.7778 li
cp
.0588235 .364706 .439216 rgb
f
502.667 77.7778 mo
457.333 44.4438 li
550 44.4438 li
502.667 77.7778 li
cp
@
502.8 73.333 mo
466.533 46.667 li
540.667 46.667 li
502.8 73.333 li
cp
.705882 .992157 .67451 rgb
f
502.8 73.333 mo
466.533 46.667 li
540.667 46.667 li
502.8 73.333 li
cp
@
502.933 68.8892 mo
475.733 48.8892 li
531.333 48.8892 li
502.933 68.8892 li
cp
.0588235 .364706 .439216 rgb
f
502.933 68.8892 mo
475.733 48.8892 li
531.333 48.8892 li
502.933 68.8892 li
cp
@
503.067 64.4438 mo
484.933 51.1108 li
522 51.1108 li
503.067 64.4438 li
cp
.705882 .992157 .67451 rgb
f
503.067 64.4438 mo
484.933 51.1108 li
522 51.1108 li
503.067 64.4438 li
cp
@
503.2 60 mo
494.133 53.333 li
512.667 53.333 li
503.2 60 li
cp
.0588235 .364706 .439216 rgb
f
503.2 60 mo
494.133 53.333 li
512.667 53.333 li
503.2 60 li
cp
@
503.333 55.5562 mo
503.333 55.5562 li
503.333 55.5562 li
cp
.705882 .992157 .67451 rgb
f
503.333 55.5562 mo
503.333 55.5562 li
503.333 55.5562 li
cp
@
500 166.667 mo
736.667 0 li
613.333 333.333 li
500 166.667 li
cp
.0588235 .364706 .439216 rgb
f
500 166.667 mo
736.667 0 li
613.333 333.333 li
500 166.667 li
cp
@
504.667 166.667 mo
731.867 6.66699 li
613.467 326.667 li
504.667 166.667 li
cp
.705882 .992157 .67451 rgb
f
504.667 166.667 mo
731.867 6.66699 li
613.467 326.667 li
504.667 166.667 li
cp
@
509.333 166.667 mo
727.067 13.333 li
613.6 320 li
509.333 166.667 li
cp
.0588235 .364706 .439216 rgb
f
509.333 166.667 mo
727.067 13.333 li
613.6 320 li
509.333 166.667 li
cp
@
514 166.667 mo
722.267 20 li
613.733 313.333 li
514 166.667 li
cp
.705882 .992157 .67451 rgb
f
514 166.667 mo
722.267 20 li
613.733 313.333 li
514 166.667 li
cp
@
518.667 166.667 mo
717.467 26.667 li
613.867 306.667 li
518.667 166.667 li
cp
.0588235 .364706 .439216 rgb
f
518.667 166.667 mo
717.467 26.667 li
613.867 306.667 li
518.667 166.667 li
cp
@
523.333 166.667 mo
712.667 33.333 li
614 300 li
523.333 166.667 li
cp
.705882 .992157 .67451 rgb
f
523.333 166.667 mo
712.667 33.333 li
614 300 li
523.333 166.667 li
cp
@
528 166.667 mo
707.867 40 li
614.133 293.333 li
528 166.667 li
cp
.0588235 .364706 .439216 rgb
f
528 166.667 mo
707.867 40 li
614.133 293.333 li
528 166.667 li
cp
@
532.667 166.667 mo
703.067 46.667 li
614.267 286.667 li
532.667 166.667 li
cp
.705882 .992157 .67451 rgb
f
532.667 166.667 mo
703.067 46.667 li
614.267 286.667 li
532.667 166.667 li
cp
@
537.333 166.667 mo
698.267 53.333 li
614.4 280 li
537.333 166.667 li
cp
.0588235 .364706 .439216 rgb
f
537.333 166.667 mo
698.267 53.333 li
614.4 280 li
537.333 166.667 li
cp
@
542 166.667 mo
693.467 60 li
614.533 273.333 li
542 166.667 li
cp
.705882 .992157 .67451 rgb
f
542 166.667 mo
693.467 60 li
614.533 273.333 li
542 166.667 li
cp
@
546.667 166.667 mo
688.667 66.667 li
614.667 266.667 li
546.667 166.667 li
cp
.0588235 .364706 .439216 rgb
f
546.667 166.667 mo
688.667 66.667 li
614.667 266.667 li
546.667 166.667 li
cp
@
551.333 166.667 mo
683.867 73.333 li
614.8 260 li
551.333 166.667 li
cp
.705882 .992157 .67451 rgb
f
551.333 166.667 mo
683.867 73.333 li
614.8 260 li
551.333 166.667 li
cp
@
556 166.667 mo
679.067 80 li
614.933 253.333 li
556 166.667 li
cp
.0588235 .364706 .439216 rgb
f
556 166.667 mo
679.067 80 li
614.933 253.333 li
556 166.667 li
cp
@
560.667 166.667 mo
674.267 86.667 li
615.067 246.667 li
560.667 166.667 li
cp
.705882 .992157 .67451 rgb
f
560.667 166.667 mo
674.267 86.667 li
615.067 246.667 li
560.667 166.667 li
cp
@
565.333 166.667 mo
669.467 93.333 li
615.2 240 li
565.333 166.667 li
cp
.0588235 .364706 .439216 rgb
f
565.333 166.667 mo
669.467 93.333 li
615.2 240 li
565.333 166.667 li
cp
@
570 166.667 mo
664.667 100 li
615.333 233.333 li
570 166.667 li
cp
.705882 .992157 .67451 rgb
f
570 166.667 mo
664.667 100 li
615.333 233.333 li
570 166.667 li
cp
@
574.667 166.667 mo
659.867 106.667 li
615.467 226.667 li
574.667 166.667 li
cp
.0588235 .364706 .439216 rgb
f
574.667 166.667 mo
659.867 106.667 li
615.467 226.667 li
574.667 166.667 li
cp
@
579.333 166.667 mo
655.067 113.333 li
615.6 220 li
579.333 166.667 li
cp
.705882 .992157 .67451 rgb
f
579.333 166.667 mo
655.067 113.333 li
615.6 220 li
579.333 166.667 li
cp
@
584 166.667 mo
650.267 120 li
615.733 213.333 li
584 166.667 li
cp
.0588235 .364706 .439216 rgb
f
584 166.667 mo
650.267 120 li
615.733 213.333 li
584 166.667 li
cp
@
588.667 166.667 mo
645.467 126.667 li
615.867 206.667 li
588.667 166.667 li
cp
.705882 .992157 .67451 rgb
f
588.667 166.667 mo
645.467 126.667 li
615.867 206.667 li
588.667 166.667 li
cp
@
593.333 166.667 mo
640.667 133.333 li
616 200 li
593.333 166.667 li
cp
.0588235 .364706 .439216 rgb
f
593.333 166.667 mo
640.667 133.333 li
616 200 li
593.333 166.667 li
cp
@
598 166.667 mo
635.867 140 li
616.133 193.333 li
598 166.667 li
cp
.705882 .992157 .67451 rgb
f
598 166.667 mo
635.867 140 li
616.133 193.333 li
598 166.667 li
cp
@
602.667 166.667 mo
631.067 146.667 li
616.267 186.667 li
602.667 166.667 li
cp
.0588235 .364706 .439216 rgb
f
602.667 166.667 mo
631.067 146.667 li
616.267 186.667 li
602.667 166.667 li
cp
@
607.333 166.667 mo
626.267 153.333 li
616.4 180 li
607.333 166.667 li
cp
.705882 .992157 .67451 rgb
f
607.333 166.667 mo
626.267 153.333 li
616.4 180 li
607.333 166.667 li
cp
@
612 166.667 mo
621.467 160 li
616.533 173.333 li
612 166.667 li
cp
.0588235 .364706 .439216 rgb
f
612 166.667 mo
621.467 160 li
616.533 173.333 li
612 166.667 li
cp
@
616.667 166.667 mo
616.667 166.667 li
616.667 166.667 li
cp
.705882 .992157 .67451 rgb
f
616.667 166.667 mo
616.667 166.667 li
616.667 166.667 li
cp
@
500 166.667 mo
613.333 333.333 li
326.667 280 li
500 166.667 li
cp
.0588235 .364706 .439216 rgb
f
500 166.667 mo
613.333 333.333 li
326.667 280 li
500 166.667 li
cp
@
499.2 170.4 mo
608 330.4 li
332.8 279.2 li
499.2 170.4 li
cp
.705882 .992157 .67451 rgb
f
499.2 170.4 mo
608 330.4 li
332.8 279.2 li
499.2 170.4 li
cp
@
498.4 174.133 mo
602.667 327.467 li
338.933 278.4 li
498.4 174.133 li
cp
.0588235 .364706 .439216 rgb
f
498.4 174.133 mo
602.667 327.467 li
338.933 278.4 li
498.4 174.133 li
cp
@
497.6 177.867 mo
597.333 324.533 li
345.067 277.6 li
497.6 177.867 li
cp
.705882 .992157 .67451 rgb
f
497.6 177.867 mo
597.333 324.533 li
345.067 277.6 li
497.6 177.867 li
cp
@
496.8 181.6 mo
592 321.6 li
351.2 276.8 li
496.8 181.6 li
cp
.0588235 .364706 .439216 rgb
f
496.8 181.6 mo
592 321.6 li
351.2 276.8 li
496.8 181.6 li
cp
@
496 185.333 mo
586.667 318.667 li
357.333 276 li
496 185.333 li
cp
.705882 .992157 .67451 rgb
f
496 185.333 mo
586.667 318.667 li
357.333 276 li
496 185.333 li
cp
@
495.2 189.067 mo
581.333 315.733 li
363.467 275.2 li
495.2 189.067 li
cp
.0588235 .364706 .439216 rgb
f
495.2 189.067 mo
581.333 315.733 li
363.467 275.2 li
495.2 189.067 li
cp
@
494.4 192.8 mo
576 312.8 li
369.6 274.4 li
494.4 192.8 li
cp
.705882 .992157 .67451 rgb
f
494.4 192.8 mo
576 312.8 li
369.6 274.4 li
494.4 192.8 li
cp
@
493.6 196.533 mo
570.667 309.867 li
375.733 273.6 li
493.6 196.533 li
cp
.0588235 .364706 .439216 rgb
f
493.6 196.533 mo
570.667 309.867 li
375.733 273.6 li
493.6 196.533 li
cp
@
492.8 200.267 mo
565.333 306.933 li
381.867 272.8 li
492.8 200.267 li
cp
.705882 .992157 .67451 rgb
f
492.8 200.267 mo
565.333 306.933 li
381.867 272.8 li
492.8 200.267 li
cp
@
492 204 mo
560 304 li
388 272 li
492 204 li
cp
.0588235 .364706 .439216 rgb
f
492 204 mo
560 304 li
388 272 li
492 204 li
cp
@
491.2 207.733 mo
554.667 301.067 li
394.133 271.2 li
491.2 207.733 li
cp
.705882 .992157 .67451 rgb
f
491.2 207.733 mo
554.667 301.067 li
394.133 271.2 li
491.2 207.733 li
cp
@
490.4 211.467 mo
549.333 298.133 li
400.267 270.4 li
490.4 211.467 li
cp
.0588235 .364706 .439216 rgb
f
490.4 211.467 mo
549.333 298.133 li
400.267 270.4 li
490.4 211.467 li
cp
@
489.6 215.2 mo
544 295.2 li
406.4 269.6 li
489.6 215.2 li
cp
.705882 .992157 .67451 rgb
f
489.6 215.2 mo
544 295.2 li
406.4 269.6 li
489.6 215.2 li
cp
@
488.8 218.933 mo
538.667 292.267 li
412.533 268.8 li
488.8 218.933 li
cp
.0588235 .364706 .439216 rgb
f
488.8 218.933 mo
538.667 292.267 li
412.533 268.8 li
488.8 218.933 li
cp
@
488 222.667 mo
533.333 289.333 li
418.667 268 li
488 222.667 li
cp
.705882 .992157 .67451 rgb
f
488 222.667 mo
533.333 289.333 li
418.667 268 li
488 222.667 li
cp
@
487.2 226.4 mo
528 286.4 li
424.8 267.2 li
487.2 226.4 li
cp
.0588235 .364706 .439216 rgb
f
487.2 226.4 mo
528 286.4 li
424.8 267.2 li
487.2 226.4 li
cp
@
486.4 230.133 mo
522.667 283.467 li
430.933 266.4 li
486.4 230.133 li
cp
.705882 .992157 .67451 rgb
f
486.4 230.133 mo
522.667 283.467 li
430.933 266.4 li
486.4 230.133 li
cp
@
485.6 233.867 mo
517.333 280.533 li
437.067 265.6 li
485.6 233.867 li
cp
.0588235 .364706 .439216 rgb
f
485.6 233.867 mo
517.333 280.533 li
437.067 265.6 li
485.6 233.867 li
cp
@
484.8 237.6 mo
512 277.6 li
443.2 264.8 li
484.8 237.6 li
cp
.705882 .992157 .67451 rgb
f
484.8 237.6 mo
512 277.6 li
443.2 264.8 li
484.8 237.6 li
cp
@
484 241.333 mo
506.667 274.667 li
449.333 264 li
484 241.333 li
cp
.0588235 .364706 .439216 rgb
f
484 241.333 mo
506.667 274.667 li
449.333 264 li
484 241.333 li
cp
@
483.2 245.067 mo
501.333 271.733 li
455.467 263.2 li
483.2 245.067 li
cp
.705882 .992157 .67451 rgb
f
483.2 245.067 mo
501.333 271.733 li
455.467 263.2 li
483.2 245.067 li
cp
@
482.4 248.8 mo
496 268.8 li
461.6 262.4 li
482.4 248.8 li
cp
.0588235 .364706 .439216 rgb
f
482.4 248.8 mo
496 268.8 li
461.6 262.4 li
482.4 248.8 li
cp
@
481.6 252.533 mo
490.667 265.867 li
467.733 261.6 li
481.6 252.533 li
cp
.705882 .992157 .67451 rgb
f
481.6 252.533 mo
490.667 265.867 li
467.733 261.6 li
481.6 252.533 li
cp
@
480.8 256.267 mo
485.333 262.933 li
473.867 260.8 li
480.8 256.267 li
cp
.0588235 .364706 .439216 rgb
f
480.8 256.267 mo
485.333 262.933 li
473.867 260.8 li
480.8 256.267 li
cp
@
480 260 mo
480 260 li
480 260 li
cp
.705882 .992157 .67451 rgb
f
480 260 mo
480 260 li
480 260 li
cp
@
500 166.667 mo
326.667 280 li
273.333 0 li
500 166.667 li
cp
.0588235 .364706 .439216 rgb
f
500 166.667 mo
326.667 280 li
273.333 0 li
500 166.667 li
cp
@
494.667 165.956 mo
328.267 274.756 li
277.067 5.95605 li
494.667 165.956 li
cp
.705882 .992157 .67451 rgb
f
494.667 165.956 mo
328.267 274.756 li
277.067 5.95605 li
494.667 165.956 li
cp
@
489.333 165.244 mo
329.867 269.511 li
280.8 11.9111 li
489.333 165.244 li
cp
.0588235 .364706 .439216 rgb
f
489.333 165.244 mo
329.867 269.511 li
280.8 11.9111 li
489.333 165.244 li
cp
@
484 164.533 mo
331.467 264.267 li
284.533 17.8672 li
484 164.533 li
cp
.705882 .992157 .67451 rgb
f
484 164.533 mo
331.467 264.267 li
284.533 17.8672 li
484 164.533 li
cp
@
478.667 163.822 mo
333.067 259.022 li
288.267 23.8223 li
478.667 163.822 li
cp
.0588235 .364706 .439216 rgb
f
478.667 163.822 mo
333.067 259.022 li
288.267 23.8223 li
478.667 163.822 li
cp
@
473.333 163.111 mo
334.667 253.778 li
292 29.7778 li
473.333 163.111 li
cp
.705882 .992157 .67451 rgb
f
473.333 163.111 mo
334.667 253.778 li
292 29.7778 li
473.333 163.111 li
cp
@
468 162.4 mo
336.267 248.533 li
295.733 35.7329 li
468 162.4 li
cp
.0588235 .364706 .439216 rgb
f
468 162.4 mo
336.267 248.533 li
295.733 35.7329 li
468 162.4 li
cp
@
462.667 161.689 mo
337.867 243.289 li
299.467 41.689 li
462.667 161.689 li
cp
.705882 .992157 .67451 rgb
f
462.667 161.689 mo
337.867 243.289 li
299.467 41.689 li
462.667 161.689 li
cp
@
457.333 160.978 mo
339.467 238.044 li
303.2 47.644 li
457.333 160.978 li
cp
.0588235 .364706 .439216 rgb
f
457.333 160.978 mo
339.467 238.044 li
303.2 47.644 li
457.333 160.978 li
cp
@
452 160.267 mo
341.067 232.8 li
306.933 53.6001 li
452 160.267 li
cp
.705882 .992157 .67451 rgb
f
452 160.267 mo
341.067 232.8 li
306.933 53.6001 li
452 160.267 li
cp
@
446.667 159.556 mo
342.667 227.556 li
310.667 59.5562 li
446.667 159.556 li
cp
.0588235 .364706 .439216 rgb
f
446.667 159.556 mo
342.667 227.556 li
310.667 59.5562 li
446.667 159.556 li
cp
@
441.333 158.844 mo
344.267 222.311 li
314.4 65.5107 li
441.333 158.844 li
cp
.705882 .992157 .67451 rgb
f
441.333 158.844 mo
344.267 222.311 li
314.4 65.5107 li
441.333 158.844 li
cp
@
436 158.133 mo
345.867 217.067 li
318.133 71.4668 li
436 158.133 li
cp
.0588235 .364706 .439216 rgb
f
436 158.133 mo
345.867 217.067 li
318.133 71.4668 li
436 158.133 li
cp
@
430.667 157.422 mo
347.467 211.822 li
321.867 77.4219 li
430.667 157.422 li
cp
.705882 .992157 .67451 rgb
f
430.667 157.422 mo
347.467 211.822 li
321.867 77.4219 li
430.667 157.422 li
cp
@
425.333 156.711 mo
349.067 206.578 li
325.6 83.3779 li
425.333 156.711 li
cp
.0588235 .364706 .439216 rgb
f
425.333 156.711 mo
349.067 206.578 li
325.6 83.3779 li
425.333 156.711 li
cp
@
420 156 mo
350.667 201.333 li
329.333 89.333 li
420 156 li
cp
.705882 .992157 .67451 rgb
f
420 156 mo
350.667 201.333 li
329.333 89.333 li
420 156 li
cp
@
414.667 155.289 mo
352.267 196.089 li
333.067 95.2891 li
414.667 155.289 li
cp
.0588235 .364706 .439216 rgb
f
414.667 155.289 mo
352.267 196.089 li
333.067 95.2891 li
414.667 155.289 li
cp
@
409.333 154.578 mo
353.867 190.844 li
336.8 101.244 li
409.333 154.578 li
cp
.705882 .992157 .67451 rgb
f
409.333 154.578 mo
353.867 190.844 li
336.8 101.244 li
409.333 154.578 li
cp
@
404 153.867 mo
355.467 185.6 li
340.533 107.2 li
404 153.867 li
cp
.0588235 .364706 .439216 rgb
f
404 153.867 mo
355.467 185.6 li
340.533 107.2 li
404 153.867 li
cp
@
398.667 153.156 mo
357.067 180.356 li
344.267 113.156 li
398.667 153.156 li
cp
.705882 .992157 .67451 rgb
f
398.667 153.156 mo
357.067 180.356 li
344.267 113.156 li
398.667 153.156 li
cp
@
393.333 152.444 mo
358.667 175.111 li
348 119.111 li
393.333 152.444 li
cp
.0588235 .364706 .439216 rgb
f
393.333 152.444 mo
358.667 175.111 li
348 119.111 li
393.333 152.444 li
cp
@
388 151.733 mo
360.267 169.867 li
351.733 125.067 li
388 151.733 li
cp
.705882 .992157 .67451 rgb
f
388 151.733 mo
360.267 169.867 li
351.733 125.067 li
388 151.733 li
cp
@
382.667 151.022 mo
361.867 164.622 li
355.467 131.022 li
382.667 151.022 li
cp
.0588235 .364706 .439216 rgb
f
382.667 151.022 mo
361.867 164.622 li
355.467 131.022 li
382.667 151.022 li
cp
@
377.333 150.311 mo
363.467 159.378 li
359.2 136.978 li
377.333 150.311 li
cp
.705882 .992157 .67451 rgb
f
377.333 150.311 mo
363.467 159.378 li
359.2 136.978 li
377.333 150.311 li
cp
@
372 149.6 mo
365.067 154.133 li
362.933 142.933 li
372 149.6 li
cp
.0588235 .364706 .439216 rgb
f
372 149.6 mo
365.067 154.133 li
362.933 142.933 li
372 149.6 li
cp
@
366.667 148.889 mo
366.667 148.889 li
366.667 148.889 li
cp
.705882 .992157 .67451 rgb
f
366.667 148.889 mo
366.667 148.889 li
366.667 148.889 li
cp
@
833.333 166.667 mo
736.667 0 li
1000 0 li
833.333 166.667 li
cp
.0588235 .364706 .439216 rgb
f
833.333 166.667 mo
736.667 0 li
1000 0 li
833.333 166.667 li
cp
@
834.267 162.222 mo
741.467 2.22217 li
994.267 2.22217 li
834.267 162.222 li
cp
.705882 .992157 .67451 rgb
f
834.267 162.222 mo
741.467 2.22217 li
994.267 2.22217 li
834.267 162.222 li
cp
@
835.2 157.778 mo
746.267 4.44385 li
988.533 4.44385 li
835.2 157.778 li
cp
.0588235 .364706 .439216 rgb
f
835.2 157.778 mo
746.267 4.44385 li
988.533 4.44385 li
835.2 157.778 li
cp
@
836.133 153.333 mo
751.067 6.66699 li
982.8 6.66699 li
836.133 153.333 li
cp
.705882 .992157 .67451 rgb
f
836.133 153.333 mo
751.067 6.66699 li
982.8 6.66699 li
836.133 153.333 li
cp
@
837.067 148.889 mo
755.867 8.88916 li
977.067 8.88916 li
837.067 148.889 li
cp
.0588235 .364706 .439216 rgb
f
837.067 148.889 mo
755.867 8.88916 li
977.067 8.88916 li
837.067 148.889 li
cp
@
838 144.444 mo
760.667 11.1108 li
971.333 11.1108 li
838 144.444 li
cp
.705882 .992157 .67451 rgb
f
838 144.444 mo
760.667 11.1108 li
971.333 11.1108 li
838 144.444 li
cp
@
838.933 140 mo
765.467 13.333 li
965.6 13.333 li
838.933 140 li
cp
.0588235 .364706 .439216 rgb
f
838.933 140 mo
765.467 13.333 li
965.6 13.333 li
838.933 140 li
cp
@
839.867 135.556 mo
770.267 15.5562 li
959.867 15.5562 li
839.867 135.556 li
cp
.705882 .992157 .67451 rgb
f
839.867 135.556 mo
770.267 15.5562 li
959.867 15.5562 li
839.867 135.556 li
cp
@
840.8 131.111 mo
775.067 17.7778 li
954.133 17.7778 li
840.8 131.111 li
cp
.0588235 .364706 .439216 rgb
f
840.8 131.111 mo
775.067 17.7778 li
954.133 17.7778 li
840.8 131.111 li
cp
@
841.733 126.667 mo
779.867 20 li
948.4 20 li
841.733 126.667 li
cp
.705882 .992157 .67451 rgb
f
841.733 126.667 mo
779.867 20 li
948.4 20 li
841.733 126.667 li
cp
@
842.667 122.222 mo
784.667 22.2222 li
942.667 22.2222 li
842.667 122.222 li
cp
.0588235 .364706 .439216 rgb
f
842.667 122.222 mo
784.667 22.2222 li
942.667 22.2222 li
842.667 122.222 li
cp
@
843.6 117.778 mo
789.467 24.4438 li
936.933 24.4438 li
843.6 117.778 li
cp
.705882 .992157 .67451 rgb
f
843.6 117.778 mo
789.467 24.4438 li
936.933 24.4438 li
843.6 117.778 li
cp
@
844.533 113.333 mo
794.267 26.667 li
931.2 26.667 li
844.533 113.333 li
cp
.0588235 .364706 .439216 rgb
f
844.533 113.333 mo
794.267 26.667 li
931.2 26.667 li
844.533 113.333 li
cp
@
845.467 108.889 mo
799.067 28.8892 li
925.467 28.8892 li
845.467 108.889 li
cp
.705882 .992157 .67451 rgb
f
845.467 108.889 mo
799.067 28.8892 li
925.467 28.8892 li
845.467 108.889 li
cp
@
846.4 104.444 mo
803.867 31.1108 li
919.733 31.1108 li
846.4 104.444 li
cp
.0588235 .364706 .439216 rgb
f
846.4 104.444 mo
803.867 31.1108 li
919.733 31.1108 li
846.4 104.444 li
cp
@
847.333 100 mo
808.667 33.333 li
914 33.333 li
847.333 100 li
cp
.705882 .992157 .67451 rgb
f
847.333 100 mo
808.667 33.333 li
914 33.333 li
847.333 100 li
cp
@
848.267 95.5562 mo
813.467 35.5562 li
908.267 35.5562 li
848.267 95.5562 li
cp
.0588235 .364706 .439216 rgb
f
848.267 95.5562 mo
813.467 35.5562 li
908.267 35.5562 li
848.267 95.5562 li
cp
@
849.2 91.1108 mo
818.267 37.7778 li
902.533 37.7778 li
849.2 91.1108 li
cp
.705882 .992157 .67451 rgb
f
849.2 91.1108 mo
818.267 37.7778 li
902.533 37.7778 li
849.2 91.1108 li
cp
@
850.133 86.667 mo
823.067 40 li
896.8 40 li
850.133 86.667 li
cp
.0588235 .364706 .439216 rgb
f
850.133 86.667 mo
823.067 40 li
896.8 40 li
850.133 86.667 li
cp
@
851.067 82.2222 mo
827.867 42.2222 li
891.067 42.2222 li
851.067 82.2222 li
cp
.705882 .992157 .67451 rgb
f
851.067 82.2222 mo
827.867 42.2222 li
891.067 42.2222 li
851.067 82.2222 li
cp
@
852 77.7778 mo
832.667 44.4438 li
885.333 44.4438 li
852 77.7778 li
cp
.0588235 .364706 .439216 rgb
f
852 77.7778 mo
832.667 44.4438 li
885.333 44.4438 li
852 77.7778 li
cp
@
852.933 73.333 mo
837.467 46.667 li
879.6 46.667 li
852.933 73.333 li
cp
.705882 .992157 .67451 rgb
f
852.933 73.333 mo
837.467 46.667 li
879.6 46.667 li
852.933 73.333 li
cp
@
853.867 68.8892 mo
842.267 48.8892 li
873.867 48.8892 li
853.867 68.8892 li
cp
.0588235 .364706 .439216 rgb
f
853.867 68.8892 mo
842.267 48.8892 li
873.867 48.8892 li
853.867 68.8892 li
cp
@
854.8 64.4438 mo
847.067 51.1108 li
868.133 51.1108 li
854.8 64.4438 li
cp
.705882 .992157 .67451 rgb
f
854.8 64.4438 mo
847.067 51.1108 li
868.133 51.1108 li
854.8 64.4438 li
cp
@
855.733 60 mo
851.867 53.333 li
862.4 53.333 li
855.733 60 li
cp
.0588235 .364706 .439216 rgb
f
855.733 60 mo
851.867 53.333 li
862.4 53.333 li
855.733 60 li
cp
@
856.667 55.5562 mo
856.667 55.5562 li
856.667 55.5562 li
cp
.705882 .992157 .67451 rgb
f
856.667 55.5562 mo
856.667 55.5562 li
856.667 55.5562 li
cp
@
833.333 166.667 mo
1000 0 li
1000 386.667 li
833.333 166.667 li
cp
.0588235 .364706 .439216 rgb
f
833.333 166.667 mo
1000 0 li
1000 386.667 li
833.333 166.667 li
cp
@
837.778 167.378 mo
997.778 7.37793 li
997.778 378.578 li
837.778 167.378 li
cp
.705882 .992157 .67451 rgb
f
837.778 167.378 mo
997.778 7.37793 li
997.778 378.578 li
837.778 167.378 li
cp
@
842.222 168.089 mo
995.556 14.7559 li
995.556 370.489 li
842.222 168.089 li
cp
.0588235 .364706 .439216 rgb
f
842.222 168.089 mo
995.556 14.7559 li
995.556 370.489 li
842.222 168.089 li
cp
@
846.667 168.8 mo
993.333 22.1328 li
993.333 362.4 li
846.667 168.8 li
cp
.705882 .992157 .67451 rgb
f
846.667 168.8 mo
993.333 22.1328 li
993.333 362.4 li
846.667 168.8 li
cp
@
851.111 169.511 mo
991.111 29.5107 li
991.111 354.311 li
851.111 169.511 li
cp
.0588235 .364706 .439216 rgb
f
851.111 169.511 mo
991.111 29.5107 li
991.111 354.311 li
851.111 169.511 li
cp
@
855.556 170.222 mo
988.889 36.8892 li
988.889 346.222 li
855.556 170.222 li
cp
.705882 .992157 .67451 rgb
f
855.556 170.222 mo
988.889 36.8892 li
988.889 346.222 li
855.556 170.222 li
cp
@
860 170.933 mo
986.667 44.2671 li
986.667 338.133 li
860 170.933 li
cp
.0588235 .364706 .439216 rgb
f
860 170.933 mo
986.667 44.2671 li
986.667 338.133 li
860 170.933 li
cp
@
864.444 171.644 mo
984.444 51.644 li
984.444 330.044 li
864.444 171.644 li
cp
.705882 .992157 .67451 rgb
f
864.444 171.644 mo
984.444 51.644 li
984.444 330.044 li
864.444 171.644 li
cp
@
868.889 172.356 mo
982.222 59.022 li
982.222 321.956 li
868.889 172.356 li
cp
.0588235 .364706 .439216 rgb
f
868.889 172.356 mo
982.222 59.022 li
982.222 321.956 li
868.889 172.356 li
cp
@
873.333 173.067 mo
980 66.3999 li
980 313.867 li
873.333 173.067 li
cp
.705882 .992157 .67451 rgb
f
873.333 173.067 mo
980 66.3999 li
980 313.867 li
873.333 173.067 li
cp
@
877.778 173.778 mo
977.778 73.7778 li
977.778 305.778 li
877.778 173.778 li
cp
.0588235 .364706 .439216 rgb
f
877.778 173.778 mo
977.778 73.7778 li
977.778 305.778 li
877.778 173.778 li
cp
@
882.222 174.489 mo
975.556 81.1563 li
975.556 297.689 li
882.222 174.489 li
cp
.705882 .992157 .67451 rgb
f
882.222 174.489 mo
975.556 81.1563 li
975.556 297.689 li
882.222 174.489 li
cp
@
886.667 175.2 mo
973.333 88.5332 li
973.333 289.6 li
886.667 175.2 li
cp
.0588235 .364706 .439216 rgb
f
886.667 175.2 mo
973.333 88.5332 li
973.333 289.6 li
886.667 175.2 li
cp
@
891.111 175.911 mo
971.111 95.9111 li
971.111 281.511 li
891.111 175.911 li
cp
.705882 .992157 .67451 rgb
f
891.111 175.911 mo
971.111 95.9111 li
971.111 281.511 li
891.111 175.911 li
cp
@
895.556 176.622 mo
968.889 103.289 li
968.889 273.422 li
895.556 176.622 li
cp
.0588235 .364706 .439216 rgb
f
895.556 176.622 mo
968.889 103.289 li
968.889 273.422 li
895.556 176.622 li
cp
@
900 177.333 mo
966.667 110.667 li
966.667 265.333 li
900 177.333 li
cp
.705882 .992157 .67451 rgb
f
900 177.333 mo
966.667 110.667 li
966.667 265.333 li
900 177.333 li
cp
@
904.444 178.044 mo
964.444 118.044 li
964.444 257.244 li
904.444 178.044 li
cp
.0588235 .364706 .439216 rgb
f
904.444 178.044 mo
964.444 118.044 li
964.444 257.244 li
904.444 178.044 li
cp
@
908.889 178.756 mo
962.222 125.422 li
962.222 249.156 li
908.889 178.756 li
cp
.705882 .992157 .67451 rgb
f
908.889 178.756 mo
962.222 125.422 li
962.222 249.156 li
908.889 178.756 li
cp
@
913.333 179.467 mo
960 132.8 li
960 241.067 li
913.333 179.467 li
cp
.0588235 .364706 .439216 rgb
f
913.333 179.467 mo
960 132.8 li
960 241.067 li
913.333 179.467 li
cp
@
917.778 180.178 mo
957.778 140.178 li
957.778 232.978 li
917.778 180.178 li
cp
.705882 .992157 .67451 rgb
f
917.778 180.178 mo
957.778 140.178 li
957.778 232.978 li
917.778 180.178 li
cp
@
922.222 180.889 mo
955.556 147.556 li
955.556 224.889 li
922.222 180.889 li
cp
.0588235 .364706 .439216 rgb
f
922.222 180.889 mo
955.556 147.556 li
955.556 224.889 li
922.222 180.889 li
cp
@
926.667 181.6 mo
953.333 154.933 li
953.333 216.8 li
926.667 181.6 li
cp
.705882 .992157 .67451 rgb
f
926.667 181.6 mo
953.333 154.933 li
953.333 216.8 li
926.667 181.6 li
cp
@
931.111 182.311 mo
951.111 162.311 li
951.111 208.711 li
931.111 182.311 li
cp
.0588235 .364706 .439216 rgb
f
931.111 182.311 mo
951.111 162.311 li
951.111 208.711 li
931.111 182.311 li
cp
@
935.556 183.022 mo
948.889 169.689 li
948.889 200.622 li
935.556 183.022 li
cp
.705882 .992157 .67451 rgb
f
935.556 183.022 mo
948.889 169.689 li
948.889 200.622 li
935.556 183.022 li
cp
@
940 183.733 mo
946.667 177.067 li
946.667 192.533 li
940 183.733 li
cp
.0588235 .364706 .439216 rgb
f
940 183.733 mo
946.667 177.067 li
946.667 192.533 li
940 183.733 li
cp
@
944.444 184.444 mo
944.444 184.444 li
944.444 184.444 li
cp
.705882 .992157 .67451 rgb
f
944.444 184.444 mo
944.444 184.444 li
944.444 184.444 li
cp
@
833.333 166.667 mo
1000 386.667 li
613.333 333.333 li
833.333 166.667 li
cp
.0588235 .364706 .439216 rgb
f
833.333 166.667 mo
1000 386.667 li
613.333 333.333 li
833.333 166.667 li
cp
@
832.622 171.822 mo
992.622 383.022 li
621.422 331.822 li
832.622 171.822 li
cp
.705882 .992157 .67451 rgb
f
832.622 171.822 mo
992.622 383.022 li
621.422 331.822 li
832.622 171.822 li
cp
@
831.911 176.978 mo
985.244 379.378 li
629.511 330.311 li
831.911 176.978 li
cp
.0588235 .364706 .439216 rgb
f
831.911 176.978 mo
985.244 379.378 li
629.511 330.311 li
831.911 176.978 li
cp
@
831.2 182.133 mo
977.867 375.733 li
637.6 328.8 li
831.2 182.133 li
cp
.705882 .992157 .67451 rgb
f
831.2 182.133 mo
977.867 375.733 li
637.6 328.8 li
831.2 182.133 li
cp
@
830.489 187.289 mo
970.489 372.089 li
645.689 327.289 li
830.489 187.289 li
cp
.0588235 .364706 .439216 rgb
f
830.489 187.289 mo
970.489 372.089 li
645.689 327.289 li
830.489 187.289 li
cp
@
829.778 192.444 mo
963.111 368.444 li
653.778 325.778 li
829.778 192.444 li
cp
.705882 .992157 .67451 rgb
f
829.778 192.444 mo
963.111 368.444 li
653.778 325.778 li
829.778 192.444 li
cp
@
829.067 197.6 mo
955.733 364.8 li
661.867 324.267 li
829.067 197.6 li
cp
.0588235 .364706 .439216 rgb
f
829.067 197.6 mo
955.733 364.8 li
661.867 324.267 li
829.067 197.6 li
cp
@
828.356 202.756 mo
948.356 361.156 li
669.956 322.756 li
828.356 202.756 li
cp
.705882 .992157 .67451 rgb
f
828.356 202.756 mo
948.356 361.156 li
669.956 322.756 li
828.356 202.756 li
cp
@
827.644 207.911 mo
940.979 357.511 li
678.044 321.244 li
827.644 207.911 li
cp
.0588235 .364706 .439216 rgb
f
827.644 207.911 mo
940.979 357.511 li
678.044 321.244 li
827.644 207.911 li
cp
@
826.933 213.067 mo
933.6 353.867 li
686.133 319.733 li
826.933 213.067 li
cp
.705882 .992157 .67451 rgb
f
826.933 213.067 mo
933.6 353.867 li
686.133 319.733 li
826.933 213.067 li
cp
@
826.222 218.222 mo
926.222 350.222 li
694.222 318.222 li
826.222 218.222 li
cp
.0588235 .364706 .439216 rgb
f
826.222 218.222 mo
926.222 350.222 li
694.222 318.222 li
826.222 218.222 li
cp
@
825.511 223.378 mo
918.844 346.578 li
702.311 316.711 li
825.511 223.378 li
cp
.705882 .992157 .67451 rgb
f
825.511 223.378 mo
918.844 346.578 li
702.311 316.711 li
825.511 223.378 li
cp
@
824.8 228.533 mo
911.467 342.933 li
710.4 315.2 li
824.8 228.533 li
cp
.0588235 .364706 .439216 rgb
f
824.8 228.533 mo
911.467 342.933 li
710.4 315.2 li
824.8 228.533 li
cp
@
824.089 233.689 mo
904.089 339.289 li
718.489 313.689 li
824.089 233.689 li
cp
.705882 .992157 .67451 rgb
f
824.089 233.689 mo
904.089 339.289 li
718.489 313.689 li
824.089 233.689 li
cp
@
823.378 238.844 mo
896.711 335.644 li
726.578 312.178 li
823.378 238.844 li
cp
.0588235 .364706 .439216 rgb
f
823.378 238.844 mo
896.711 335.644 li
726.578 312.178 li
823.378 238.844 li
cp
@
822.667 244 mo
889.333 332 li
734.667 310.667 li
822.667 244 li
cp
.705882 .992157 .67451 rgb
f
822.667 244 mo
889.333 332 li
734.667 310.667 li
822.667 244 li
cp
@
821.956 249.156 mo
881.956 328.356 li
742.756 309.156 li
821.956 249.156 li
cp
.0588235 .364706 .439216 rgb
f
821.956 249.156 mo
881.956 328.356 li
742.756 309.156 li
821.956 249.156 li
cp
@
821.244 254.311 mo
874.578 324.711 li
750.844 307.644 li
821.244 254.311 li
cp
.705882 .992157 .67451 rgb
f
821.244 254.311 mo
874.578 324.711 li
750.844 307.644 li
821.244 254.311 li
cp
@
820.533 259.467 mo
867.2 321.067 li
758.933 306.133 li
820.533 259.467 li
cp
.0588235 .364706 .439216 rgb
f
820.533 259.467 mo
867.2 321.067 li
758.933 306.133 li
820.533 259.467 li
cp
@
819.822 264.622 mo
859.822 317.422 li
767.021 304.622 li
819.822 264.622 li
cp
.705882 .992157 .67451 rgb
f
819.822 264.622 mo
859.822 317.422 li
767.021 304.622 li
819.822 264.622 li
cp
@
819.111 269.778 mo
852.444 313.778 li
775.111 303.111 li
819.111 269.778 li
cp
.0588235 .364706 .439216 rgb
f
819.111 269.778 mo
852.444 313.778 li
775.111 303.111 li
819.111 269.778 li
cp
@
818.4 274.933 mo
845.067 310.133 li
783.2 301.6 li
818.4 274.933 li
cp
.705882 .992157 .67451 rgb
f
818.4 274.933 mo
845.067 310.133 li
783.2 301.6 li
818.4 274.933 li
cp
@
817.689 280.089 mo
837.689 306.489 li
791.289 300.089 li
817.689 280.089 li
cp
.0588235 .364706 .439216 rgb
f
817.689 280.089 mo
837.689 306.489 li
791.289 300.089 li
817.689 280.089 li
cp
@
816.979 285.244 mo
830.311 302.844 li
799.378 298.578 li
816.979 285.244 li
cp
.705882 .992157 .67451 rgb
f
816.979 285.244 mo
830.311 302.844 li
799.378 298.578 li
816.979 285.244 li
cp
@
816.267 290.4 mo
822.933 299.2 li
807.467 297.067 li
816.267 290.4 li
cp
.0588235 .364706 .439216 rgb
f
816.267 290.4 mo
822.933 299.2 li
807.467 297.067 li
816.267 290.4 li
cp
@
815.556 295.556 mo
815.556 295.556 li
815.556 295.556 li
cp
.705882 .992157 .67451 rgb
f
815.556 295.556 mo
815.556 295.556 li
815.556 295.556 li
cp
@
833.333 166.667 mo
613.333 333.333 li
736.667 0 li
833.333 166.667 li
cp
.0588235 .364706 .439216 rgb
f
833.333 166.667 mo
613.333 333.333 li
736.667 0 li
833.333 166.667 li
cp
@
829.111 166.667 mo
617.911 326.667 li
736.311 6.66699 li
829.111 166.667 li
cp
.705882 .992157 .67451 rgb
f
829.111 166.667 mo
617.911 326.667 li
736.311 6.66699 li
829.111 166.667 li
cp
@
824.889 166.667 mo
622.489 320 li
735.956 13.333 li
824.889 166.667 li
cp
.0588235 .364706 .439216 rgb
f
824.889 166.667 mo
622.489 320 li
735.956 13.333 li
824.889 166.667 li
cp
@
820.667 166.667 mo
627.067 313.333 li
735.6 20 li
820.667 166.667 li
cp
.705882 .992157 .67451 rgb
f
820.667 166.667 mo
627.067 313.333 li
735.6 20 li
820.667 166.667 li
cp
@
816.444 166.667 mo
631.644 306.667 li
735.244 26.667 li
816.444 166.667 li
cp
.0588235 .364706 .439216 rgb
f
816.444 166.667 mo
631.644 306.667 li
735.244 26.667 li
816.444 166.667 li
cp
@
812.222 166.667 mo
636.222 300 li
734.889 33.333 li
812.222 166.667 li
cp
.705882 .992157 .67451 rgb
f
812.222 166.667 mo
636.222 300 li
734.889 33.333 li
812.222 166.667 li
cp
@
808 166.667 mo
640.8 293.333 li
734.533 40 li
808 166.667 li
cp
.0588235 .364706 .439216 rgb
f
808 166.667 mo
640.8 293.333 li
734.533 40 li
808 166.667 li
cp
@
803.778 166.667 mo
645.378 286.667 li
734.178 46.667 li
803.778 166.667 li
cp
.705882 .992157 .67451 rgb
f
803.778 166.667 mo
645.378 286.667 li
734.178 46.667 li
803.778 166.667 li
cp
@
799.556 166.667 mo
649.956 280 li
733.822 53.333 li
799.556 166.667 li
cp
.0588235 .364706 .439216 rgb
f
799.556 166.667 mo
649.956 280 li
733.822 53.333 li
799.556 166.667 li
cp
@
795.333 166.667 mo
654.533 273.333 li
733.467 60 li
795.333 166.667 li
cp
.705882 .992157 .67451 rgb
f
795.333 166.667 mo
654.533 273.333 li
733.467 60 li
795.333 166.667 li
cp
@
791.111 166.667 mo
659.111 266.667 li
733.111 66.667 li
791.111 166.667 li
cp
.0588235 .364706 .439216 rgb
f
791.111 166.667 mo
659.111 266.667 li
733.111 66.667 li
791.111 166.667 li
cp
@
786.889 166.667 mo
663.689 260 li
732.756 73.333 li
786.889 166.667 li
cp
.705882 .992157 .67451 rgb
f
786.889 166.667 mo
663.689 260 li
732.756 73.333 li
786.889 166.667 li
cp
@
782.667 166.667 mo
668.267 253.333 li
732.4 80 li
782.667 166.667 li
cp
.0588235 .364706 .439216 rgb
f
782.667 166.667 mo
668.267 253.333 li
732.4 80 li
782.667 166.667 li
cp
@
778.444 166.667 mo
672.844 246.667 li
732.044 86.667 li
778.444 166.667 li
cp
.705882 .992157 .67451 rgb
f
778.444 166.667 mo
672.844 246.667 li
732.044 86.667 li
778.444 166.667 li
cp
@
774.222 166.667 mo
677.422 240 li
731.689 93.333 li
774.222 166.667 li
cp
.0588235 .364706 .439216 rgb
f
774.222 166.667 mo
677.422 240 li
731.689 93.333 li
774.222 166.667 li
cp
@
770 166.667 mo
682 233.333 li
731.333 100 li
770 166.667 li
cp
.705882 .992157 .67451 rgb
f
770 166.667 mo
682 233.333 li
731.333 100 li
770 166.667 li
cp
@
765.778 166.667 mo
686.578 226.667 li
730.979 106.667 li
765.778 166.667 li
cp
.0588235 .364706 .439216 rgb
f
765.778 166.667 mo
686.578 226.667 li
730.979 106.667 li
765.778 166.667 li
cp
@
761.556 166.667 mo
691.156 220 li
730.622 113.333 li
761.556 166.667 li
cp
.705882 .992157 .67451 rgb
f
761.556 166.667 mo
691.156 220 li
730.622 113.333 li
761.556 166.667 li
cp
@
757.333 166.667 mo
695.733 213.333 li
730.267 120 li
757.333 166.667 li
cp
.0588235 .364706 .439216 rgb
f
757.333 166.667 mo
695.733 213.333 li
730.267 120 li
757.333 166.667 li
cp
@
753.111 166.667 mo
700.311 206.667 li
729.911 126.667 li
753.111 166.667 li
cp
.705882 .992157 .67451 rgb
f
753.111 166.667 mo
700.311 206.667 li
729.911 126.667 li
753.111 166.667 li
cp
@
748.889 166.667 mo
704.889 200 li
729.556 133.333 li
748.889 166.667 li
cp
.0588235 .364706 .439216 rgb
f
748.889 166.667 mo
704.889 200 li
729.556 133.333 li
748.889 166.667 li
cp
@
744.667 166.667 mo
709.467 193.333 li
729.2 140 li
744.667 166.667 li
cp
.705882 .992157 .67451 rgb
f
744.667 166.667 mo
709.467 193.333 li
729.2 140 li
744.667 166.667 li
cp
@
740.444 166.667 mo
714.044 186.667 li
728.844 146.667 li
740.444 166.667 li
cp
.0588235 .364706 .439216 rgb
f
740.444 166.667 mo
714.044 186.667 li
728.844 146.667 li
740.444 166.667 li
cp
@
736.222 166.667 mo
718.622 180 li
728.489 153.333 li
736.222 166.667 li
cp
.705882 .992157 .67451 rgb
f
736.222 166.667 mo
718.622 180 li
728.489 153.333 li
736.222 166.667 li
cp
@
732 166.667 mo
723.2 173.333 li
728.133 160 li
732 166.667 li
cp
.0588235 .364706 .439216 rgb
f
732 166.667 mo
723.2 173.333 li
728.133 160 li
732 166.667 li
cp
@
727.778 166.667 mo
727.778 166.667 li
727.778 166.667 li
cp
.705882 .992157 .67451 rgb
f
727.778 166.667 mo
727.778 166.667 li
727.778 166.667 li
cp
@
166.667 500 mo
0 413.333 li
326.667 280 li
166.667 500 li
cp
.0588235 .364706 .439216 rgb
f
166.667 500 mo
0 413.333 li
326.667 280 li
166.667 500 li
cp
@
166.578 495.911 mo
6.57813 412.711 li
320.178 284.711 li
166.578 495.911 li
cp
.705882 .992157 .67451 rgb
f
166.578 495.911 mo
6.57813 412.711 li
320.178 284.711 li
166.578 495.911 li
cp
@
166.489 491.822 mo
13.1558 412.089 li
313.689 289.422 li
166.489 491.822 li
cp
.0588235 .364706 .439216 rgb
f
166.489 491.822 mo
13.1558 412.089 li
313.689 289.422 li
166.489 491.822 li
cp
@
166.4 487.733 mo
19.7329 411.467 li
307.2 294.133 li
166.4 487.733 li
cp
.705882 .992157 .67451 rgb
f
166.4 487.733 mo
19.7329 411.467 li
307.2 294.133 li
166.4 487.733 li
cp
@
166.311 483.644 mo
26.311 410.844 li
300.711 298.844 li
166.311 483.644 li
cp
.0588235 .364706 .439216 rgb
f
166.311 483.644 mo
26.311 410.844 li
300.711 298.844 li
166.311 483.644 li
cp
@
166.222 479.556 mo
32.8892 410.222 li
294.222 303.556 li
166.222 479.556 li
cp
.705882 .992157 .67451 rgb
f
166.222 479.556 mo
32.8892 410.222 li
294.222 303.556 li
166.222 479.556 li
cp
@
166.133 475.467 mo
39.4668 409.6 li
287.733 308.267 li
166.133 475.467 li
cp
.0588235 .364706 .439216 rgb
f
166.133 475.467 mo
39.4668 409.6 li
287.733 308.267 li
166.133 475.467 li
cp
@
166.044 471.378 mo
46.0439 408.978 li
281.244 312.978 li
166.044 471.378 li
cp
.705882 .992157 .67451 rgb
f
166.044 471.378 mo
46.0439 408.978 li
281.244 312.978 li
166.044 471.378 li
cp
@
165.956 467.289 mo
52.6221 408.356 li
274.756 317.689 li
165.956 467.289 li
cp
.0588235 .364706 .439216 rgb
f
165.956 467.289 mo
52.6221 408.356 li
274.756 317.689 li
165.956 467.289 li
cp
@
165.867 463.2 mo
59.2002 407.733 li
268.267 322.4 li
165.867 463.2 li
cp
.705882 .992157 .67451 rgb
f
165.867 463.2 mo
59.2002 407.733 li
268.267 322.4 li
165.867 463.2 li
cp
@
165.778 459.111 mo
65.7778 407.111 li
261.778 327.111 li
165.778 459.111 li
cp
.0588235 .364706 .439216 rgb
f
165.778 459.111 mo
65.7778 407.111 li
261.778 327.111 li
165.778 459.111 li
cp
@
165.689 455.022 mo
72.356 406.489 li
255.289 331.822 li
165.689 455.022 li
cp
.705882 .992157 .67451 rgb
f
165.689 455.022 mo
72.356 406.489 li
255.289 331.822 li
165.689 455.022 li
cp
@
165.6 450.933 mo
78.9331 405.867 li
248.8 336.533 li
165.6 450.933 li
cp
.0588235 .364706 .439216 rgb
f
165.6 450.933 mo
78.9331 405.867 li
248.8 336.533 li
165.6 450.933 li
cp
@
165.511 446.844 mo
85.5112 405.244 li
242.311 341.244 li
165.511 446.844 li
cp
.705882 .992157 .67451 rgb
f
165.511 446.844 mo
85.5112 405.244 li
242.311 341.244 li
165.511 446.844 li
cp
@
165.422 442.756 mo
92.0889 404.622 li
235.822 345.956 li
165.422 442.756 li
cp
.0588235 .364706 .439216 rgb
f
165.422 442.756 mo
92.0889 404.622 li
235.822 345.956 li
165.422 442.756 li
cp
@
165.333 438.667 mo
98.667 404 li
229.333 350.667 li
165.333 438.667 li
cp
.705882 .992157 .67451 rgb
f
165.333 438.667 mo
98.667 404 li
229.333 350.667 li
165.333 438.667 li
cp
@
165.244 434.578 mo
105.244 403.378 li
222.844 355.378 li
165.244 434.578 li
cp
.0588235 .364706 .439216 rgb
f
165.244 434.578 mo
105.244 403.378 li
222.844 355.378 li
165.244 434.578 li
cp
@
165.156 430.489 mo
111.822 402.756 li
216.356 360.089 li
165.156 430.489 li
cp
.705882 .992157 .67451 rgb
f
165.156 430.489 mo
111.822 402.756 li
216.356 360.089 li
165.156 430.489 li
cp
@
165.067 426.4 mo
118.4 402.133 li
209.867 364.8 li
165.067 426.4 li
cp
.0588235 .364706 .439216 rgb
f
165.067 426.4 mo
118.4 402.133 li
209.867 364.8 li
165.067 426.4 li
cp
@
164.978 422.311 mo
124.978 401.511 li
203.378 369.511 li
164.978 422.311 li
cp
.705882 .992157 .67451 rgb
f
164.978 422.311 mo
124.978 401.511 li
203.378 369.511 li
164.978 422.311 li
cp
@
164.889 418.222 mo
131.556 400.889 li
196.889 374.222 li
164.889 418.222 li
cp
.0588235 .364706 .439216 rgb
f
164.889 418.222 mo
131.556 400.889 li
196.889 374.222 li
164.889 418.222 li
cp
@
164.8 414.133 mo
138.133 400.267 li
190.4 378.933 li
164.8 414.133 li
cp
.705882 .992157 .67451 rgb
f
164.8 414.133 mo
138.133 400.267 li
190.4 378.933 li
164.8 414.133 li
cp
@
164.711 410.044 mo
144.711 399.644 li
183.911 383.644 li
164.711 410.044 li
cp
.0588235 .364706 .439216 rgb
f
164.711 410.044 mo
144.711 399.644 li
183.911 383.644 li
164.711 410.044 li
cp
@
164.622 405.956 mo
151.289 399.022 li
177.422 388.356 li
164.622 405.956 li
cp
.705882 .992157 .67451 rgb
f
164.622 405.956 mo
151.289 399.022 li
177.422 388.356 li
164.622 405.956 li
cp
@
164.533 401.867 mo
157.867 398.4 li
170.933 393.067 li
164.533 401.867 li
cp
.0588235 .364706 .439216 rgb
f
164.533 401.867 mo
157.867 398.4 li
170.933 393.067 li
164.533 401.867 li
cp
@
164.444 397.778 mo
164.444 397.778 li
164.444 397.778 li
cp
.705882 .992157 .67451 rgb
f
164.444 397.778 mo
164.444 397.778 li
164.444 397.778 li
cp
@
166.667 500 mo
326.667 280 li
246.667 670 li
166.667 500 li
cp
.0588235 .364706 .439216 rgb
f
166.667 500 mo
326.667 280 li
246.667 670 li
166.667 500 li
cp
@
169.867 499.333 mo
323.467 288.133 li
246.667 662.533 li
169.867 499.333 li
cp
.705882 .992157 .67451 rgb
f
169.867 499.333 mo
323.467 288.133 li
246.667 662.533 li
169.867 499.333 li
cp
@
173.067 498.667 mo
320.267 296.267 li
246.667 655.067 li
173.067 498.667 li
cp
.0588235 .364706 .439216 rgb
f
173.067 498.667 mo
320.267 296.267 li
246.667 655.067 li
173.067 498.667 li
cp
@
176.267 498 mo
317.067 304.4 li
246.667 647.6 li
176.267 498 li
cp
.705882 .992157 .67451 rgb
f
176.267 498 mo
317.067 304.4 li
246.667 647.6 li
176.267 498 li
cp
@
179.467 497.333 mo
313.867 312.533 li
246.667 640.133 li
179.467 497.333 li
cp
.0588235 .364706 .439216 rgb
f
179.467 497.333 mo
313.867 312.533 li
246.667 640.133 li
179.467 497.333 li
cp
@
182.667 496.667 mo
310.667 320.667 li
246.667 632.667 li
182.667 496.667 li
cp
.705882 .992157 .67451 rgb
f
182.667 496.667 mo
310.667 320.667 li
246.667 632.667 li
182.667 496.667 li
cp
@
185.867 496 mo
307.467 328.8 li
246.667 625.2 li
185.867 496 li
cp
.0588235 .364706 .439216 rgb
f
185.867 496 mo
307.467 328.8 li
246.667 625.2 li
185.867 496 li
cp
@
189.067 495.333 mo
304.267 336.933 li
246.667 617.733 li
189.067 495.333 li
cp
.705882 .992157 .67451 rgb
f
189.067 495.333 mo
304.267 336.933 li
246.667 617.733 li
189.067 495.333 li
cp
@
192.267 494.667 mo
301.067 345.067 li
246.667 610.267 li
192.267 494.667 li
cp
.0588235 .364706 .439216 rgb
f
192.267 494.667 mo
301.067 345.067 li
246.667 610.267 li
192.267 494.667 li
cp
@
195.467 494 mo
297.867 353.2 li
246.667 602.8 li
195.467 494 li
cp
.705882 .992157 .67451 rgb
f
195.467 494 mo
297.867 353.2 li
246.667 602.8 li
195.467 494 li
cp
@
198.667 493.333 mo
294.667 361.333 li
246.667 595.333 li
198.667 493.333 li
cp
.0588235 .364706 .439216 rgb
f
198.667 493.333 mo
294.667 361.333 li
246.667 595.333 li
198.667 493.333 li
cp
@
201.867 492.667 mo
291.467 369.467 li
246.667 587.867 li
201.867 492.667 li
cp
.705882 .992157 .67451 rgb
f
201.867 492.667 mo
291.467 369.467 li
246.667 587.867 li
201.867 492.667 li
cp
@
205.067 492 mo
288.267 377.6 li
246.667 580.4 li
205.067 492 li
cp
.0588235 .364706 .439216 rgb
f
205.067 492 mo
288.267 377.6 li
246.667 580.4 li
205.067 492 li
cp
@
208.267 491.333 mo
285.067 385.733 li
246.667 572.933 li
208.267 491.333 li
cp
.705882 .992157 .67451 rgb
f
208.267 491.333 mo
285.067 385.733 li
246.667 572.933 li
208.267 491.333 li
cp
@
211.467 490.667 mo
281.867 393.867 li
246.667 565.467 li
211.467 490.667 li
cp
.0588235 .364706 .439216 rgb
f
211.467 490.667 mo
281.867 393.867 li
246.667 565.467 li
211.467 490.667 li
cp
@
214.667 490 mo
278.667 402 li
246.667 558 li
214.667 490 li
cp
.705882 .992157 .67451 rgb
f
214.667 490 mo
278.667 402 li
246.667 558 li
214.667 490 li
cp
@
217.867 489.333 mo
275.467 410.133 li
246.667 550.533 li
217.867 489.333 li
cp
.0588235 .364706 .439216 rgb
f
217.867 489.333 mo
275.467 410.133 li
246.667 550.533 li
217.867 489.333 li
cp
@
221.067 488.667 mo
272.267 418.267 li
246.667 543.067 li
221.067 488.667 li
cp
.705882 .992157 .67451 rgb
f
221.067 488.667 mo
272.267 418.267 li
246.667 543.067 li
221.067 488.667 li
cp
@
224.267 488 mo
269.067 426.4 li
246.667 535.6 li
224.267 488 li
cp
.0588235 .364706 .439216 rgb
f
224.267 488 mo
269.067 426.4 li
246.667 535.6 li
224.267 488 li
cp
@
227.467 487.333 mo
265.867 434.533 li
246.667 528.133 li
227.467 487.333 li
cp
.705882 .992157 .67451 rgb
f
227.467 487.333 mo
265.867 434.533 li
246.667 528.133 li
227.467 487.333 li
cp
@
230.667 486.667 mo
262.667 442.667 li
246.667 520.667 li
230.667 486.667 li
cp
.0588235 .364706 .439216 rgb
f
230.667 486.667 mo
262.667 442.667 li
246.667 520.667 li
230.667 486.667 li
cp
@
233.867 486 mo
259.467 450.8 li
246.667 513.2 li
233.867 486 li
cp
.705882 .992157 .67451 rgb
f
233.867 486 mo
259.467 450.8 li
246.667 513.2 li
233.867 486 li
cp
@
237.067 485.333 mo
256.267 458.933 li
246.667 505.733 li
237.067 485.333 li
cp
.0588235 .364706 .439216 rgb
f
237.067 485.333 mo
256.267 458.933 li
246.667 505.733 li
237.067 485.333 li
cp
@
240.267 484.667 mo
253.067 467.067 li
246.667 498.267 li
240.267 484.667 li
cp
.705882 .992157 .67451 rgb
f
240.267 484.667 mo
253.067 467.067 li
246.667 498.267 li
240.267 484.667 li
cp
@
243.467 484 mo
249.867 475.2 li
246.667 490.8 li
243.467 484 li
cp
.0588235 .364706 .439216 rgb
f
243.467 484 mo
249.867 475.2 li
246.667 490.8 li
243.467 484 li
cp
@
246.667 483.333 mo
246.667 483.333 li
246.667 483.333 li
cp
.705882 .992157 .67451 rgb
f
246.667 483.333 mo
246.667 483.333 li
246.667 483.333 li
cp
@
166.667 500 mo
246.667 670 li
0 633.333 li
166.667 500 li
cp
.0588235 .364706 .439216 rgb
f
166.667 500 mo
246.667 670 li
0 633.333 li
166.667 500 li
cp
@
165.511 504.044 mo
242.311 667.244 li
5.51123 632.044 li
165.511 504.044 li
cp
.705882 .992157 .67451 rgb
f
165.511 504.044 mo
242.311 667.244 li
5.51123 632.044 li
165.511 504.044 li
cp
@
164.356 508.089 mo
237.956 664.489 li
11.022 630.756 li
164.356 508.089 li
cp
.0588235 .364706 .439216 rgb
f
164.356 508.089 mo
237.956 664.489 li
11.022 630.756 li
164.356 508.089 li
cp
@
163.2 512.133 mo
233.6 661.733 li
16.5332 629.467 li
163.2 512.133 li
cp
.705882 .992157 .67451 rgb
f
163.2 512.133 mo
233.6 661.733 li
16.5332 629.467 li
163.2 512.133 li
cp
@
162.044 516.178 mo
229.244 658.979 li
22.0439 628.178 li
162.044 516.178 li
cp
.0588235 .364706 .439216 rgb
f
162.044 516.178 mo
229.244 658.979 li
22.0439 628.178 li
162.044 516.178 li
cp
@
160.889 520.222 mo
224.889 656.222 li
27.5562 626.889 li
160.889 520.222 li
cp
.705882 .992157 .67451 rgb
f
160.889 520.222 mo
224.889 656.222 li
27.5562 626.889 li
160.889 520.222 li
cp
@
159.733 524.267 mo
220.533 653.467 li
33.0669 625.6 li
159.733 524.267 li
cp
.0588235 .364706 .439216 rgb
f
159.733 524.267 mo
220.533 653.467 li
33.0669 625.6 li
159.733 524.267 li
cp
@
158.578 528.311 mo
216.178 650.711 li
38.5781 624.311 li
158.578 528.311 li
cp
.705882 .992157 .67451 rgb
f
158.578 528.311 mo
216.178 650.711 li
38.5781 624.311 li
158.578 528.311 li
cp
@
157.422 532.356 mo
211.822 647.956 li
44.0889 623.021 li
157.422 532.356 li
cp
.0588235 .364706 .439216 rgb
f
157.422 532.356 mo
211.822 647.956 li
44.0889 623.021 li
157.422 532.356 li
cp
@
156.267 536.4 mo
207.467 645.2 li
49.6001 621.733 li
156.267 536.4 li
cp
.705882 .992157 .67451 rgb
f
156.267 536.4 mo
207.467 645.2 li
49.6001 621.733 li
156.267 536.4 li
cp
@
155.111 540.444 mo
203.111 642.444 li
55.1108 620.444 li
155.111 540.444 li
cp
.0588235 .364706 .439216 rgb
f
155.111 540.444 mo
203.111 642.444 li
55.1108 620.444 li
155.111 540.444 li
cp
@
153.956 544.489 mo
198.756 639.689 li
60.6221 619.156 li
153.956 544.489 li
cp
.705882 .992157 .67451 rgb
f
153.956 544.489 mo
198.756 639.689 li
60.6221 619.156 li
153.956 544.489 li
cp
@
152.8 548.533 mo
194.4 636.933 li
66.1328 617.867 li
152.8 548.533 li
cp
.0588235 .364706 .439216 rgb
f
152.8 548.533 mo
194.4 636.933 li
66.1328 617.867 li
152.8 548.533 li
cp
@
151.644 552.578 mo
190.044 634.178 li
71.644 616.578 li
151.644 552.578 li
cp
.705882 .992157 .67451 rgb
f
151.644 552.578 mo
190.044 634.178 li
71.644 616.578 li
151.644 552.578 li
cp
@
150.489 556.622 mo
185.689 631.422 li
77.1558 615.289 li
150.489 556.622 li
cp
.0588235 .364706 .439216 rgb
f
150.489 556.622 mo
185.689 631.422 li
77.1558 615.289 li
150.489 556.622 li
cp
@
149.333 560.667 mo
181.333 628.667 li
82.667 614 li
149.333 560.667 li
cp
.705882 .992157 .67451 rgb
f
149.333 560.667 mo
181.333 628.667 li
82.667 614 li
149.333 560.667 li
cp
@
148.178 564.711 mo
176.978 625.911 li
88.1782 612.711 li
148.178 564.711 li
cp
.0588235 .364706 .439216 rgb
f
148.178 564.711 mo
176.978 625.911 li
88.1782 612.711 li
148.178 564.711 li
cp
@
147.022 568.756 mo
172.622 623.156 li
93.689 611.422 li
147.022 568.756 li
cp
.705882 .992157 .67451 rgb
f
147.022 568.756 mo
172.622 623.156 li
93.689 611.422 li
147.022 568.756 li
cp
@
145.867 572.8 mo
168.267 620.4 li
99.2002 610.133 li
145.867 572.8 li
cp
.0588235 .364706 .439216 rgb
f
145.867 572.8 mo
168.267 620.4 li
99.2002 610.133 li
145.867 572.8 li
cp
@
144.711 576.844 mo
163.911 617.644 li
104.711 608.844 li
144.711 576.844 li
cp
.705882 .992157 .67451 rgb
f
144.711 576.844 mo
163.911 617.644 li
104.711 608.844 li
144.711 576.844 li
cp
@
143.556 580.889 mo
159.556 614.889 li
110.222 607.556 li
143.556 580.889 li
cp
.0588235 .364706 .439216 rgb
f
143.556 580.889 mo
159.556 614.889 li
110.222 607.556 li
143.556 580.889 li
cp
@
142.4 584.933 mo
155.2 612.133 li
115.733 606.267 li
142.4 584.933 li
cp
.705882 .992157 .67451 rgb
f
142.4 584.933 mo
155.2 612.133 li
115.733 606.267 li
142.4 584.933 li
cp
@
141.244 588.979 mo
150.844 609.378 li
121.244 604.979 li
141.244 588.979 li
cp
.0588235 .364706 .439216 rgb
f
141.244 588.979 mo
150.844 609.378 li
121.244 604.979 li
141.244 588.979 li
cp
@
140.089 593.021 mo
146.489 606.622 li
126.756 603.689 li
140.089 593.021 li
cp
.705882 .992157 .67451 rgb
f
140.089 593.021 mo
146.489 606.622 li
126.756 603.689 li
140.089 593.021 li
cp
@
138.933 597.067 mo
142.133 603.867 li
132.267 602.4 li
138.933 597.067 li
cp
.0588235 .364706 .439216 rgb
f
138.933 597.067 mo
142.133 603.867 li
132.267 602.4 li
138.933 597.067 li
cp
@
137.778 601.111 mo
137.778 601.111 li
137.778 601.111 li
cp
.705882 .992157 .67451 rgb
f
137.778 601.111 mo
137.778 601.111 li
137.778 601.111 li
cp
@
166.667 500 mo
0 633.333 li
0 413.333 li
166.667 500 li
cp
.0588235 .364706 .439216 rgb
f
166.667 500 mo
0 633.333 li
0 413.333 li
166.667 500 li
cp
@
162.222 500.622 mo
2.22217 628.622 li
2.22217 417.422 li
162.222 500.622 li
cp
.705882 .992157 .67451 rgb
f
162.222 500.622 mo
2.22217 628.622 li
2.22217 417.422 li
162.222 500.622 li
cp
@
157.778 501.244 mo
4.44385 623.911 li
4.44385 421.511 li
157.778 501.244 li
cp
.0588235 .364706 .439216 rgb
f
157.778 501.244 mo
4.44385 623.911 li
4.44385 421.511 li
157.778 501.244 li
cp
@
153.333 501.867 mo
6.66699 619.2 li
6.66699 425.6 li
153.333 501.867 li
cp
.705882 .992157 .67451 rgb
f
153.333 501.867 mo
6.66699 619.2 li
6.66699 425.6 li
153.333 501.867 li
cp
@
148.889 502.489 mo
8.88916 614.489 li
8.88916 429.689 li
148.889 502.489 li
cp
.0588235 .364706 .439216 rgb
f
148.889 502.489 mo
8.88916 614.489 li
8.88916 429.689 li
148.889 502.489 li
cp
@
144.444 503.111 mo
11.1108 609.778 li
11.1108 433.778 li
144.444 503.111 li
cp
.705882 .992157 .67451 rgb
f
144.444 503.111 mo
11.1108 609.778 li
11.1108 433.778 li
144.444 503.111 li
cp
@
140 503.733 mo
13.333 605.067 li
13.333 437.867 li
140 503.733 li
cp
.0588235 .364706 .439216 rgb
f
140 503.733 mo
13.333 605.067 li
13.333 437.867 li
140 503.733 li
cp
@
135.556 504.356 mo
15.5562 600.356 li
15.5562 441.956 li
135.556 504.356 li
cp
.705882 .992157 .67451 rgb
f
135.556 504.356 mo
15.5562 600.356 li
15.5562 441.956 li
135.556 504.356 li
cp
@
131.111 504.978 mo
17.7778 595.644 li
17.7778 446.044 li
131.111 504.978 li
cp
.0588235 .364706 .439216 rgb
f
131.111 504.978 mo
17.7778 595.644 li
17.7778 446.044 li
131.111 504.978 li
cp
@
126.667 505.6 mo
20 590.933 li
20 450.133 li
126.667 505.6 li
cp
.705882 .992157 .67451 rgb
f
126.667 505.6 mo
20 590.933 li
20 450.133 li
126.667 505.6 li
cp
@
122.222 506.222 mo
22.2222 586.222 li
22.2222 454.222 li
122.222 506.222 li
cp
.0588235 .364706 .439216 rgb
f
122.222 506.222 mo
22.2222 586.222 li
22.2222 454.222 li
122.222 506.222 li
cp
@
117.778 506.844 mo
24.4438 581.511 li
24.4438 458.311 li
117.778 506.844 li
cp
.705882 .992157 .67451 rgb
f
117.778 506.844 mo
24.4438 581.511 li
24.4438 458.311 li
117.778 506.844 li
cp
@
113.333 507.467 mo
26.667 576.8 li
26.667 462.4 li
113.333 507.467 li
cp
.0588235 .364706 .439216 rgb
f
113.333 507.467 mo
26.667 576.8 li
26.667 462.4 li
113.333 507.467 li
cp
@
108.889 508.089 mo
28.8892 572.089 li
28.8892 466.489 li
108.889 508.089 li
cp
.705882 .992157 .67451 rgb
f
108.889 508.089 mo
28.8892 572.089 li
28.8892 466.489 li
108.889 508.089 li
cp
@
104.444 508.711 mo
31.1108 567.378 li
31.1108 470.578 li
104.444 508.711 li
cp
.0588235 .364706 .439216 rgb
f
104.444 508.711 mo
31.1108 567.378 li
31.1108 470.578 li
104.444 508.711 li
cp
@
100 509.333 mo
33.333 562.667 li
33.333 474.667 li
100 509.333 li
cp
.705882 .992157 .67451 rgb
f
100 509.333 mo
33.333 562.667 li
33.333 474.667 li
100 509.333 li
cp
@
95.5562 509.956 mo
35.5562 557.956 li
35.5562 478.756 li
95.5562 509.956 li
cp
.0588235 .364706 .439216 rgb
f
95.5562 509.956 mo
35.5562 557.956 li
35.5562 478.756 li
95.5562 509.956 li
cp
@
91.1108 510.578 mo
37.7778 553.244 li
37.7778 482.844 li
91.1108 510.578 li
cp
.705882 .992157 .67451 rgb
f
91.1108 510.578 mo
37.7778 553.244 li
37.7778 482.844 li
91.1108 510.578 li
cp
@
86.667 511.2 mo
40 548.533 li
40 486.933 li
86.667 511.2 li
cp
.0588235 .364706 .439216 rgb
f
86.667 511.2 mo
40 548.533 li
40 486.933 li
86.667 511.2 li
cp
@
82.2222 511.822 mo
42.2222 543.822 li
42.2222 491.022 li
82.2222 511.822 li
cp
.705882 .992157 .67451 rgb
f
82.2222 511.822 mo
42.2222 543.822 li
42.2222 491.022 li
82.2222 511.822 li
cp
@
77.7778 512.444 mo
44.4438 539.111 li
44.4438 495.111 li
77.7778 512.444 li
cp
.0588235 .364706 .439216 rgb
f
77.7778 512.444 mo
44.4438 539.111 li
44.4438 495.111 li
77.7778 512.444 li
cp
@
73.333 513.067 mo
46.667 534.4 li
46.667 499.2 li
73.333 513.067 li
cp
.705882 .992157 .67451 rgb
f
73.333 513.067 mo
46.667 534.4 li
46.667 499.2 li
73.333 513.067 li
cp
@
68.8892 513.689 mo
48.8892 529.689 li
48.8892 503.289 li
68.8892 513.689 li
cp
.0588235 .364706 .439216 rgb
f
68.8892 513.689 mo
48.8892 529.689 li
48.8892 503.289 li
68.8892 513.689 li
cp
@
64.4438 514.311 mo
51.1108 524.979 li
51.1108 507.378 li
64.4438 514.311 li
cp
.705882 .992157 .67451 rgb
f
64.4438 514.311 mo
51.1108 524.979 li
51.1108 507.378 li
64.4438 514.311 li
cp
@
60 514.933 mo
53.333 520.267 li
53.333 511.467 li
60 514.933 li
cp
.0588235 .364706 .439216 rgb
f
60 514.933 mo
53.333 520.267 li
53.333 511.467 li
60 514.933 li
cp
@
55.5562 515.556 mo
55.5562 515.556 li
55.5562 515.556 li
cp
.705882 .992157 .67451 rgb
f
55.5562 515.556 mo
55.5562 515.556 li
55.5562 515.556 li
cp
@
528.333 543.333 mo
326.667 280 li
613.333 333.333 li
528.333 543.333 li
cp
.0588235 .364706 .439216 rgb
f
528.333 543.333 mo
326.667 280 li
613.333 333.333 li
528.333 543.333 li
cp
@
526.778 537.021 mo
333.178 284.222 li
608.378 335.422 li
526.778 537.021 li
cp
.705882 .992157 .67451 rgb
f
526.778 537.021 mo
333.178 284.222 li
608.378 335.422 li
526.778 537.021 li
cp
@
525.222 530.711 mo
339.689 288.444 li
603.422 337.511 li
525.222 530.711 li
cp
.0588235 .364706 .439216 rgb
f
525.222 530.711 mo
339.689 288.444 li
603.422 337.511 li
525.222 530.711 li
cp
@
523.667 524.4 mo
346.2 292.667 li
598.467 339.6 li
523.667 524.4 li
cp
.705882 .992157 .67451 rgb
f
523.667 524.4 mo
346.2 292.667 li
598.467 339.6 li
523.667 524.4 li
cp
@
522.111 518.089 mo
352.711 296.889 li
593.511 341.689 li
522.111 518.089 li
cp
.0588235 .364706 .439216 rgb
f
522.111 518.089 mo
352.711 296.889 li
593.511 341.689 li
522.111 518.089 li
cp
@
520.556 511.778 mo
359.222 301.111 li
588.556 343.778 li
520.556 511.778 li
cp
.705882 .992157 .67451 rgb
f
520.556 511.778 mo
359.222 301.111 li
588.556 343.778 li
520.556 511.778 li
cp
@
519 505.467 mo
365.733 305.333 li
583.6 345.867 li
519 505.467 li
cp
.0588235 .364706 .439216 rgb
f
519 505.467 mo
365.733 305.333 li
583.6 345.867 li
519 505.467 li
cp
@
517.444 499.156 mo
372.244 309.556 li
578.644 347.956 li
517.444 499.156 li
cp
.705882 .992157 .67451 rgb
f
517.444 499.156 mo
372.244 309.556 li
578.644 347.956 li
517.444 499.156 li
cp
@
515.889 492.844 mo
378.756 313.778 li
573.689 350.044 li
515.889 492.844 li
cp
.0588235 .364706 .439216 rgb
f
515.889 492.844 mo
378.756 313.778 li
573.689 350.044 li
515.889 492.844 li
cp
@
514.333 486.533 mo
385.267 318 li
568.733 352.133 li
514.333 486.533 li
cp
.705882 .992157 .67451 rgb
f
514.333 486.533 mo
385.267 318 li
568.733 352.133 li
514.333 486.533 li
cp
@
512.778 480.222 mo
391.778 322.222 li
563.778 354.222 li
512.778 480.222 li
cp
.0588235 .364706 .439216 rgb
f
512.778 480.222 mo
391.778 322.222 li
563.778 354.222 li
512.778 480.222 li
cp
@
511.222 473.911 mo
398.289 326.444 li
558.822 356.311 li
511.222 473.911 li
cp
.705882 .992157 .67451 rgb
f
511.222 473.911 mo
398.289 326.444 li
558.822 356.311 li
511.222 473.911 li
cp
@
509.667 467.6 mo
404.8 330.667 li
553.867 358.4 li
509.667 467.6 li
cp
.0588235 .364706 .439216 rgb
f
509.667 467.6 mo
404.8 330.667 li
553.867 358.4 li
509.667 467.6 li
cp
@
508.111 461.289 mo
411.311 334.889 li
548.911 360.489 li
508.111 461.289 li
cp
.705882 .992157 .67451 rgb
f
508.111 461.289 mo
411.311 334.889 li
548.911 360.489 li
508.111 461.289 li
cp
@
506.556 454.978 mo
417.822 339.111 li
543.956 362.578 li
506.556 454.978 li
cp
.0588235 .364706 .439216 rgb
f
506.556 454.978 mo
417.822 339.111 li
543.956 362.578 li
506.556 454.978 li
cp
@
505 448.667 mo
424.333 343.333 li
539 364.667 li
505 448.667 li
cp
.705882 .992157 .67451 rgb
f
505 448.667 mo
424.333 343.333 li
539 364.667 li
505 448.667 li
cp
@
503.444 442.356 mo
430.844 347.556 li
534.044 366.756 li
503.444 442.356 li
cp
.0588235 .364706 .439216 rgb
f
503.444 442.356 mo
430.844 347.556 li
534.044 366.756 li
503.444 442.356 li
cp
@
501.889 436.044 mo
437.356 351.778 li
529.089 368.844 li
501.889 436.044 li
cp
.705882 .992157 .67451 rgb
f
501.889 436.044 mo
437.356 351.778 li
529.089 368.844 li
501.889 436.044 li
cp
@
500.333 429.733 mo
443.867 356 li
524.133 370.933 li
500.333 429.733 li
cp
.0588235 .364706 .439216 rgb
f
500.333 429.733 mo
443.867 356 li
524.133 370.933 li
500.333 429.733 li
cp
@
498.778 423.422 mo
450.378 360.222 li
519.178 373.022 li
498.778 423.422 li
cp
.705882 .992157 .67451 rgb
f
498.778 423.422 mo
450.378 360.222 li
519.178 373.022 li
498.778 423.422 li
cp
@
497.222 417.111 mo
456.889 364.444 li
514.222 375.111 li
497.222 417.111 li
cp
.0588235 .364706 .439216 rgb
f
497.222 417.111 mo
456.889 364.444 li
514.222 375.111 li
497.222 417.111 li
cp
@
495.667 410.8 mo
463.4 368.667 li
509.267 377.2 li
495.667 410.8 li
cp
.705882 .992157 .67451 rgb
f
495.667 410.8 mo
463.4 368.667 li
509.267 377.2 li
495.667 410.8 li
cp
@
494.111 404.489 mo
469.911 372.889 li
504.311 379.289 li
494.111 404.489 li
cp
.0588235 .364706 .439216 rgb
f
494.111 404.489 mo
469.911 372.889 li
504.311 379.289 li
494.111 404.489 li
cp
@
492.556 398.178 mo
476.422 377.111 li
499.356 381.378 li
492.556 398.178 li
cp
.705882 .992157 .67451 rgb
f
492.556 398.178 mo
476.422 377.111 li
499.356 381.378 li
492.556 398.178 li
cp
@
491 391.867 mo
482.933 381.333 li
494.4 383.467 li
491 391.867 li
cp
.0588235 .364706 .439216 rgb
f
491 391.867 mo
482.933 381.333 li
494.4 383.467 li
491 391.867 li
cp
@
489.444 385.556 mo
489.444 385.556 li
489.444 385.556 li
cp
.705882 .992157 .67451 rgb
f
489.444 385.556 mo
489.444 385.556 li
489.444 385.556 li
cp
@
528.333 543.333 mo
613.333 333.333 li
623.333 716.667 li
528.333 543.333 li
cp
.0588235 .364706 .439216 rgb
f
528.333 543.333 mo
613.333 333.333 li
623.333 716.667 li
528.333 543.333 li
cp
@
530.733 542.844 mo
612.333 341.244 li
621.933 709.244 li
530.733 542.844 li
cp
.705882 .992157 .67451 rgb
f
530.733 542.844 mo
612.333 341.244 li
621.933 709.244 li
530.733 542.844 li
cp
@
533.133 542.356 mo
611.333 349.156 li
620.533 701.822 li
533.133 542.356 li
cp
.0588235 .364706 .439216 rgb
f
533.133 542.356 mo
611.333 349.156 li
620.533 701.822 li
533.133 542.356 li
cp
@
535.533 541.867 mo
610.333 357.067 li
619.133 694.4 li
535.533 541.867 li
cp
.705882 .992157 .67451 rgb
f
535.533 541.867 mo
610.333 357.067 li
619.133 694.4 li
535.533 541.867 li
cp
@
537.933 541.378 mo
609.333 364.978 li
617.733 686.979 li
537.933 541.378 li
cp
.0588235 .364706 .439216 rgb
f
537.933 541.378 mo
609.333 364.978 li
617.733 686.979 li
537.933 541.378 li
cp
@
540.333 540.889 mo
608.333 372.889 li
616.333 679.556 li
540.333 540.889 li
cp
.705882 .992157 .67451 rgb
f
540.333 540.889 mo
608.333 372.889 li
616.333 679.556 li
540.333 540.889 li
cp
@
542.733 540.4 mo
607.333 380.8 li
614.933 672.133 li
542.733 540.4 li
cp
.0588235 .364706 .439216 rgb
f
542.733 540.4 mo
607.333 380.8 li
614.933 672.133 li
542.733 540.4 li
cp
@
545.133 539.911 mo
606.333 388.711 li
613.533 664.711 li
545.133 539.911 li
cp
.705882 .992157 .67451 rgb
f
545.133 539.911 mo
606.333 388.711 li
613.533 664.711 li
545.133 539.911 li
cp
@
547.533 539.422 mo
605.333 396.622 li
612.133 657.289 li
547.533 539.422 li
cp
.0588235 .364706 .439216 rgb
f
547.533 539.422 mo
605.333 396.622 li
612.133 657.289 li
547.533 539.422 li
cp
@
549.933 538.933 mo
604.333 404.533 li
610.733 649.867 li
549.933 538.933 li
cp
.705882 .992157 .67451 rgb
f
549.933 538.933 mo
604.333 404.533 li
610.733 649.867 li
549.933 538.933 li
cp
@
552.333 538.444 mo
603.333 412.444 li
609.333 642.444 li
552.333 538.444 li
cp
.0588235 .364706 .439216 rgb
f
552.333 538.444 mo
603.333 412.444 li
609.333 642.444 li
552.333 538.444 li
cp
@
554.733 537.956 mo
602.333 420.356 li
607.933 635.021 li
554.733 537.956 li
cp
.705882 .992157 .67451 rgb
f
554.733 537.956 mo
602.333 420.356 li
607.933 635.021 li
554.733 537.956 li
cp
@
557.133 537.467 mo
601.333 428.267 li
606.533 627.6 li
557.133 537.467 li
cp
.0588235 .364706 .439216 rgb
f
557.133 537.467 mo
601.333 428.267 li
606.533 627.6 li
557.133 537.467 li
cp
@
559.533 536.979 mo
600.333 436.178 li
605.133 620.178 li
559.533 536.979 li
cp
.705882 .992157 .67451 rgb
f
559.533 536.979 mo
600.333 436.178 li
605.133 620.178 li
559.533 536.979 li
cp
@
561.933 536.489 mo
599.333 444.089 li
603.733 612.756 li
561.933 536.489 li
cp
.0588235 .364706 .439216 rgb
f
561.933 536.489 mo
599.333 444.089 li
603.733 612.756 li
561.933 536.489 li
cp
@
564.333 536 mo
598.333 452 li
602.333 605.333 li
564.333 536 li
cp
.705882 .992157 .67451 rgb
f
564.333 536 mo
598.333 452 li
602.333 605.333 li
564.333 536 li
cp
@
566.733 535.511 mo
597.333 459.911 li
600.933 597.911 li
566.733 535.511 li
cp
.0588235 .364706 .439216 rgb
f
566.733 535.511 mo
597.333 459.911 li
600.933 597.911 li
566.733 535.511 li
cp
@
569.133 535.021 mo
596.333 467.822 li
599.533 590.489 li
569.133 535.021 li
cp
.705882 .992157 .67451 rgb
f
569.133 535.021 mo
596.333 467.822 li
599.533 590.489 li
569.133 535.021 li
cp
@
571.533 534.533 mo
595.333 475.733 li
598.133 583.067 li
571.533 534.533 li
cp
.0588235 .364706 .439216 rgb
f
571.533 534.533 mo
595.333 475.733 li
598.133 583.067 li
571.533 534.533 li
cp
@
573.933 534.044 mo
594.333 483.644 li
596.733 575.644 li
573.933 534.044 li
cp
.705882 .992157 .67451 rgb
f
573.933 534.044 mo
594.333 483.644 li
596.733 575.644 li
573.933 534.044 li
cp
@
576.333 533.556 mo
593.333 491.556 li
595.333 568.222 li
576.333 533.556 li
cp
.0588235 .364706 .439216 rgb
f
576.333 533.556 mo
593.333 491.556 li
595.333 568.222 li
576.333 533.556 li
cp
@
578.733 533.067 mo
592.333 499.467 li
593.933 560.8 li
578.733 533.067 li
cp
.705882 .992157 .67451 rgb
f
578.733 533.067 mo
592.333 499.467 li
593.933 560.8 li
578.733 533.067 li
cp
@
581.133 532.578 mo
591.333 507.378 li
592.533 553.378 li
581.133 532.578 li
cp
.0588235 .364706 .439216 rgb
f
581.133 532.578 mo
591.333 507.378 li
592.533 553.378 li
581.133 532.578 li
cp
@
583.533 532.089 mo
590.333 515.289 li
591.133 545.956 li
583.533 532.089 li
cp
.705882 .992157 .67451 rgb
f
583.533 532.089 mo
590.333 515.289 li
591.133 545.956 li
583.533 532.089 li
cp
@
585.933 531.6 mo
589.333 523.2 li
589.733 538.533 li
585.933 531.6 li
cp
.0588235 .364706 .439216 rgb
f
585.933 531.6 mo
589.333 523.2 li
589.733 538.533 li
585.933 531.6 li
cp
@
588.333 531.111 mo
588.333 531.111 li
588.333 531.111 li
cp
.705882 .992157 .67451 rgb
f
588.333 531.111 mo
588.333 531.111 li
588.333 531.111 li
cp
@
528.333 543.333 mo
623.333 716.667 li
246.667 670 li
528.333 543.333 li
cp
.0588235 .364706 .439216 rgb
f
528.333 543.333 mo
623.333 716.667 li
246.667 670 li
528.333 543.333 li
cp
@
525.844 547.333 mo
617.044 713.733 li
255.444 668.933 li
525.844 547.333 li
cp
.705882 .992157 .67451 rgb
f
525.844 547.333 mo
617.044 713.733 li
255.444 668.933 li
525.844 547.333 li
cp
@
523.356 551.333 mo
610.756 710.8 li
264.222 667.867 li
523.356 551.333 li
cp
.0588235 .364706 .439216 rgb
f
523.356 551.333 mo
610.756 710.8 li
264.222 667.867 li
523.356 551.333 li
cp
@
520.867 555.333 mo
604.467 707.867 li
273 666.8 li
520.867 555.333 li
cp
.705882 .992157 .67451 rgb
f
520.867 555.333 mo
604.467 707.867 li
273 666.8 li
520.867 555.333 li
cp
@
518.378 559.333 mo
598.178 704.933 li
281.778 665.733 li
518.378 559.333 li
cp
.0588235 .364706 .439216 rgb
f
518.378 559.333 mo
598.178 704.933 li
281.778 665.733 li
518.378 559.333 li
cp
@
515.889 563.333 mo
591.889 702 li
290.556 664.667 li
515.889 563.333 li
cp
.705882 .992157 .67451 rgb
f
515.889 563.333 mo
591.889 702 li
290.556 664.667 li
515.889 563.333 li
cp
@
513.4 567.333 mo
585.6 699.067 li
299.333 663.6 li
513.4 567.333 li
cp
.0588235 .364706 .439216 rgb
f
513.4 567.333 mo
585.6 699.067 li
299.333 663.6 li
513.4 567.333 li
cp
@
510.911 571.333 mo
579.311 696.133 li
308.111 662.533 li
510.911 571.333 li
cp
.705882 .992157 .67451 rgb
f
510.911 571.333 mo
579.311 696.133 li
308.111 662.533 li
510.911 571.333 li
cp
@
508.422 575.333 mo
573.021 693.2 li
316.889 661.467 li
508.422 575.333 li
cp
.0588235 .364706 .439216 rgb
f
508.422 575.333 mo
573.021 693.2 li
316.889 661.467 li
508.422 575.333 li
cp
@
505.933 579.333 mo
566.733 690.267 li
325.667 660.4 li
505.933 579.333 li
cp
.705882 .992157 .67451 rgb
f
505.933 579.333 mo
566.733 690.267 li
325.667 660.4 li
505.933 579.333 li
cp
@
503.444 583.333 mo
560.444 687.333 li
334.444 659.333 li
503.444 583.333 li
cp
.0588235 .364706 .439216 rgb
f
503.444 583.333 mo
560.444 687.333 li
334.444 659.333 li
503.444 583.333 li
cp
@
500.956 587.333 mo
554.156 684.4 li
343.222 658.267 li
500.956 587.333 li
cp
.705882 .992157 .67451 rgb
f
500.956 587.333 mo
554.156 684.4 li
343.222 658.267 li
500.956 587.333 li
cp
@
498.467 591.333 mo
547.867 681.467 li
352 657.2 li
498.467 591.333 li
cp
.0588235 .364706 .439216 rgb
f
498.467 591.333 mo
547.867 681.467 li
352 657.2 li
498.467 591.333 li
cp
@
495.978 595.333 mo
541.578 678.533 li
360.778 656.133 li
495.978 595.333 li
cp
.705882 .992157 .67451 rgb
f
495.978 595.333 mo
541.578 678.533 li
360.778 656.133 li
495.978 595.333 li
cp
@
493.489 599.333 mo
535.289 675.6 li
369.556 655.067 li
493.489 599.333 li
cp
.0588235 .364706 .439216 rgb
f
493.489 599.333 mo
535.289 675.6 li
369.556 655.067 li
493.489 599.333 li
cp
@
491 603.333 mo
529 672.667 li
378.333 654 li
491 603.333 li
cp
.705882 .992157 .67451 rgb
f
491 603.333 mo
529 672.667 li
378.333 654 li
491 603.333 li
cp
@
488.511 607.333 mo
522.711 669.733 li
387.111 652.933 li
488.511 607.333 li
cp
.0588235 .364706 .439216 rgb
f
488.511 607.333 mo
522.711 669.733 li
387.111 652.933 li
488.511 607.333 li
cp
@
486.022 611.333 mo
516.422 666.8 li
395.889 651.867 li
486.022 611.333 li
cp
.705882 .992157 .67451 rgb
f
486.022 611.333 mo
516.422 666.8 li
395.889 651.867 li
486.022 611.333 li
cp
@
483.533 615.333 mo
510.133 663.867 li
404.667 650.8 li
483.533 615.333 li
cp
.0588235 .364706 .439216 rgb
f
483.533 615.333 mo
510.133 663.867 li
404.667 650.8 li
483.533 615.333 li
cp
@
481.044 619.333 mo
503.844 660.933 li
413.444 649.733 li
481.044 619.333 li
cp
.705882 .992157 .67451 rgb
f
481.044 619.333 mo
503.844 660.933 li
413.444 649.733 li
481.044 619.333 li
cp
@
478.556 623.333 mo
497.556 658 li
422.222 648.667 li
478.556 623.333 li
cp
.0588235 .364706 .439216 rgb
f
478.556 623.333 mo
497.556 658 li
422.222 648.667 li
478.556 623.333 li
cp
@
476.067 627.333 mo
491.267 655.067 li
431 647.6 li
476.067 627.333 li
cp
.705882 .992157 .67451 rgb
f
476.067 627.333 mo
491.267 655.067 li
431 647.6 li
476.067 627.333 li
cp
@
473.578 631.333 mo
484.978 652.133 li
439.778 646.533 li
473.578 631.333 li
cp
.0588235 .364706 .439216 rgb
f
473.578 631.333 mo
484.978 652.133 li
439.778 646.533 li
473.578 631.333 li
cp
@
471.089 635.333 mo
478.689 649.2 li
448.556 645.467 li
471.089 635.333 li
cp
.705882 .992157 .67451 rgb
f
471.089 635.333 mo
478.689 649.2 li
448.556 645.467 li
471.089 635.333 li
cp
@
468.6 639.333 mo
472.4 646.267 li
457.333 644.4 li
468.6 639.333 li
cp
.0588235 .364706 .439216 rgb
f
468.6 639.333 mo
472.4 646.267 li
457.333 644.4 li
468.6 639.333 li
cp
@
466.111 643.333 mo
466.111 643.333 li
466.111 643.333 li
cp
.705882 .992157 .67451 rgb
f
466.111 643.333 mo
466.111 643.333 li
466.111 643.333 li
cp
@
528.333 543.333 mo
246.667 670 li
326.667 280 li
528.333 543.333 li
cp
.0588235 .364706 .439216 rgb
f
528.333 543.333 mo
246.667 670 li
326.667 280 li
528.333 543.333 li
cp
@
521.889 541.511 mo
251.489 663.111 li
328.289 288.711 li
521.889 541.511 li
cp
.705882 .992157 .67451 rgb
f
521.889 541.511 mo
251.489 663.111 li
328.289 288.711 li
521.889 541.511 li
cp
@
515.444 539.689 mo
256.311 656.222 li
329.911 297.422 li
515.444 539.689 li
cp
.0588235 .364706 .439216 rgb
f
515.444 539.689 mo
256.311 656.222 li
329.911 297.422 li
515.444 539.689 li
cp
@
509 537.867 mo
261.133 649.333 li
331.533 306.133 li
509 537.867 li
cp
.705882 .992157 .67451 rgb
f
509 537.867 mo
261.133 649.333 li
331.533 306.133 li
509 537.867 li
cp
@
502.556 536.044 mo
265.956 642.444 li
333.156 314.844 li
502.556 536.044 li
cp
.0588235 .364706 .439216 rgb
f
502.556 536.044 mo
265.956 642.444 li
333.156 314.844 li
502.556 536.044 li
cp
@
496.111 534.222 mo
270.778 635.556 li
334.778 323.556 li
496.111 534.222 li
cp
.705882 .992157 .67451 rgb
f
496.111 534.222 mo
270.778 635.556 li
334.778 323.556 li
496.111 534.222 li
cp
@
489.667 532.4 mo
275.6 628.667 li
336.4 332.267 li
489.667 532.4 li
cp
.0588235 .364706 .439216 rgb
f
489.667 532.4 mo
275.6 628.667 li
336.4 332.267 li
489.667 532.4 li
cp
@
483.222 530.578 mo
280.422 621.778 li
338.022 340.978 li
483.222 530.578 li
cp
.705882 .992157 .67451 rgb
f
483.222 530.578 mo
280.422 621.778 li
338.022 340.978 li
483.222 530.578 li
cp
@
476.778 528.756 mo
285.244 614.889 li
339.644 349.689 li
476.778 528.756 li
cp
.0588235 .364706 .439216 rgb
f
476.778 528.756 mo
285.244 614.889 li
339.644 349.689 li
476.778 528.756 li
cp
@
470.333 526.933 mo
290.067 608 li
341.267 358.4 li
470.333 526.933 li
cp
.705882 .992157 .67451 rgb
f
470.333 526.933 mo
290.067 608 li
341.267 358.4 li
470.333 526.933 li
cp
@
463.889 525.111 mo
294.889 601.111 li
342.889 367.111 li
463.889 525.111 li
cp
.0588235 .364706 .439216 rgb
f
463.889 525.111 mo
294.889 601.111 li
342.889 367.111 li
463.889 525.111 li
cp
@
457.444 523.289 mo
299.711 594.222 li
344.511 375.822 li
457.444 523.289 li
cp
.705882 .992157 .67451 rgb
f
457.444 523.289 mo
299.711 594.222 li
344.511 375.822 li
457.444 523.289 li
cp
@
451 521.467 mo
304.533 587.333 li
346.133 384.533 li
451 521.467 li
cp
.0588235 .364706 .439216 rgb
f
451 521.467 mo
304.533 587.333 li
346.133 384.533 li
451 521.467 li
cp
@
444.556 519.644 mo
309.356 580.444 li
347.756 393.244 li
444.556 519.644 li
cp
.705882 .992157 .67451 rgb
f
444.556 519.644 mo
309.356 580.444 li
347.756 393.244 li
444.556 519.644 li
cp
@
438.111 517.822 mo
314.178 573.556 li
349.378 401.956 li
438.111 517.822 li
cp
.0588235 .364706 .439216 rgb
f
438.111 517.822 mo
314.178 573.556 li
349.378 401.956 li
438.111 517.822 li
cp
@
431.667 516 mo
319 566.667 li
351 410.667 li
431.667 516 li
cp
.705882 .992157 .67451 rgb
f
431.667 516 mo
319 566.667 li
351 410.667 li
431.667 516 li
cp
@
425.222 514.178 mo
323.822 559.778 li
352.622 419.378 li
425.222 514.178 li
cp
.0588235 .364706 .439216 rgb
f
425.222 514.178 mo
323.822 559.778 li
352.622 419.378 li
425.222 514.178 li
cp
@
418.778 512.356 mo
328.644 552.889 li
354.244 428.089 li
418.778 512.356 li
cp
.705882 .992157 .67451 rgb
f
418.778 512.356 mo
328.644 552.889 li
354.244 428.089 li
418.778 512.356 li
cp
@
412.333 510.533 mo
333.467 546 li
355.867 436.8 li
412.333 510.533 li
cp
.0588235 .364706 .439216 rgb
f
412.333 510.533 mo
333.467 546 li
355.867 436.8 li
412.333 510.533 li
cp
@
405.889 508.711 mo
338.289 539.111 li
357.489 445.511 li
405.889 508.711 li
cp
.705882 .992157 .67451 rgb
f
405.889 508.711 mo
338.289 539.111 li
357.489 445.511 li
405.889 508.711 li
cp
@
399.444 506.889 mo
343.111 532.222 li
359.111 454.222 li
399.444 506.889 li
cp
.0588235 .364706 .439216 rgb
f
399.444 506.889 mo
343.111 532.222 li
359.111 454.222 li
399.444 506.889 li
cp
@
393 505.067 mo
347.933 525.333 li
360.733 462.933 li
393 505.067 li
cp
.705882 .992157 .67451 rgb
f
393 505.067 mo
347.933 525.333 li
360.733 462.933 li
393 505.067 li
cp
@
386.556 503.244 mo
352.756 518.444 li
362.356 471.644 li
386.556 503.244 li
cp
.0588235 .364706 .439216 rgb
f
386.556 503.244 mo
352.756 518.444 li
362.356 471.644 li
386.556 503.244 li
cp
@
380.111 501.422 mo
357.578 511.556 li
363.978 480.356 li
380.111 501.422 li
cp
.705882 .992157 .67451 rgb
f
380.111 501.422 mo
357.578 511.556 li
363.978 480.356 li
380.111 501.422 li
cp
@
373.667 499.6 mo
362.4 504.667 li
365.6 489.067 li
373.667 499.6 li
cp
.0588235 .364706 .439216 rgb
f
373.667 499.6 mo
362.4 504.667 li
365.6 489.067 li
373.667 499.6 li
cp
@
367.222 497.778 mo
367.222 497.778 li
367.222 497.778 li
cp
.705882 .992157 .67451 rgb
f
367.222 497.778 mo
367.222 497.778 li
367.222 497.778 li
cp
@
893.333 563.333 mo
613.333 333.333 li
1000 386.667 li
893.333 563.333 li
cp
.0588235 .364706 .439216 rgb
f
893.333 563.333 mo
613.333 333.333 li
1000 386.667 li
893.333 563.333 li
cp
@
891.021 557.911 mo
622.222 337.111 li
993.422 388.311 li
891.021 557.911 li
cp
.705882 .992157 .67451 rgb
f
891.021 557.911 mo
622.222 337.111 li
993.422 388.311 li
891.021 557.911 li
cp
@
888.711 552.489 mo
631.111 340.889 li
986.844 389.956 li
888.711 552.489 li
cp
.0588235 .364706 .439216 rgb
f
888.711 552.489 mo
631.111 340.889 li
986.844 389.956 li
888.711 552.489 li
cp
@
886.4 547.067 mo
640 344.667 li
980.267 391.6 li
886.4 547.067 li
cp
.705882 .992157 .67451 rgb
f
886.4 547.067 mo
640 344.667 li
980.267 391.6 li
886.4 547.067 li
cp
@
884.089 541.644 mo
648.889 348.444 li
973.689 393.244 li
884.089 541.644 li
cp
.0588235 .364706 .439216 rgb
f
884.089 541.644 mo
648.889 348.444 li
973.689 393.244 li
884.089 541.644 li
cp
@
881.778 536.222 mo
657.778 352.222 li
967.111 394.889 li
881.778 536.222 li
cp
.705882 .992157 .67451 rgb
f
881.778 536.222 mo
657.778 352.222 li
967.111 394.889 li
881.778 536.222 li
cp
@
879.467 530.8 mo
666.667 356 li
960.533 396.533 li
879.467 530.8 li
cp
.0588235 .364706 .439216 rgb
f
879.467 530.8 mo
666.667 356 li
960.533 396.533 li
879.467 530.8 li
cp
@
877.156 525.378 mo
675.556 359.778 li
953.956 398.178 li
877.156 525.378 li
cp
.705882 .992157 .67451 rgb
f
877.156 525.378 mo
675.556 359.778 li
953.956 398.178 li
877.156 525.378 li
cp
@
874.844 519.956 mo
684.444 363.556 li
947.378 399.822 li
874.844 519.956 li
cp
.0588235 .364706 .439216 rgb
f
874.844 519.956 mo
684.444 363.556 li
947.378 399.822 li
874.844 519.956 li
cp
@
872.533 514.533 mo
693.333 367.333 li
940.8 401.467 li
872.533 514.533 li
cp
.705882 .992157 .67451 rgb
f
872.533 514.533 mo
693.333 367.333 li
940.8 401.467 li
872.533 514.533 li
cp
@
870.222 509.111 mo
702.222 371.111 li
934.222 403.111 li
870.222 509.111 li
cp
.0588235 .364706 .439216 rgb
f
870.222 509.111 mo
702.222 371.111 li
934.222 403.111 li
870.222 509.111 li
cp
@
867.911 503.689 mo
711.111 374.889 li
927.644 404.756 li
867.911 503.689 li
cp
.705882 .992157 .67451 rgb
f
867.911 503.689 mo
711.111 374.889 li
927.644 404.756 li
867.911 503.689 li
cp
@
865.6 498.267 mo
720 378.667 li
921.067 406.4 li
865.6 498.267 li
cp
.0588235 .364706 .439216 rgb
f
865.6 498.267 mo
720 378.667 li
921.067 406.4 li
865.6 498.267 li
cp
@
863.289 492.844 mo
728.889 382.444 li
914.489 408.044 li
863.289 492.844 li
cp
.705882 .992157 .67451 rgb
f
863.289 492.844 mo
728.889 382.444 li
914.489 408.044 li
863.289 492.844 li
cp
@
860.979 487.422 mo
737.778 386.222 li
907.911 409.689 li
860.979 487.422 li
cp
.0588235 .364706 .439216 rgb
f
860.979 487.422 mo
737.778 386.222 li
907.911 409.689 li
860.979 487.422 li
cp
@
858.667 482 mo
746.667 390 li
901.333 411.333 li
858.667 482 li
cp
.705882 .992157 .67451 rgb
f
858.667 482 mo
746.667 390 li
901.333 411.333 li
858.667 482 li
cp
@
856.356 476.578 mo
755.556 393.778 li
894.756 412.978 li
856.356 476.578 li
cp
.0588235 .364706 .439216 rgb
f
856.356 476.578 mo
755.556 393.778 li
894.756 412.978 li
856.356 476.578 li
cp
@
854.044 471.156 mo
764.444 397.556 li
888.178 414.622 li
854.044 471.156 li
cp
.705882 .992157 .67451 rgb
f
854.044 471.156 mo
764.444 397.556 li
888.178 414.622 li
854.044 471.156 li
cp
@
851.733 465.733 mo
773.333 401.333 li
881.6 416.267 li
851.733 465.733 li
cp
.0588235 .364706 .439216 rgb
f
851.733 465.733 mo
773.333 401.333 li
881.6 416.267 li
851.733 465.733 li
cp
@
849.422 460.311 mo
782.222 405.111 li
875.021 417.911 li
849.422 460.311 li
cp
.705882 .992157 .67451 rgb
f
849.422 460.311 mo
782.222 405.111 li
875.021 417.911 li
849.422 460.311 li
cp
@
847.111 454.889 mo
791.111 408.889 li
868.444 419.556 li
847.111 454.889 li
cp
.0588235 .364706 .439216 rgb
f
847.111 454.889 mo
791.111 408.889 li
868.444 419.556 li
847.111 454.889 li
cp
@
844.8 449.467 mo
800 412.667 li
861.867 421.2 li
844.8 449.467 li
cp
.705882 .992157 .67451 rgb
f
844.8 449.467 mo
800 412.667 li
861.867 421.2 li
844.8 449.467 li
cp
@
842.489 444.044 mo
808.889 416.444 li
855.289 422.844 li
842.489 444.044 li
cp
.0588235 .364706 .439216 rgb
f
842.489 444.044 mo
808.889 416.444 li
855.289 422.844 li
842.489 444.044 li
cp
@
840.178 438.622 mo
817.778 420.222 li
848.711 424.489 li
840.178 438.622 li
cp
.705882 .992157 .67451 rgb
f
840.178 438.622 mo
817.778 420.222 li
848.711 424.489 li
840.178 438.622 li
cp
@
837.867 433.2 mo
826.667 424 li
842.133 426.133 li
837.867 433.2 li
cp
.0588235 .364706 .439216 rgb
f
837.867 433.2 mo
826.667 424 li
842.133 426.133 li
837.867 433.2 li
cp
@
835.556 427.778 mo
835.556 427.778 li
835.556 427.778 li
cp
.705882 .992157 .67451 rgb
f
835.556 427.778 mo
835.556 427.778 li
835.556 427.778 li
cp
@
893.333 563.333 mo
1000 386.667 li
1000 733.333 li
893.333 563.333 li
cp
.0588235 .364706 .439216 rgb
f
893.333 563.333 mo
1000 386.667 li
1000 733.333 li
893.333 563.333 li
cp
@
896.178 563.244 mo
998.578 393.644 li
998.578 726.444 li
896.178 563.244 li
cp
.705882 .992157 .67451 rgb
f
896.178 563.244 mo
998.578 393.644 li
998.578 726.444 li
896.178 563.244 li
cp
@
899.021 563.156 mo
997.156 400.622 li
997.156 719.556 li
899.021 563.156 li
cp
.0588235 .364706 .439216 rgb
f
899.021 563.156 mo
997.156 400.622 li
997.156 719.556 li
899.021 563.156 li
cp
@
901.867 563.067 mo
995.733 407.6 li
995.733 712.667 li
901.867 563.067 li
cp
.705882 .992157 .67451 rgb
f
901.867 563.067 mo
995.733 407.6 li
995.733 712.667 li
901.867 563.067 li
cp
@
904.711 562.979 mo
994.311 414.578 li
994.311 705.778 li
904.711 562.979 li
cp
.0588235 .364706 .439216 rgb
f
904.711 562.979 mo
994.311 414.578 li
994.311 705.778 li
904.711 562.979 li
cp
@
907.556 562.889 mo
992.889 421.556 li
992.889 698.889 li
907.556 562.889 li
cp
.705882 .992157 .67451 rgb
f
907.556 562.889 mo
992.889 421.556 li
992.889 698.889 li
907.556 562.889 li
cp
@
910.4 562.8 mo
991.467 428.533 li
991.467 692 li
910.4 562.8 li
cp
.0588235 .364706 .439216 rgb
f
910.4 562.8 mo
991.467 428.533 li
991.467 692 li
910.4 562.8 li
cp
@
913.244 562.711 mo
990.044 435.511 li
990.044 685.111 li
913.244 562.711 li
cp
.705882 .992157 .67451 rgb
f
913.244 562.711 mo
990.044 435.511 li
990.044 685.111 li
913.244 562.711 li
cp
@
916.089 562.622 mo
988.622 442.489 li
988.622 678.222 li
916.089 562.622 li
cp
.0588235 .364706 .439216 rgb
f
916.089 562.622 mo
988.622 442.489 li
988.622 678.222 li
916.089 562.622 li
cp
@
918.933 562.533 mo
987.2 449.467 li
987.2 671.333 li
918.933 562.533 li
cp
.705882 .992157 .67451 rgb
f
918.933 562.533 mo
987.2 449.467 li
987.2 671.333 li
918.933 562.533 li
cp
@
921.778 562.444 mo
985.778 456.444 li
985.778 664.444 li
921.778 562.444 li
cp
.0588235 .364706 .439216 rgb
f
921.778 562.444 mo
985.778 456.444 li
985.778 664.444 li
921.778 562.444 li
cp
@
924.622 562.356 mo
984.356 463.422 li
984.356 657.556 li
924.622 562.356 li
cp
.705882 .992157 .67451 rgb
f
924.622 562.356 mo
984.356 463.422 li
984.356 657.556 li
924.622 562.356 li
cp
@
927.467 562.267 mo
982.933 470.4 li
982.933 650.667 li
927.467 562.267 li
cp
.0588235 .364706 .439216 rgb
f
927.467 562.267 mo
982.933 470.4 li
982.933 650.667 li
927.467 562.267 li
cp
@
930.311 562.178 mo
981.511 477.378 li
981.511 643.778 li
930.311 562.178 li
cp
.705882 .992157 .67451 rgb
f
930.311 562.178 mo
981.511 477.378 li
981.511 643.778 li
930.311 562.178 li
cp
@
933.156 562.089 mo
980.089 484.356 li
980.089 636.889 li
933.156 562.089 li
cp
.0588235 .364706 .439216 rgb
f
933.156 562.089 mo
980.089 484.356 li
980.089 636.889 li
933.156 562.089 li
cp
@
936 562 mo
978.667 491.333 li
978.667 630 li
936 562 li
cp
.705882 .992157 .67451 rgb
f
936 562 mo
978.667 491.333 li
978.667 630 li
936 562 li
cp
@
938.844 561.911 mo
977.244 498.311 li
977.244 623.111 li
938.844 561.911 li
cp
.0588235 .364706 .439216 rgb
f
938.844 561.911 mo
977.244 498.311 li
977.244 623.111 li
938.844 561.911 li
cp
@
941.689 561.822 mo
975.822 505.289 li
975.822 616.222 li
941.689 561.822 li
cp
.705882 .992157 .67451 rgb
f
941.689 561.822 mo
975.822 505.289 li
975.822 616.222 li
941.689 561.822 li
cp
@
944.533 561.733 mo
974.4 512.267 li
974.4 609.333 li
944.533 561.733 li
cp
.0588235 .364706 .439216 rgb
f
944.533 561.733 mo
974.4 512.267 li
974.4 609.333 li
944.533 561.733 li
cp
@
947.378 561.644 mo
972.979 519.244 li
972.979 602.444 li
947.378 561.644 li
cp
.705882 .992157 .67451 rgb
f
947.378 561.644 mo
972.979 519.244 li
972.979 602.444 li
947.378 561.644 li
cp
@
950.222 561.556 mo
971.556 526.222 li
971.556 595.556 li
950.222 561.556 li
cp
.0588235 .364706 .439216 rgb
f
950.222 561.556 mo
971.556 526.222 li
971.556 595.556 li
950.222 561.556 li
cp
@
953.067 561.467 mo
970.133 533.2 li
970.133 588.667 li
953.067 561.467 li
cp
.705882 .992157 .67451 rgb
f
953.067 561.467 mo
970.133 533.2 li
970.133 588.667 li
953.067 561.467 li
cp
@
955.911 561.378 mo
968.711 540.178 li
968.711 581.778 li
955.911 561.378 li
cp
.0588235 .364706 .439216 rgb
f
955.911 561.378 mo
968.711 540.178 li
968.711 581.778 li
955.911 561.378 li
cp
@
958.756 561.289 mo
967.289 547.156 li
967.289 574.889 li
958.756 561.289 li
cp
.705882 .992157 .67451 rgb
f
958.756 561.289 mo
967.289 547.156 li
967.289 574.889 li
958.756 561.289 li
cp
@
961.6 561.2 mo
965.867 554.133 li
965.867 568 li
961.6 561.2 li
cp
.0588235 .364706 .439216 rgb
f
961.6 561.2 mo
965.867 554.133 li
965.867 568 li
961.6 561.2 li
cp
@
964.444 561.111 mo
964.444 561.111 li
964.444 561.111 li
cp
.705882 .992157 .67451 rgb
f
964.444 561.111 mo
964.444 561.111 li
964.444 561.111 li
cp
@
893.333 563.333 mo
1000 733.333 li
623.333 716.667 li
893.333 563.333 li
cp
.0588235 .364706 .439216 rgb
f
893.333 563.333 mo
1000 733.333 li
623.333 716.667 li
893.333 563.333 li
cp
@
891.156 567.644 mo
993.556 730.844 li
631.956 714.844 li
891.156 567.644 li
cp
.705882 .992157 .67451 rgb
f
891.156 567.644 mo
993.556 730.844 li
631.956 714.844 li
891.156 567.644 li
cp
@
888.979 571.956 mo
987.111 728.356 li
640.578 713.021 li
888.979 571.956 li
cp
.0588235 .364706 .439216 rgb
f
888.979 571.956 mo
987.111 728.356 li
640.578 713.021 li
888.979 571.956 li
cp
@
886.8 576.267 mo
980.667 725.867 li
649.2 711.2 li
886.8 576.267 li
cp
.705882 .992157 .67451 rgb
f
886.8 576.267 mo
980.667 725.867 li
649.2 711.2 li
886.8 576.267 li
cp
@
884.622 580.578 mo
974.222 723.378 li
657.822 709.378 li
884.622 580.578 li
cp
.0588235 .364706 .439216 rgb
f
884.622 580.578 mo
974.222 723.378 li
657.822 709.378 li
884.622 580.578 li
cp
@
882.444 584.889 mo
967.778 720.889 li
666.444 707.556 li
882.444 584.889 li
cp
.705882 .992157 .67451 rgb
f
882.444 584.889 mo
967.778 720.889 li
666.444 707.556 li
882.444 584.889 li
cp
@
880.267 589.2 mo
961.333 718.4 li
675.067 705.733 li
880.267 589.2 li
cp
.0588235 .364706 .439216 rgb
f
880.267 589.2 mo
961.333 718.4 li
675.067 705.733 li
880.267 589.2 li
cp
@
878.089 593.511 mo
954.889 715.911 li
683.689 703.911 li
878.089 593.511 li
cp
.705882 .992157 .67451 rgb
f
878.089 593.511 mo
954.889 715.911 li
683.689 703.911 li
878.089 593.511 li
cp
@
875.911 597.822 mo
948.444 713.422 li
692.311 702.089 li
875.911 597.822 li
cp
.0588235 .364706 .439216 rgb
f
875.911 597.822 mo
948.444 713.422 li
692.311 702.089 li
875.911 597.822 li
cp
@
873.733 602.133 mo
942 710.933 li
700.933 700.267 li
873.733 602.133 li
cp
.705882 .992157 .67451 rgb
f
873.733 602.133 mo
942 710.933 li
700.933 700.267 li
873.733 602.133 li
cp
@
871.556 606.444 mo
935.556 708.444 li
709.556 698.444 li
871.556 606.444 li
cp
.0588235 .364706 .439216 rgb
f
871.556 606.444 mo
935.556 708.444 li
709.556 698.444 li
871.556 606.444 li
cp
@
869.378 610.756 mo
929.111 705.956 li
718.178 696.622 li
869.378 610.756 li
cp
.705882 .992157 .67451 rgb
f
869.378 610.756 mo
929.111 705.956 li
718.178 696.622 li
869.378 610.756 li
cp
@
867.2 615.067 mo
922.667 703.467 li
726.8 694.8 li
867.2 615.067 li
cp
.0588235 .364706 .439216 rgb
f
867.2 615.067 mo
922.667 703.467 li
726.8 694.8 li
867.2 615.067 li
cp
@
865.021 619.378 mo
916.222 700.979 li
735.422 692.979 li
865.021 619.378 li
cp
.705882 .992157 .67451 rgb
f
865.021 619.378 mo
916.222 700.979 li
735.422 692.979 li
865.021 619.378 li
cp
@
862.844 623.689 mo
909.778 698.489 li
744.044 691.156 li
862.844 623.689 li
cp
.0588235 .364706 .439216 rgb
f
862.844 623.689 mo
909.778 698.489 li
744.044 691.156 li
862.844 623.689 li
cp
@
860.667 628 mo
903.333 696 li
752.667 689.333 li
860.667 628 li
cp
.705882 .992157 .67451 rgb
f
860.667 628 mo
903.333 696 li
752.667 689.333 li
860.667 628 li
cp
@
858.489 632.311 mo
896.889 693.511 li
761.289 687.511 li
858.489 632.311 li
cp
.0588235 .364706 .439216 rgb
f
858.489 632.311 mo
896.889 693.511 li
761.289 687.511 li
858.489 632.311 li
cp
@
856.311 636.622 mo
890.444 691.021 li
769.911 685.689 li
856.311 636.622 li
cp
.705882 .992157 .67451 rgb
f
856.311 636.622 mo
890.444 691.021 li
769.911 685.689 li
856.311 636.622 li
cp
@
854.133 640.933 mo
884 688.533 li
778.533 683.867 li
854.133 640.933 li
cp
.0588235 .364706 .439216 rgb
f
854.133 640.933 mo
884 688.533 li
778.533 683.867 li
854.133 640.933 li
cp
@
851.956 645.244 mo
877.556 686.044 li
787.156 682.044 li
851.956 645.244 li
cp
.705882 .992157 .67451 rgb
f
851.956 645.244 mo
877.556 686.044 li
787.156 682.044 li
851.956 645.244 li
cp
@
849.778 649.556 mo
871.111 683.556 li
795.778 680.222 li
849.778 649.556 li
cp
.0588235 .364706 .439216 rgb
f
849.778 649.556 mo
871.111 683.556 li
795.778 680.222 li
849.778 649.556 li
cp
@
847.6 653.867 mo
864.667 681.067 li
804.4 678.4 li
847.6 653.867 li
cp
.705882 .992157 .67451 rgb
f
847.6 653.867 mo
864.667 681.067 li
804.4 678.4 li
847.6 653.867 li
cp
@
845.422 658.178 mo
858.222 678.578 li
813.021 676.578 li
845.422 658.178 li
cp
.0588235 .364706 .439216 rgb
f
845.422 658.178 mo
858.222 678.578 li
813.021 676.578 li
845.422 658.178 li
cp
@
843.244 662.489 mo
851.778 676.089 li
821.644 674.756 li
843.244 662.489 li
cp
.705882 .992157 .67451 rgb
f
843.244 662.489 mo
851.778 676.089 li
821.644 674.756 li
843.244 662.489 li
cp
@
841.067 666.8 mo
845.333 673.6 li
830.267 672.933 li
841.067 666.8 li
cp
.0588235 .364706 .439216 rgb
f
841.067 666.8 mo
845.333 673.6 li
830.267 672.933 li
841.067 666.8 li
cp
@
838.889 671.111 mo
838.889 671.111 li
838.889 671.111 li
cp
.705882 .992157 .67451 rgb
f
838.889 671.111 mo
838.889 671.111 li
838.889 671.111 li
cp
@
893.333 563.333 mo
623.333 716.667 li
613.333 333.333 li
893.333 563.333 li
cp
.0588235 .364706 .439216 rgb
f
893.333 563.333 mo
623.333 716.667 li
613.333 333.333 li
893.333 563.333 li
cp
@
886 562.311 mo
626.8 709.511 li
617.2 341.511 li
886 562.311 li
cp
.705882 .992157 .67451 rgb
f
886 562.311 mo
626.8 709.511 li
617.2 341.511 li
886 562.311 li
cp
@
878.667 561.289 mo
630.267 702.356 li
621.067 349.689 li
878.667 561.289 li
cp
.0588235 .364706 .439216 rgb
f
878.667 561.289 mo
630.267 702.356 li
621.067 349.689 li
878.667 561.289 li
cp
@
871.333 560.267 mo
633.733 695.2 li
624.933 357.867 li
871.333 560.267 li
cp
.705882 .992157 .67451 rgb
f
871.333 560.267 mo
633.733 695.2 li
624.933 357.867 li
871.333 560.267 li
cp
@
864 559.244 mo
637.2 688.044 li
628.8 366.044 li
864 559.244 li
cp
.0588235 .364706 .439216 rgb
f
864 559.244 mo
637.2 688.044 li
628.8 366.044 li
864 559.244 li
cp
@
856.667 558.222 mo
640.667 680.889 li
632.667 374.222 li
856.667 558.222 li
cp
.705882 .992157 .67451 rgb
f
856.667 558.222 mo
640.667 680.889 li
632.667 374.222 li
856.667 558.222 li
cp
@
849.333 557.2 mo
644.133 673.733 li
636.533 382.4 li
849.333 557.2 li
cp
.0588235 .364706 .439216 rgb
f
849.333 557.2 mo
644.133 673.733 li
636.533 382.4 li
849.333 557.2 li
cp
@
842 556.178 mo
647.6 666.578 li
640.4 390.578 li
842 556.178 li
cp
.705882 .992157 .67451 rgb
f
842 556.178 mo
647.6 666.578 li
640.4 390.578 li
842 556.178 li
cp
@
834.667 555.156 mo
651.067 659.422 li
644.267 398.756 li
834.667 555.156 li
cp
.0588235 .364706 .439216 rgb
f
834.667 555.156 mo
651.067 659.422 li
644.267 398.756 li
834.667 555.156 li
cp
@
827.333 554.133 mo
654.533 652.267 li
648.133 406.933 li
827.333 554.133 li
cp
.705882 .992157 .67451 rgb
f
827.333 554.133 mo
654.533 652.267 li
648.133 406.933 li
827.333 554.133 li
cp
@
820 553.111 mo
658 645.111 li
652 415.111 li
820 553.111 li
cp
.0588235 .364706 .439216 rgb
f
820 553.111 mo
658 645.111 li
652 415.111 li
820 553.111 li
cp
@
812.667 552.089 mo
661.467 637.956 li
655.867 423.289 li
812.667 552.089 li
cp
.705882 .992157 .67451 rgb
f
812.667 552.089 mo
661.467 637.956 li
655.867 423.289 li
812.667 552.089 li
cp
@
805.333 551.067 mo
664.933 630.8 li
659.733 431.467 li
805.333 551.067 li
cp
.0588235 .364706 .439216 rgb
f
805.333 551.067 mo
664.933 630.8 li
659.733 431.467 li
805.333 551.067 li
cp
@
798 550.044 mo
668.4 623.644 li
663.6 439.644 li
798 550.044 li
cp
.705882 .992157 .67451 rgb
f
798 550.044 mo
668.4 623.644 li
663.6 439.644 li
798 550.044 li
cp
@
790.667 549.021 mo
671.867 616.489 li
667.467 447.822 li
790.667 549.021 li
cp
.0588235 .364706 .439216 rgb
f
790.667 549.021 mo
671.867 616.489 li
667.467 447.822 li
790.667 549.021 li
cp
@
783.333 548 mo
675.333 609.333 li
671.333 456 li
783.333 548 li
cp
.705882 .992157 .67451 rgb
f
783.333 548 mo
675.333 609.333 li
671.333 456 li
783.333 548 li
cp
@
776 546.979 mo
678.8 602.178 li
675.2 464.178 li
776 546.979 li
cp
.0588235 .364706 .439216 rgb
f
776 546.979 mo
678.8 602.178 li
675.2 464.178 li
776 546.979 li
cp
@
768.667 545.956 mo
682.267 595.021 li
679.067 472.356 li
768.667 545.956 li
cp
.705882 .992157 .67451 rgb
f
768.667 545.956 mo
682.267 595.021 li
679.067 472.356 li
768.667 545.956 li
cp
@
761.333 544.933 mo
685.733 587.867 li
682.933 480.533 li
761.333 544.933 li
cp
.0588235 .364706 .439216 rgb
f
761.333 544.933 mo
685.733 587.867 li
682.933 480.533 li
761.333 544.933 li
cp
@
754 543.911 mo
689.2 580.711 li
686.8 488.711 li
754 543.911 li
cp
.705882 .992157 .67451 rgb
f
754 543.911 mo
689.2 580.711 li
686.8 488.711 li
754 543.911 li
cp
@
746.667 542.889 mo
692.667 573.556 li
690.667 496.889 li
746.667 542.889 li
cp
.0588235 .364706 .439216 rgb
f
746.667 542.889 mo
692.667 573.556 li
690.667 496.889 li
746.667 542.889 li
cp
@
739.333 541.867 mo
696.133 566.4 li
694.533 505.067 li
739.333 541.867 li
cp
.705882 .992157 .67451 rgb
f
739.333 541.867 mo
696.133 566.4 li
694.533 505.067 li
739.333 541.867 li
cp
@
732 540.844 mo
699.6 559.244 li
698.4 513.244 li
732 540.844 li
cp
.0588235 .364706 .439216 rgb
f
732 540.844 mo
699.6 559.244 li
698.4 513.244 li
732 540.844 li
cp
@
724.667 539.822 mo
703.067 552.089 li
702.267 521.422 li
724.667 539.822 li
cp
.705882 .992157 .67451 rgb
f
724.667 539.822 mo
703.067 552.089 li
702.267 521.422 li
724.667 539.822 li
cp
@
717.333 538.8 mo
706.533 544.933 li
706.133 529.6 li
717.333 538.8 li
cp
.0588235 .364706 .439216 rgb
f
717.333 538.8 mo
706.533 544.933 li
706.133 529.6 li
717.333 538.8 li
cp
@
710 537.778 mo
710 537.778 li
710 537.778 li
cp
.705882 .992157 .67451 rgb
f
710 537.778 mo
710 537.778 li
710 537.778 li
cp
@
166.667 833.333 mo
0 633.333 li
246.667 670 li
166.667 833.333 li
cp
.0588235 .364706 .439216 rgb
f
166.667 833.333 mo
0 633.333 li
246.667 670 li
166.667 833.333 li
cp
@
165.511 828.489 mo
5.51123 636.489 li
242.311 671.689 li
165.511 828.489 li
cp
.705882 .992157 .67451 rgb
f
165.511 828.489 mo
5.51123 636.489 li
242.311 671.689 li
165.511 828.489 li
cp
@
164.356 823.644 mo
11.022 639.644 li
237.956 673.378 li
164.356 823.644 li
cp
.0588235 .364706 .439216 rgb
f
164.356 823.644 mo
11.022 639.644 li
237.956 673.378 li
164.356 823.644 li
cp
@
163.2 818.8 mo
16.5332 642.8 li
233.6 675.067 li
163.2 818.8 li
cp
.705882 .992157 .67451 rgb
f
163.2 818.8 mo
16.5332 642.8 li
233.6 675.067 li
163.2 818.8 li
cp
@
162.044 813.956 mo
22.0439 645.956 li
229.244 676.756 li
162.044 813.956 li
cp
.0588235 .364706 .439216 rgb
f
162.044 813.956 mo
22.0439 645.956 li
229.244 676.756 li
162.044 813.956 li
cp
@
160.889 809.111 mo
27.5562 649.111 li
224.889 678.444 li
160.889 809.111 li
cp
.705882 .992157 .67451 rgb
f
160.889 809.111 mo
27.5562 649.111 li
224.889 678.444 li
160.889 809.111 li
cp
@
159.733 804.267 mo
33.0669 652.267 li
220.533 680.133 li
159.733 804.267 li
cp
.0588235 .364706 .439216 rgb
f
159.733 804.267 mo
33.0669 652.267 li
220.533 680.133 li
159.733 804.267 li
cp
@
158.578 799.422 mo
38.5781 655.422 li
216.178 681.822 li
158.578 799.422 li
cp
.705882 .992157 .67451 rgb
f
158.578 799.422 mo
38.5781 655.422 li
216.178 681.822 li
158.578 799.422 li
cp
@
157.422 794.578 mo
44.0889 658.578 li
211.822 683.511 li
157.422 794.578 li
cp
.0588235 .364706 .439216 rgb
f
157.422 794.578 mo
44.0889 658.578 li
211.822 683.511 li
157.422 794.578 li
cp
@
156.267 789.733 mo
49.6001 661.733 li
207.467 685.2 li
156.267 789.733 li
cp
.705882 .992157 .67451 rgb
f
156.267 789.733 mo
49.6001 661.733 li
207.467 685.2 li
156.267 789.733 li
cp
@
155.111 784.889 mo
55.1108 664.889 li
203.111 686.889 li
155.111 784.889 li
cp
.0588235 .364706 .439216 rgb
f
155.111 784.889 mo
55.1108 664.889 li
203.111 686.889 li
155.111 784.889 li
cp
@
153.956 780.044 mo
60.6221 668.044 li
198.756 688.578 li
153.956 780.044 li
cp
.705882 .992157 .67451 rgb
f
153.956 780.044 mo
60.6221 668.044 li
198.756 688.578 li
153.956 780.044 li
cp
@
152.8 775.2 mo
66.1328 671.2 li
194.4 690.267 li
152.8 775.2 li
cp
.0588235 .364706 .439216 rgb
f
152.8 775.2 mo
66.1328 671.2 li
194.4 690.267 li
152.8 775.2 li
cp
@
151.644 770.356 mo
71.644 674.356 li
190.044 691.956 li
151.644 770.356 li
cp
.705882 .992157 .67451 rgb
f
151.644 770.356 mo
71.644 674.356 li
190.044 691.956 li
151.644 770.356 li
cp
@
150.489 765.511 mo
77.1558 677.511 li
185.689 693.644 li
150.489 765.511 li
cp
.0588235 .364706 .439216 rgb
f
150.489 765.511 mo
77.1558 677.511 li
185.689 693.644 li
150.489 765.511 li
cp
@
149.333 760.667 mo
82.667 680.667 li
181.333 695.333 li
149.333 760.667 li
cp
.705882 .992157 .67451 rgb
f
149.333 760.667 mo
82.667 680.667 li
181.333 695.333 li
149.333 760.667 li
cp
@
148.178 755.822 mo
88.1782 683.822 li
176.978 697.021 li
148.178 755.822 li
cp
.0588235 .364706 .439216 rgb
f
148.178 755.822 mo
88.1782 683.822 li
176.978 697.021 li
148.178 755.822 li
cp
@
147.022 750.979 mo
93.689 686.979 li
172.622 698.711 li
147.022 750.979 li
cp
.705882 .992157 .67451 rgb
f
147.022 750.979 mo
93.689 686.979 li
172.622 698.711 li
147.022 750.979 li
cp
@
145.867 746.133 mo
99.2002 690.133 li
168.267 700.4 li
145.867 746.133 li
cp
.0588235 .364706 .439216 rgb
f
145.867 746.133 mo
99.2002 690.133 li
168.267 700.4 li
145.867 746.133 li
cp
@
144.711 741.289 mo
104.711 693.289 li
163.911 702.089 li
144.711 741.289 li
cp
.705882 .992157 .67451 rgb
f
144.711 741.289 mo
104.711 693.289 li
163.911 702.089 li
144.711 741.289 li
cp
@
143.556 736.444 mo
110.222 696.444 li
159.556 703.778 li
143.556 736.444 li
cp
.0588235 .364706 .439216 rgb
f
143.556 736.444 mo
110.222 696.444 li
159.556 703.778 li
143.556 736.444 li
cp
@
142.4 731.6 mo
115.733 699.6 li
155.2 705.467 li
142.4 731.6 li
cp
.705882 .992157 .67451 rgb
f
142.4 731.6 mo
115.733 699.6 li
155.2 705.467 li
142.4 731.6 li
cp
@
141.244 726.756 mo
121.244 702.756 li
150.844 707.156 li
141.244 726.756 li
cp
.0588235 .364706 .439216 rgb
f
141.244 726.756 mo
121.244 702.756 li
150.844 707.156 li
141.244 726.756 li
cp
@
140.089 721.911 mo
126.756 705.911 li
146.489 708.844 li
140.089 721.911 li
cp
.705882 .992157 .67451 rgb
f
140.089 721.911 mo
126.756 705.911 li
146.489 708.844 li
140.089 721.911 li
cp
@
138.933 717.067 mo
132.267 709.067 li
142.133 710.533 li
138.933 717.067 li
cp
.0588235 .364706 .439216 rgb
f
138.933 717.067 mo
132.267 709.067 li
142.133 710.533 li
138.933 717.067 li
cp
@
137.778 712.222 mo
137.778 712.222 li
137.778 712.222 li
cp
.705882 .992157 .67451 rgb
f
137.778 712.222 mo
137.778 712.222 li
137.778 712.222 li
cp
@
166.667 833.333 mo
246.667 670 li
350 1000 li
166.667 833.333 li
cp
.0588235 .364706 .439216 rgb
f
166.667 833.333 mo
246.667 670 li
350 1000 li
166.667 833.333 li
cp
@
170.178 833.378 mo
246.978 676.578 li
346.178 993.378 li
170.178 833.378 li
cp
.705882 .992157 .67451 rgb
f
170.178 833.378 mo
246.978 676.578 li
346.178 993.378 li
170.178 833.378 li
cp
@
173.689 833.422 mo
247.289 683.156 li
342.356 986.756 li
173.689 833.422 li
cp
.0588235 .364706 .439216 rgb
f
173.689 833.422 mo
247.289 683.156 li
342.356 986.756 li
173.689 833.422 li
cp
@
177.2 833.467 mo
247.6 689.733 li
338.533 980.133 li
177.2 833.467 li
cp
.705882 .992157 .67451 rgb
f
177.2 833.467 mo
247.6 689.733 li
338.533 980.133 li
177.2 833.467 li
cp
@
180.711 833.511 mo
247.911 696.311 li
334.711 973.511 li
180.711 833.511 li
cp
.0588235 .364706 .439216 rgb
f
180.711 833.511 mo
247.911 696.311 li
334.711 973.511 li
180.711 833.511 li
cp
@
184.222 833.556 mo
248.222 702.889 li
330.889 966.889 li
184.222 833.556 li
cp
.705882 .992157 .67451 rgb
f
184.222 833.556 mo
248.222 702.889 li
330.889 966.889 li
184.222 833.556 li
cp
@
187.733 833.6 mo
248.533 709.467 li
327.067 960.267 li
187.733 833.6 li
cp
.0588235 .364706 .439216 rgb
f
187.733 833.6 mo
248.533 709.467 li
327.067 960.267 li
187.733 833.6 li
cp
@
191.244 833.644 mo
248.844 716.044 li
323.244 953.644 li
191.244 833.644 li
cp
.705882 .992157 .67451 rgb
f
191.244 833.644 mo
248.844 716.044 li
323.244 953.644 li
191.244 833.644 li
cp
@
194.756 833.689 mo
249.156 722.622 li
319.422 947.021 li
194.756 833.689 li
cp
.0588235 .364706 .439216 rgb
f
194.756 833.689 mo
249.156 722.622 li
319.422 947.021 li
194.756 833.689 li
cp
@
198.267 833.733 mo
249.467 729.2 li
315.6 940.4 li
198.267 833.733 li
cp
.705882 .992157 .67451 rgb
f
198.267 833.733 mo
249.467 729.2 li
315.6 940.4 li
198.267 833.733 li
cp
@
201.778 833.778 mo
249.778 735.778 li
311.778 933.778 li
201.778 833.778 li
cp
.0588235 .364706 .439216 rgb
f
201.778 833.778 mo
249.778 735.778 li
311.778 933.778 li
201.778 833.778 li
cp
@
205.289 833.822 mo
250.089 742.356 li
307.956 927.156 li
205.289 833.822 li
cp
.705882 .992157 .67451 rgb
f
205.289 833.822 mo
250.089 742.356 li
307.956 927.156 li
205.289 833.822 li
cp
@
208.8 833.867 mo
250.4 748.933 li
304.133 920.533 li
208.8 833.867 li
cp
.0588235 .364706 .439216 rgb
f
208.8 833.867 mo
250.4 748.933 li
304.133 920.533 li
208.8 833.867 li
cp
@
212.311 833.911 mo
250.711 755.511 li
300.311 913.911 li
212.311 833.911 li
cp
.705882 .992157 .67451 rgb
f
212.311 833.911 mo
250.711 755.511 li
300.311 913.911 li
212.311 833.911 li
cp
@
215.822 833.956 mo
251.022 762.089 li
296.489 907.289 li
215.822 833.956 li
cp
.0588235 .364706 .439216 rgb
f
215.822 833.956 mo
251.022 762.089 li
296.489 907.289 li
215.822 833.956 li
cp
@
219.333 834 mo
251.333 768.667 li
292.667 900.667 li
219.333 834 li
cp
.705882 .992157 .67451 rgb
f
219.333 834 mo
251.333 768.667 li
292.667 900.667 li
219.333 834 li
cp
@
222.844 834.044 mo
251.644 775.244 li
288.844 894.044 li
222.844 834.044 li
cp
.0588235 .364706 .439216 rgb
f
222.844 834.044 mo
251.644 775.244 li
288.844 894.044 li
222.844 834.044 li
cp
@
226.356 834.089 mo
251.956 781.822 li
285.022 887.422 li
226.356 834.089 li
cp
.705882 .992157 .67451 rgb
f
226.356 834.089 mo
251.956 781.822 li
285.022 887.422 li
226.356 834.089 li
cp
@
229.867 834.133 mo
252.267 788.4 li
281.2 880.8 li
229.867 834.133 li
cp
.0588235 .364706 .439216 rgb
f
229.867 834.133 mo
252.267 788.4 li
281.2 880.8 li
229.867 834.133 li
cp
@
233.378 834.178 mo
252.578 794.979 li
277.378 874.178 li
233.378 834.178 li
cp
.705882 .992157 .67451 rgb
f
233.378 834.178 mo
252.578 794.979 li
277.378 874.178 li
233.378 834.178 li
cp
@
236.889 834.222 mo
252.889 801.556 li
273.556 867.556 li
236.889 834.222 li
cp
.0588235 .364706 .439216 rgb
f
236.889 834.222 mo
252.889 801.556 li
273.556 867.556 li
236.889 834.222 li
cp
@
240.4 834.267 mo
253.2 808.133 li
269.733 860.933 li
240.4 834.267 li
cp
.705882 .992157 .67451 rgb
f
240.4 834.267 mo
253.2 808.133 li
269.733 860.933 li
240.4 834.267 li
cp
@
243.911 834.311 mo
253.511 814.711 li
265.911 854.311 li
243.911 834.311 li
cp
.0588235 .364706 .439216 rgb
f
243.911 834.311 mo
253.511 814.711 li
265.911 854.311 li
243.911 834.311 li
cp
@
247.422 834.356 mo
253.822 821.289 li
262.089 847.689 li
247.422 834.356 li
cp
.705882 .992157 .67451 rgb
f
247.422 834.356 mo
253.822 821.289 li
262.089 847.689 li
247.422 834.356 li
cp
@
250.933 834.4 mo
254.133 827.867 li
258.267 841.067 li
250.933 834.4 li
cp
.0588235 .364706 .439216 rgb
f
250.933 834.4 mo
254.133 827.867 li
258.267 841.067 li
250.933 834.4 li
cp
@
254.444 834.444 mo
254.444 834.444 li
254.444 834.444 li
cp
.705882 .992157 .67451 rgb
f
254.444 834.444 mo
254.444 834.444 li
254.444 834.444 li
cp
@
166.667 833.333 mo
350 1000 li
0 1000 li
166.667 833.333 li
cp
.0588235 .364706 .439216 rgb
f
166.667 833.333 mo
350 1000 li
0 1000 li
166.667 833.333 li
cp
@
166.889 837.778 mo
342.889 997.778 li
6.88916 997.778 li
166.889 837.778 li
cp
.705882 .992157 .67451 rgb
f
166.889 837.778 mo
342.889 997.778 li
6.88916 997.778 li
166.889 837.778 li
cp
@
167.111 842.222 mo
335.778 995.556 li
13.7778 995.556 li
167.111 842.222 li
cp
.0588235 .364706 .439216 rgb
f
167.111 842.222 mo
335.778 995.556 li
13.7778 995.556 li
167.111 842.222 li
cp
@
167.333 846.667 mo
328.667 993.333 li
20.667 993.333 li
167.333 846.667 li
cp
.705882 .992157 .67451 rgb
f
167.333 846.667 mo
328.667 993.333 li
20.667 993.333 li
167.333 846.667 li
cp
@
167.556 851.111 mo
321.556 991.111 li
27.5562 991.111 li
167.556 851.111 li
cp
.0588235 .364706 .439216 rgb
f
167.556 851.111 mo
321.556 991.111 li
27.5562 991.111 li
167.556 851.111 li
cp
@
167.778 855.556 mo
314.444 988.889 li
34.4438 988.889 li
167.778 855.556 li
cp
.705882 .992157 .67451 rgb
f
167.778 855.556 mo
314.444 988.889 li
34.4438 988.889 li
167.778 855.556 li
cp
@
168 860 mo
307.333 986.667 li
41.333 986.667 li
168 860 li
cp
.0588235 .364706 .439216 rgb
f
168 860 mo
307.333 986.667 li
41.333 986.667 li
168 860 li
cp
@
168.222 864.444 mo
300.222 984.444 li
48.2222 984.444 li
168.222 864.444 li
cp
.705882 .992157 .67451 rgb
f
168.222 864.444 mo
300.222 984.444 li
48.2222 984.444 li
168.222 864.444 li
cp
@
168.444 868.889 mo
293.111 982.222 li
55.1108 982.222 li
168.444 868.889 li
cp
.0588235 .364706 .439216 rgb
f
168.444 868.889 mo
293.111 982.222 li
55.1108 982.222 li
168.444 868.889 li
cp
@
168.667 873.333 mo
286 980 li
62 980 li
168.667 873.333 li
cp
.705882 .992157 .67451 rgb
f
168.667 873.333 mo
286 980 li
62 980 li
168.667 873.333 li
cp
@
168.889 877.778 mo
278.889 977.778 li
68.8892 977.778 li
168.889 877.778 li
cp
.0588235 .364706 .439216 rgb
f
168.889 877.778 mo
278.889 977.778 li
68.8892 977.778 li
168.889 877.778 li
cp
@
169.111 882.222 mo
271.778 975.556 li
75.7778 975.556 li
169.111 882.222 li
cp
.705882 .992157 .67451 rgb
f
169.111 882.222 mo
271.778 975.556 li
75.7778 975.556 li
169.111 882.222 li
cp
@
169.333 886.667 mo
264.667 973.333 li
82.667 973.333 li
169.333 886.667 li
cp
.0588235 .364706 .439216 rgb
f
169.333 886.667 mo
264.667 973.333 li
82.667 973.333 li
169.333 886.667 li
cp
@
169.556 891.111 mo
257.556 971.111 li
89.5562 971.111 li
169.556 891.111 li
cp
.705882 .992157 .67451 rgb
f
169.556 891.111 mo
257.556 971.111 li
89.5562 971.111 li
169.556 891.111 li
cp
@
169.778 895.556 mo
250.444 968.889 li
96.4438 968.889 li
169.778 895.556 li
cp
.0588235 .364706 .439216 rgb
f
169.778 895.556 mo
250.444 968.889 li
96.4438 968.889 li
169.778 895.556 li
cp
@
170 900 mo
243.333 966.667 li
103.333 966.667 li
170 900 li
cp
.705882 .992157 .67451 rgb
f
170 900 mo
243.333 966.667 li
103.333 966.667 li
170 900 li
cp
@
170.222 904.444 mo
236.222 964.444 li
110.222 964.444 li
170.222 904.444 li
cp
.0588235 .364706 .439216 rgb
f
170.222 904.444 mo
236.222 964.444 li
110.222 964.444 li
170.222 904.444 li
cp
@
170.444 908.889 mo
229.111 962.222 li
117.111 962.222 li
170.444 908.889 li
cp
.705882 .992157 .67451 rgb
f
170.444 908.889 mo
229.111 962.222 li
117.111 962.222 li
170.444 908.889 li
cp
@
170.667 913.333 mo
222 960 li
124 960 li
170.667 913.333 li
cp
.0588235 .364706 .439216 rgb
f
170.667 913.333 mo
222 960 li
124 960 li
170.667 913.333 li
cp
@
170.889 917.778 mo
214.889 957.778 li
130.889 957.778 li
170.889 917.778 li
cp
.705882 .992157 .67451 rgb
f
170.889 917.778 mo
214.889 957.778 li
130.889 957.778 li
170.889 917.778 li
cp
@
171.111 922.222 mo
207.778 955.556 li
137.778 955.556 li
171.111 922.222 li
cp
.0588235 .364706 .439216 rgb
f
171.111 922.222 mo
207.778 955.556 li
137.778 955.556 li
171.111 922.222 li
cp
@
171.333 926.667 mo
200.667 953.333 li
144.667 953.333 li
171.333 926.667 li
cp
.705882 .992157 .67451 rgb
f
171.333 926.667 mo
200.667 953.333 li
144.667 953.333 li
171.333 926.667 li
cp
@
171.556 931.111 mo
193.556 951.111 li
151.556 951.111 li
171.556 931.111 li
cp
.0588235 .364706 .439216 rgb
f
171.556 931.111 mo
193.556 951.111 li
151.556 951.111 li
171.556 931.111 li
cp
@
171.778 935.556 mo
186.444 948.889 li
158.444 948.889 li
171.778 935.556 li
cp
.705882 .992157 .67451 rgb
f
171.778 935.556 mo
186.444 948.889 li
158.444 948.889 li
171.778 935.556 li
cp
@
172 940 mo
179.333 946.667 li
165.333 946.667 li
172 940 li
cp
.0588235 .364706 .439216 rgb
f
172 940 mo
179.333 946.667 li
165.333 946.667 li
172 940 li
cp
@
172.222 944.444 mo
172.222 944.444 li
172.222 944.444 li
cp
.705882 .992157 .67451 rgb
f
172.222 944.444 mo
172.222 944.444 li
172.222 944.444 li
cp
@
166.667 833.333 mo
0 1000 li
0 633.333 li
166.667 833.333 li
cp
.0588235 .364706 .439216 rgb
f
166.667 833.333 mo
0 1000 li
0 633.333 li
166.667 833.333 li
cp
@
162.222 832.889 mo
2.22217 992.889 li
2.22217 640.889 li
162.222 832.889 li
cp
.705882 .992157 .67451 rgb
f
162.222 832.889 mo
2.22217 992.889 li
2.22217 640.889 li
162.222 832.889 li
cp
@
157.778 832.444 mo
4.44385 985.778 li
4.44385 648.444 li
157.778 832.444 li
cp
.0588235 .364706 .439216 rgb
f
157.778 832.444 mo
4.44385 985.778 li
4.44385 648.444 li
157.778 832.444 li
cp
@
153.333 832 mo
6.66699 978.667 li
6.66699 656 li
153.333 832 li
cp
.705882 .992157 .67451 rgb
f
153.333 832 mo
6.66699 978.667 li
6.66699 656 li
153.333 832 li
cp
@
148.889 831.556 mo
8.88916 971.556 li
8.88916 663.556 li
148.889 831.556 li
cp
.0588235 .364706 .439216 rgb
f
148.889 831.556 mo
8.88916 971.556 li
8.88916 663.556 li
148.889 831.556 li
cp
@
144.444 831.111 mo
11.1108 964.444 li
11.1108 671.111 li
144.444 831.111 li
cp
.705882 .992157 .67451 rgb
f
144.444 831.111 mo
11.1108 964.444 li
11.1108 671.111 li
144.444 831.111 li
cp
@
140 830.667 mo
13.333 957.333 li
13.333 678.667 li
140 830.667 li
cp
.0588235 .364706 .439216 rgb
f
140 830.667 mo
13.333 957.333 li
13.333 678.667 li
140 830.667 li
cp
@
135.556 830.222 mo
15.5562 950.222 li
15.5562 686.222 li
135.556 830.222 li
cp
.705882 .992157 .67451 rgb
f
135.556 830.222 mo
15.5562 950.222 li
15.5562 686.222 li
135.556 830.222 li
cp
@
131.111 829.778 mo
17.7778 943.111 li
17.7778 693.778 li
131.111 829.778 li
cp
.0588235 .364706 .439216 rgb
f
131.111 829.778 mo
17.7778 943.111 li
17.7778 693.778 li
131.111 829.778 li
cp
@
126.667 829.333 mo
20 936 li
20 701.333 li
126.667 829.333 li
cp
.705882 .992157 .67451 rgb
f
126.667 829.333 mo
20 936 li
20 701.333 li
126.667 829.333 li
cp
@
122.222 828.889 mo
22.2222 928.889 li
22.2222 708.889 li
122.222 828.889 li
cp
.0588235 .364706 .439216 rgb
f
122.222 828.889 mo
22.2222 928.889 li
22.2222 708.889 li
122.222 828.889 li
cp
@
117.778 828.444 mo
24.4438 921.778 li
24.4438 716.444 li
117.778 828.444 li
cp
.705882 .992157 .67451 rgb
f
117.778 828.444 mo
24.4438 921.778 li
24.4438 716.444 li
117.778 828.444 li
cp
@
113.333 828 mo
26.667 914.667 li
26.667 724 li
113.333 828 li
cp
.0588235 .364706 .439216 rgb
f
113.333 828 mo
26.667 914.667 li
26.667 724 li
113.333 828 li
cp
@
108.889 827.556 mo
28.8892 907.556 li
28.8892 731.556 li
108.889 827.556 li
cp
.705882 .992157 .67451 rgb
f
108.889 827.556 mo
28.8892 907.556 li
28.8892 731.556 li
108.889 827.556 li
cp
@
104.444 827.111 mo
31.1108 900.444 li
31.1108 739.111 li
104.444 827.111 li
cp
.0588235 .364706 .439216 rgb
f
104.444 827.111 mo
31.1108 900.444 li
31.1108 739.111 li
104.444 827.111 li
cp
@
100 826.667 mo
33.333 893.333 li
33.333 746.667 li
100 826.667 li
cp
.705882 .992157 .67451 rgb
f
100 826.667 mo
33.333 893.333 li
33.333 746.667 li
100 826.667 li
cp
@
95.5562 826.222 mo
35.5562 886.222 li
35.5562 754.222 li
95.5562 826.222 li
cp
.0588235 .364706 .439216 rgb
f
95.5562 826.222 mo
35.5562 886.222 li
35.5562 754.222 li
95.5562 826.222 li
cp
@
91.1108 825.778 mo
37.7778 879.111 li
37.7778 761.778 li
91.1108 825.778 li
cp
.705882 .992157 .67451 rgb
f
91.1108 825.778 mo
37.7778 879.111 li
37.7778 761.778 li
91.1108 825.778 li
cp
@
86.667 825.333 mo
40 872 li
40 769.333 li
86.667 825.333 li
cp
.0588235 .364706 .439216 rgb
f
86.667 825.333 mo
40 872 li
40 769.333 li
86.667 825.333 li
cp
@
82.2222 824.889 mo
42.2222 864.889 li
42.2222 776.889 li
82.2222 824.889 li
cp
.705882 .992157 .67451 rgb
f
82.2222 824.889 mo
42.2222 864.889 li
42.2222 776.889 li
82.2222 824.889 li
cp
@
77.7778 824.444 mo
44.4438 857.778 li
44.4438 784.444 li
77.7778 824.444 li
cp
.0588235 .364706 .439216 rgb
f
77.7778 824.444 mo
44.4438 857.778 li
44.4438 784.444 li
77.7778 824.444 li
cp
@
73.333 824 mo
46.667 850.667 li
46.667 792 li
73.333 824 li
cp
.705882 .992157 .67451 rgb
f
73.333 824 mo
46.667 850.667 li
46.667 792 li
73.333 824 li
cp
@
68.8892 823.556 mo
48.8892 843.556 li
48.8892 799.556 li
68.8892 823.556 li
cp
.0588235 .364706 .439216 rgb
f
68.8892 823.556 mo
48.8892 843.556 li
48.8892 799.556 li
68.8892 823.556 li
cp
@
64.4438 823.111 mo
51.1108 836.444 li
51.1108 807.111 li
64.4438 823.111 li
cp
.705882 .992157 .67451 rgb
f
64.4438 823.111 mo
51.1108 836.444 li
51.1108 807.111 li
64.4438 823.111 li
cp
@
60 822.667 mo
53.333 829.333 li
53.333 814.667 li
60 822.667 li
cp
.0588235 .364706 .439216 rgb
f
60 822.667 mo
53.333 829.333 li
53.333 814.667 li
60 822.667 li
cp
@
55.5562 822.222 mo
55.5562 822.222 li
55.5562 822.222 li
cp
.705882 .992157 .67451 rgb
f
55.5562 822.222 mo
55.5562 822.222 li
55.5562 822.222 li
cp
@
524.167 774.167 mo
246.667 670 li
623.333 716.667 li
524.167 774.167 li
cp
.0588235 .364706 .439216 rgb
f
524.167 774.167 mo
246.667 670 li
623.333 716.667 li
524.167 774.167 li
cp
@
521.789 772.011 mo
255.389 672.011 li
616.989 716.811 li
521.789 772.011 li
cp
.705882 .992157 .67451 rgb
f
521.789 772.011 mo
255.389 672.011 li
616.989 716.811 li
521.789 772.011 li
cp
@
519.411 769.856 mo
264.111 674.021 li
610.644 716.956 li
519.411 769.856 li
cp
.0588235 .364706 .439216 rgb
f
519.411 769.856 mo
264.111 674.021 li
610.644 716.956 li
519.411 769.856 li
cp
@
517.033 767.7 mo
272.833 676.033 li
604.3 717.1 li
517.033 767.7 li
cp
.705882 .992157 .67451 rgb
f
517.033 767.7 mo
272.833 676.033 li
604.3 717.1 li
517.033 767.7 li
cp
@
514.656 765.544 mo
281.556 678.044 li
597.956 717.244 li
514.656 765.544 li
cp
.0588235 .364706 .439216 rgb
f
514.656 765.544 mo
281.556 678.044 li
597.956 717.244 li
514.656 765.544 li
cp
@
512.278 763.389 mo
290.278 680.056 li
591.611 717.389 li
512.278 763.389 li
cp
.705882 .992157 .67451 rgb
f
512.278 763.389 mo
290.278 680.056 li
591.611 717.389 li
512.278 763.389 li
cp
@
509.9 761.233 mo
299 682.067 li
585.267 717.533 li
509.9 761.233 li
cp
.0588235 .364706 .439216 rgb
f
509.9 761.233 mo
299 682.067 li
585.267 717.533 li
509.9 761.233 li
cp
@
507.522 759.078 mo
307.722 684.078 li
578.922 717.678 li
507.522 759.078 li
cp
.705882 .992157 .67451 rgb
f
507.522 759.078 mo
307.722 684.078 li
578.922 717.678 li
507.522 759.078 li
cp
@
505.144 756.922 mo
316.444 686.089 li
572.578 717.822 li
505.144 756.922 li
cp
.0588235 .364706 .439216 rgb
f
505.144 756.922 mo
316.444 686.089 li
572.578 717.822 li
505.144 756.922 li
cp
@
502.767 754.767 mo
325.167 688.1 li
566.233 717.967 li
502.767 754.767 li
cp
.705882 .992157 .67451 rgb
f
502.767 754.767 mo
325.167 688.1 li
566.233 717.967 li
502.767 754.767 li
cp
@
500.389 752.611 mo
333.889 690.111 li
559.889 718.111 li
500.389 752.611 li
cp
.0588235 .364706 .439216 rgb
f
500.389 752.611 mo
333.889 690.111 li
559.889 718.111 li
500.389 752.611 li
cp
@
498.011 750.456 mo
342.611 692.122 li
553.544 718.256 li
498.011 750.456 li
cp
.705882 .992157 .67451 rgb
f
498.011 750.456 mo
342.611 692.122 li
553.544 718.256 li
498.011 750.456 li
cp
@
495.633 748.3 mo
351.333 694.133 li
547.2 718.4 li
495.633 748.3 li
cp
.0588235 .364706 .439216 rgb
f
495.633 748.3 mo
351.333 694.133 li
547.2 718.4 li
495.633 748.3 li
cp
@
493.256 746.144 mo
360.056 696.144 li
540.856 718.544 li
493.256 746.144 li
cp
.705882 .992157 .67451 rgb
f
493.256 746.144 mo
360.056 696.144 li
540.856 718.544 li
493.256 746.144 li
cp
@
490.878 743.989 mo
368.778 698.156 li
534.511 718.689 li
490.878 743.989 li
cp
.0588235 .364706 .439216 rgb
f
490.878 743.989 mo
368.778 698.156 li
534.511 718.689 li
490.878 743.989 li
cp
@
488.5 741.833 mo
377.5 700.167 li
528.167 718.833 li
488.5 741.833 li
cp
.705882 .992157 .67451 rgb
f
488.5 741.833 mo
377.5 700.167 li
528.167 718.833 li
488.5 741.833 li
cp
@
486.122 739.678 mo
386.222 702.178 li
521.822 718.979 li
486.122 739.678 li
cp
.0588235 .364706 .439216 rgb
f
486.122 739.678 mo
386.222 702.178 li
521.822 718.979 li
486.122 739.678 li
cp
@
483.744 737.521 mo
394.944 704.189 li
515.479 719.122 li
483.744 737.521 li
cp
.705882 .992157 .67451 rgb
f
483.744 737.521 mo
394.944 704.189 li
515.479 719.122 li
483.744 737.521 li
cp
@
481.367 735.367 mo
403.667 706.2 li
509.133 719.267 li
481.367 735.367 li
cp
.0588235 .364706 .439216 rgb
f
481.367 735.367 mo
403.667 706.2 li
509.133 719.267 li
481.367 735.367 li
cp
@
478.989 733.211 mo
412.389 708.211 li
502.789 719.411 li
478.989 733.211 li
cp
.705882 .992157 .67451 rgb
f
478.989 733.211 mo
412.389 708.211 li
502.789 719.411 li
478.989 733.211 li
cp
@
476.611 731.056 mo
421.111 710.222 li
496.444 719.556 li
476.611 731.056 li
cp
.0588235 .364706 .439216 rgb
f
476.611 731.056 mo
421.111 710.222 li
496.444 719.556 li
476.611 731.056 li
cp
@
474.233 728.9 mo
429.833 712.233 li
490.1 719.7 li
474.233 728.9 li
cp
.705882 .992157 .67451 rgb
f
474.233 728.9 mo
429.833 712.233 li
490.1 719.7 li
474.233 728.9 li
cp
@
471.856 726.744 mo
438.556 714.244 li
483.756 719.844 li
471.856 726.744 li
cp
.0588235 .364706 .439216 rgb
f
471.856 726.744 mo
438.556 714.244 li
483.756 719.844 li
471.856 726.744 li
cp
@
469.478 724.589 mo
447.278 716.256 li
477.411 719.989 li
469.478 724.589 li
cp
.705882 .992157 .67451 rgb
f
469.478 724.589 mo
447.278 716.256 li
477.411 719.989 li
469.478 724.589 li
cp
@
467.1 722.433 mo
456 718.267 li
471.067 720.133 li
467.1 722.433 li
cp
.0588235 .364706 .439216 rgb
f
467.1 722.433 mo
456 718.267 li
471.067 720.133 li
467.1 722.433 li
cp
@
464.722 720.278 mo
464.722 720.278 li
464.722 720.278 li
cp
.705882 .992157 .67451 rgb
f
464.722 720.278 mo
464.722 720.278 li
464.722 720.278 li
cp
@
524.167 774.167 mo
623.333 716.667 li
646.667 1000 li
524.167 774.167 li
cp
.0588235 .364706 .439216 rgb
f
524.167 774.167 mo
623.333 716.667 li
646.667 1000 li
524.167 774.167 li
cp
@
527.122 776.411 mo
622.322 721.211 li
644.722 993.211 li
527.122 776.411 li
cp
.705882 .992157 .67451 rgb
f
527.122 776.411 mo
622.322 721.211 li
644.722 993.211 li
527.122 776.411 li
cp
@
530.078 778.656 mo
621.311 725.756 li
642.778 986.422 li
530.078 778.656 li
cp
.0588235 .364706 .439216 rgb
f
530.078 778.656 mo
621.311 725.756 li
642.778 986.422 li
530.078 778.656 li
cp
@
533.033 780.9 mo
620.3 730.3 li
640.833 979.633 li
533.033 780.9 li
cp
.705882 .992157 .67451 rgb
f
533.033 780.9 mo
620.3 730.3 li
640.833 979.633 li
533.033 780.9 li
cp
@
535.989 783.144 mo
619.289 734.844 li
638.889 972.844 li
535.989 783.144 li
cp
.0588235 .364706 .439216 rgb
f
535.989 783.144 mo
619.289 734.844 li
638.889 972.844 li
535.989 783.144 li
cp
@
538.944 785.389 mo
618.278 739.389 li
636.944 966.056 li
538.944 785.389 li
cp
.705882 .992157 .67451 rgb
f
538.944 785.389 mo
618.278 739.389 li
636.944 966.056 li
538.944 785.389 li
cp
@
541.9 787.633 mo
617.267 743.933 li
635 959.267 li
541.9 787.633 li
cp
.0588235 .364706 .439216 rgb
f
541.9 787.633 mo
617.267 743.933 li
635 959.267 li
541.9 787.633 li
cp
@
544.856 789.878 mo
616.256 748.479 li
633.056 952.479 li
544.856 789.878 li
cp
.705882 .992157 .67451 rgb
f
544.856 789.878 mo
616.256 748.479 li
633.056 952.479 li
544.856 789.878 li
cp
@
547.811 792.122 mo
615.244 753.021 li
631.111 945.689 li
547.811 792.122 li
cp
.0588235 .364706 .439216 rgb
f
547.811 792.122 mo
615.244 753.021 li
631.111 945.689 li
547.811 792.122 li
cp
@
550.767 794.367 mo
614.233 757.567 li
629.167 938.9 li
550.767 794.367 li
cp
.705882 .992157 .67451 rgb
f
550.767 794.367 mo
614.233 757.567 li
629.167 938.9 li
550.767 794.367 li
cp
@
553.722 796.611 mo
613.222 762.111 li
627.222 932.111 li
553.722 796.611 li
cp
.0588235 .364706 .439216 rgb
f
553.722 796.611 mo
613.222 762.111 li
627.222 932.111 li
553.722 796.611 li
cp
@
556.678 798.856 mo
612.211 766.656 li
625.278 925.322 li
556.678 798.856 li
cp
.705882 .992157 .67451 rgb
f
556.678 798.856 mo
612.211 766.656 li
625.278 925.322 li
556.678 798.856 li
cp
@
559.633 801.1 mo
611.2 771.2 li
623.333 918.533 li
559.633 801.1 li
cp
.0588235 .364706 .439216 rgb
f
559.633 801.1 mo
611.2 771.2 li
623.333 918.533 li
559.633 801.1 li
cp
@
562.589 803.344 mo
610.189 775.744 li
621.389 911.744 li
562.589 803.344 li
cp
.705882 .992157 .67451 rgb
f
562.589 803.344 mo
610.189 775.744 li
621.389 911.744 li
562.589 803.344 li
cp
@
565.544 805.589 mo
609.178 780.289 li
619.444 904.956 li
565.544 805.589 li
cp
.0588235 .364706 .439216 rgb
f
565.544 805.589 mo
609.178 780.289 li
619.444 904.956 li
565.544 805.589 li
cp
@
568.5 807.833 mo
608.167 784.833 li
617.5 898.167 li
568.5 807.833 li
cp
.705882 .992157 .67451 rgb
f
568.5 807.833 mo
608.167 784.833 li
617.5 898.167 li
568.5 807.833 li
cp
@
571.456 810.078 mo
607.156 789.378 li
615.556 891.378 li
571.456 810.078 li
cp
.0588235 .364706 .439216 rgb
f
571.456 810.078 mo
607.156 789.378 li
615.556 891.378 li
571.456 810.078 li
cp
@
574.411 812.322 mo
606.144 793.922 li
613.611 884.589 li
574.411 812.322 li
cp
.705882 .992157 .67451 rgb
f
574.411 812.322 mo
606.144 793.922 li
613.611 884.589 li
574.411 812.322 li
cp
@
577.367 814.567 mo
605.133 798.467 li
611.667 877.8 li
577.367 814.567 li
cp
.0588235 .364706 .439216 rgb
f
577.367 814.567 mo
605.133 798.467 li
611.667 877.8 li
577.367 814.567 li
cp
@
580.322 816.811 mo
604.122 803.011 li
609.722 871.011 li
580.322 816.811 li
cp
.705882 .992157 .67451 rgb
f
580.322 816.811 mo
604.122 803.011 li
609.722 871.011 li
580.322 816.811 li
cp
@
583.278 819.056 mo
603.111 807.556 li
607.778 864.222 li
583.278 819.056 li
cp
.0588235 .364706 .439216 rgb
f
583.278 819.056 mo
603.111 807.556 li
607.778 864.222 li
583.278 819.056 li
cp
@
586.233 821.3 mo
602.1 812.1 li
605.833 857.433 li
586.233 821.3 li
cp
.705882 .992157 .67451 rgb
f
586.233 821.3 mo
602.1 812.1 li
605.833 857.433 li
586.233 821.3 li
cp
@
589.189 823.544 mo
601.089 816.644 li
603.889 850.644 li
589.189 823.544 li
cp
.0588235 .364706 .439216 rgb
f
589.189 823.544 mo
601.089 816.644 li
603.889 850.644 li
589.189 823.544 li
cp
@
592.144 825.789 mo
600.078 821.189 li
601.944 843.856 li
592.144 825.789 li
cp
.705882 .992157 .67451 rgb
f
592.144 825.789 mo
600.078 821.189 li
601.944 843.856 li
592.144 825.789 li
cp
@
595.1 828.033 mo
599.067 825.733 li
600 837.067 li
595.1 828.033 li
cp
.0588235 .364706 .439216 rgb
f
595.1 828.033 mo
599.067 825.733 li
600 837.067 li
595.1 828.033 li
cp
@
598.056 830.278 mo
598.056 830.278 li
598.056 830.278 li
cp
.705882 .992157 .67451 rgb
f
598.056 830.278 mo
598.056 830.278 li
598.056 830.278 li
cp
@
524.167 774.167 mo
646.667 1000 li
350 1000 li
524.167 774.167 li
cp
.0588235 .364706 .439216 rgb
f
524.167 774.167 mo
646.667 1000 li
350 1000 li
524.167 774.167 li
cp
@
523.479 780.189 mo
641.078 996.989 li
356.278 996.989 li
523.479 780.189 li
cp
.705882 .992157 .67451 rgb
f
523.479 780.189 mo
641.078 996.989 li
356.278 996.989 li
523.479 780.189 li
cp
@
522.789 786.211 mo
635.489 993.979 li
362.556 993.979 li
522.789 786.211 li
cp
.0588235 .364706 .439216 rgb
f
522.789 786.211 mo
635.489 993.979 li
362.556 993.979 li
522.789 786.211 li
cp
@
522.1 792.233 mo
629.9 990.967 li
368.833 990.967 li
522.1 792.233 li
cp
.705882 .992157 .67451 rgb
f
522.1 792.233 mo
629.9 990.967 li
368.833 990.967 li
522.1 792.233 li
cp
@
521.411 798.256 mo
624.311 987.956 li
375.111 987.956 li
521.411 798.256 li
cp
.0588235 .364706 .439216 rgb
f
521.411 798.256 mo
624.311 987.956 li
375.111 987.956 li
521.411 798.256 li
cp
@
520.722 804.278 mo
618.722 984.944 li
381.389 984.944 li
520.722 804.278 li
cp
.705882 .992157 .67451 rgb
f
520.722 804.278 mo
618.722 984.944 li
381.389 984.944 li
520.722 804.278 li
cp
@
520.033 810.3 mo
613.133 981.933 li
387.667 981.933 li
520.033 810.3 li
cp
.0588235 .364706 .439216 rgb
f
520.033 810.3 mo
613.133 981.933 li
387.667 981.933 li
520.033 810.3 li
cp
@
519.344 816.322 mo
607.544 978.922 li
393.944 978.922 li
519.344 816.322 li
cp
.705882 .992157 .67451 rgb
f
519.344 816.322 mo
607.544 978.922 li
393.944 978.922 li
519.344 816.322 li
cp
@
518.656 822.344 mo
601.956 975.911 li
400.222 975.911 li
518.656 822.344 li
cp
.0588235 .364706 .439216 rgb
f
518.656 822.344 mo
601.956 975.911 li
400.222 975.911 li
518.656 822.344 li
cp
@
517.967 828.367 mo
596.367 972.9 li
406.5 972.9 li
517.967 828.367 li
cp
.705882 .992157 .67451 rgb
f
517.967 828.367 mo
596.367 972.9 li
406.5 972.9 li
517.967 828.367 li
cp
@
517.278 834.389 mo
590.778 969.889 li
412.778 969.889 li
517.278 834.389 li
cp
.0588235 .364706 .439216 rgb
f
517.278 834.389 mo
590.778 969.889 li
412.778 969.889 li
517.278 834.389 li
cp
@
516.589 840.411 mo
585.189 966.878 li
419.056 966.878 li
516.589 840.411 li
cp
.705882 .992157 .67451 rgb
f
516.589 840.411 mo
585.189 966.878 li
419.056 966.878 li
516.589 840.411 li
cp
@
515.9 846.433 mo
579.6 963.867 li
425.333 963.867 li
515.9 846.433 li
cp
.0588235 .364706 .439216 rgb
f
515.9 846.433 mo
579.6 963.867 li
425.333 963.867 li
515.9 846.433 li
cp
@
515.211 852.456 mo
574.011 960.856 li
431.611 960.856 li
515.211 852.456 li
cp
.705882 .992157 .67451 rgb
f
515.211 852.456 mo
574.011 960.856 li
431.611 960.856 li
515.211 852.456 li
cp
@
514.521 858.479 mo
568.422 957.844 li
437.889 957.844 li
514.521 858.479 li
cp
.0588235 .364706 .439216 rgb
f
514.521 858.479 mo
568.422 957.844 li
437.889 957.844 li
514.521 858.479 li
cp
@
513.833 864.5 mo
562.833 954.833 li
444.167 954.833 li
513.833 864.5 li
cp
.705882 .992157 .67451 rgb
f
513.833 864.5 mo
562.833 954.833 li
444.167 954.833 li
513.833 864.5 li
cp
@
513.144 870.521 mo
557.244 951.822 li
450.444 951.822 li
513.144 870.521 li
cp
.0588235 .364706 .439216 rgb
f
513.144 870.521 mo
557.244 951.822 li
450.444 951.822 li
513.144 870.521 li
cp
@
512.456 876.544 mo
551.656 948.811 li
456.722 948.811 li
512.456 876.544 li
cp
.705882 .992157 .67451 rgb
f
512.456 876.544 mo
551.656 948.811 li
456.722 948.811 li
512.456 876.544 li
cp
@
511.767 882.567 mo
546.067 945.8 li
463 945.8 li
511.767 882.567 li
cp
.0588235 .364706 .439216 rgb
f
511.767 882.567 mo
546.067 945.8 li
463 945.8 li
511.767 882.567 li
cp
@
511.078 888.589 mo
540.479 942.789 li
469.278 942.789 li
511.078 888.589 li
cp
.705882 .992157 .67451 rgb
f
511.078 888.589 mo
540.479 942.789 li
469.278 942.789 li
511.078 888.589 li
cp
@
510.389 894.611 mo
534.889 939.778 li
475.556 939.778 li
510.389 894.611 li
cp
.0588235 .364706 .439216 rgb
f
510.389 894.611 mo
534.889 939.778 li
475.556 939.778 li
510.389 894.611 li
cp
@
509.7 900.633 mo
529.3 936.767 li
481.833 936.767 li
509.7 900.633 li
cp
.705882 .992157 .67451 rgb
f
509.7 900.633 mo
529.3 936.767 li
481.833 936.767 li
509.7 900.633 li
cp
@
509.011 906.656 mo
523.711 933.756 li
488.111 933.756 li
509.011 906.656 li
cp
.0588235 .364706 .439216 rgb
f
509.011 906.656 mo
523.711 933.756 li
488.111 933.756 li
509.011 906.656 li
cp
@
508.322 912.678 mo
518.122 930.744 li
494.389 930.744 li
508.322 912.678 li
cp
.705882 .992157 .67451 rgb
f
508.322 912.678 mo
518.122 930.744 li
494.389 930.744 li
508.322 912.678 li
cp
@
507.633 918.7 mo
512.533 927.733 li
500.667 927.733 li
507.633 918.7 li
cp
.0588235 .364706 .439216 rgb
f
507.633 918.7 mo
512.533 927.733 li
500.667 927.733 li
507.633 918.7 li
cp
@
506.944 924.722 mo
506.944 924.722 li
506.944 924.722 li
cp
.705882 .992157 .67451 rgb
f
506.944 924.722 mo
506.944 924.722 li
506.944 924.722 li
cp
@
524.167 774.167 mo
350 1000 li
246.667 670 li
524.167 774.167 li
cp
.0588235 .364706 .439216 rgb
f
524.167 774.167 mo
350 1000 li
246.667 670 li
524.167 774.167 li
cp
@
518.144 775.789 mo
350.944 992.589 li
251.744 675.789 li
518.144 775.789 li
cp
.705882 .992157 .67451 rgb
f
518.144 775.789 mo
350.944 992.589 li
251.744 675.789 li
518.144 775.789 li
cp
@
512.122 777.411 mo
351.889 985.178 li
256.822 681.578 li
512.122 777.411 li
cp
.0588235 .364706 .439216 rgb
f
512.122 777.411 mo
351.889 985.178 li
256.822 681.578 li
512.122 777.411 li
cp
@
506.1 779.033 mo
352.833 977.767 li
261.9 687.367 li
506.1 779.033 li
cp
.705882 .992157 .67451 rgb
f
506.1 779.033 mo
352.833 977.767 li
261.9 687.367 li
506.1 779.033 li
cp
@
500.078 780.656 mo
353.778 970.356 li
266.978 693.156 li
500.078 780.656 li
cp
.0588235 .364706 .439216 rgb
f
500.078 780.656 mo
353.778 970.356 li
266.978 693.156 li
500.078 780.656 li
cp
@
494.056 782.278 mo
354.722 962.944 li
272.056 698.944 li
494.056 782.278 li
cp
.705882 .992157 .67451 rgb
f
494.056 782.278 mo
354.722 962.944 li
272.056 698.944 li
494.056 782.278 li
cp
@
488.033 783.9 mo
355.667 955.533 li
277.133 704.733 li
488.033 783.9 li
cp
.0588235 .364706 .439216 rgb
f
488.033 783.9 mo
355.667 955.533 li
277.133 704.733 li
488.033 783.9 li
cp
@
482.011 785.521 mo
356.611 948.122 li
282.211 710.521 li
482.011 785.521 li
cp
.705882 .992157 .67451 rgb
f
482.011 785.521 mo
356.611 948.122 li
282.211 710.521 li
482.011 785.521 li
cp
@
475.989 787.144 mo
357.556 940.711 li
287.289 716.311 li
475.989 787.144 li
cp
.0588235 .364706 .439216 rgb
f
475.989 787.144 mo
357.556 940.711 li
287.289 716.311 li
475.989 787.144 li
cp
@
469.967 788.767 mo
358.5 933.3 li
292.367 722.1 li
469.967 788.767 li
cp
.705882 .992157 .67451 rgb
f
469.967 788.767 mo
358.5 933.3 li
292.367 722.1 li
469.967 788.767 li
cp
@
463.944 790.389 mo
359.444 925.889 li
297.444 727.889 li
463.944 790.389 li
cp
.0588235 .364706 .439216 rgb
f
463.944 790.389 mo
359.444 925.889 li
297.444 727.889 li
463.944 790.389 li
cp
@
457.922 792.011 mo
360.389 918.479 li
302.522 733.678 li
457.922 792.011 li
cp
.705882 .992157 .67451 rgb
f
457.922 792.011 mo
360.389 918.479 li
302.522 733.678 li
457.922 792.011 li
cp
@
451.9 793.633 mo
361.333 911.067 li
307.6 739.467 li
451.9 793.633 li
cp
.0588235 .364706 .439216 rgb
f
451.9 793.633 mo
361.333 911.067 li
307.6 739.467 li
451.9 793.633 li
cp
@
445.878 795.256 mo
362.278 903.656 li
312.678 745.256 li
445.878 795.256 li
cp
.705882 .992157 .67451 rgb
f
445.878 795.256 mo
362.278 903.656 li
312.678 745.256 li
445.878 795.256 li
cp
@
439.856 796.878 mo
363.222 896.244 li
317.756 751.044 li
439.856 796.878 li
cp
.0588235 .364706 .439216 rgb
f
439.856 796.878 mo
363.222 896.244 li
317.756 751.044 li
439.856 796.878 li
cp
@
433.833 798.5 mo
364.167 888.833 li
322.833 756.833 li
433.833 798.5 li
cp
.705882 .992157 .67451 rgb
f
433.833 798.5 mo
364.167 888.833 li
322.833 756.833 li
433.833 798.5 li
cp
@
427.811 800.122 mo
365.111 881.422 li
327.911 762.622 li
427.811 800.122 li
cp
.0588235 .364706 .439216 rgb
f
427.811 800.122 mo
365.111 881.422 li
327.911 762.622 li
427.811 800.122 li
cp
@
421.789 801.744 mo
366.056 874.011 li
332.989 768.411 li
421.789 801.744 li
cp
.705882 .992157 .67451 rgb
f
421.789 801.744 mo
366.056 874.011 li
332.989 768.411 li
421.789 801.744 li
cp
@
415.767 803.367 mo
367 866.6 li
338.067 774.2 li
415.767 803.367 li
cp
.0588235 .364706 .439216 rgb
f
415.767 803.367 mo
367 866.6 li
338.067 774.2 li
415.767 803.367 li
cp
@
409.744 804.989 mo
367.944 859.189 li
343.144 779.989 li
409.744 804.989 li
cp
.705882 .992157 .67451 rgb
f
409.744 804.989 mo
367.944 859.189 li
343.144 779.989 li
409.744 804.989 li
cp
@
403.722 806.611 mo
368.889 851.778 li
348.222 785.778 li
403.722 806.611 li
cp
.0588235 .364706 .439216 rgb
f
403.722 806.611 mo
368.889 851.778 li
348.222 785.778 li
403.722 806.611 li
cp
@
397.7 808.233 mo
369.833 844.367 li
353.3 791.567 li
397.7 808.233 li
cp
.705882 .992157 .67451 rgb
f
397.7 808.233 mo
369.833 844.367 li
353.3 791.567 li
397.7 808.233 li
cp
@
391.678 809.856 mo
370.778 836.956 li
358.378 797.356 li
391.678 809.856 li
cp
.0588235 .364706 .439216 rgb
f
391.678 809.856 mo
370.778 836.956 li
358.378 797.356 li
391.678 809.856 li
cp
@
385.656 811.479 mo
371.722 829.544 li
363.456 803.144 li
385.656 811.479 li
cp
.705882 .992157 .67451 rgb
f
385.656 811.479 mo
371.722 829.544 li
363.456 803.144 li
385.656 811.479 li
cp
@
379.633 813.1 mo
372.667 822.133 li
368.533 808.933 li
379.633 813.1 li
cp
.0588235 .364706 .439216 rgb
f
379.633 813.1 mo
372.667 822.133 li
368.533 808.933 li
379.633 813.1 li
cp
@
373.611 814.722 mo
373.611 814.722 li
373.611 814.722 li
cp
.705882 .992157 .67451 rgb
f
373.611 814.722 mo
373.611 814.722 li
373.611 814.722 li
cp
@
780.833 829.167 mo
623.333 716.667 li
1000 733.333 li
780.833 829.167 li
cp
.0588235 .364706 .439216 rgb
f
780.833 829.167 mo
623.333 716.667 li
1000 733.333 li
780.833 829.167 li
cp
@
781.656 826.389 mo
630.456 718.389 li
992.056 734.389 li
781.656 826.389 li
cp
.705882 .992157 .67451 rgb
f
781.656 826.389 mo
630.456 718.389 li
992.056 734.389 li
781.656 826.389 li
cp
@
782.479 823.611 mo
637.578 720.111 li
984.111 735.444 li
782.479 823.611 li
cp
.0588235 .364706 .439216 rgb
f
782.479 823.611 mo
637.578 720.111 li
984.111 735.444 li
782.479 823.611 li
cp
@
783.3 820.833 mo
644.7 721.833 li
976.167 736.5 li
783.3 820.833 li
cp
.705882 .992157 .67451 rgb
f
783.3 820.833 mo
644.7 721.833 li
976.167 736.5 li
783.3 820.833 li
cp
@
784.122 818.056 mo
651.822 723.556 li
968.222 737.556 li
784.122 818.056 li
cp
.0588235 .364706 .439216 rgb
f
784.122 818.056 mo
651.822 723.556 li
968.222 737.556 li
784.122 818.056 li
cp
@
784.944 815.278 mo
658.944 725.278 li
960.278 738.611 li
784.944 815.278 li
cp
.705882 .992157 .67451 rgb
f
784.944 815.278 mo
658.944 725.278 li
960.278 738.611 li
784.944 815.278 li
cp
@
785.767 812.5 mo
666.067 727 li
952.333 739.667 li
785.767 812.5 li
cp
.0588235 .364706 .439216 rgb
f
785.767 812.5 mo
666.067 727 li
952.333 739.667 li
785.767 812.5 li
cp
@
786.589 809.722 mo
673.189 728.722 li
944.389 740.722 li
786.589 809.722 li
cp
.705882 .992157 .67451 rgb
f
786.589 809.722 mo
673.189 728.722 li
944.389 740.722 li
786.589 809.722 li
cp
@
787.411 806.944 mo
680.311 730.444 li
936.444 741.778 li
787.411 806.944 li
cp
.0588235 .364706 .439216 rgb
f
787.411 806.944 mo
680.311 730.444 li
936.444 741.778 li
787.411 806.944 li
cp
@
788.233 804.167 mo
687.433 732.167 li
928.5 742.833 li
788.233 804.167 li
cp
.705882 .992157 .67451 rgb
f
788.233 804.167 mo
687.433 732.167 li
928.5 742.833 li
788.233 804.167 li
cp
@
789.056 801.389 mo
694.556 733.889 li
920.556 743.889 li
789.056 801.389 li
cp
.0588235 .364706 .439216 rgb
f
789.056 801.389 mo
694.556 733.889 li
920.556 743.889 li
789.056 801.389 li
cp
@
789.878 798.611 mo
701.678 735.611 li
912.611 744.944 li
789.878 798.611 li
cp
.705882 .992157 .67451 rgb
f
789.878 798.611 mo
701.678 735.611 li
912.611 744.944 li
789.878 798.611 li
cp
@
790.7 795.833 mo
708.8 737.333 li
904.667 746 li
790.7 795.833 li
cp
.0588235 .364706 .439216 rgb
f
790.7 795.833 mo
708.8 737.333 li
904.667 746 li
790.7 795.833 li
cp
@
791.521 793.056 mo
715.922 739.056 li
896.722 747.056 li
791.521 793.056 li
cp
.705882 .992157 .67451 rgb
f
791.521 793.056 mo
715.922 739.056 li
896.722 747.056 li
791.521 793.056 li
cp
@
792.344 790.278 mo
723.044 740.778 li
888.778 748.111 li
792.344 790.278 li
cp
.0588235 .364706 .439216 rgb
f
792.344 790.278 mo
723.044 740.778 li
888.778 748.111 li
792.344 790.278 li
cp
@
793.167 787.5 mo
730.167 742.5 li
880.833 749.167 li
793.167 787.5 li
cp
.705882 .992157 .67451 rgb
f
793.167 787.5 mo
730.167 742.5 li
880.833 749.167 li
793.167 787.5 li
cp
@
793.989 784.722 mo
737.289 744.222 li
872.889 750.222 li
793.989 784.722 li
cp
.0588235 .364706 .439216 rgb
f
793.989 784.722 mo
737.289 744.222 li
872.889 750.222 li
793.989 784.722 li
cp
@
794.811 781.944 mo
744.411 745.944 li
864.944 751.278 li
794.811 781.944 li
cp
.705882 .992157 .67451 rgb
f
794.811 781.944 mo
744.411 745.944 li
864.944 751.278 li
794.811 781.944 li
cp
@
795.633 779.167 mo
751.533 747.667 li
857 752.333 li
795.633 779.167 li
cp
.0588235 .364706 .439216 rgb
f
795.633 779.167 mo
751.533 747.667 li
857 752.333 li
795.633 779.167 li
cp
@
796.456 776.389 mo
758.656 749.389 li
849.056 753.389 li
796.456 776.389 li
cp
.705882 .992157 .67451 rgb
f
796.456 776.389 mo
758.656 749.389 li
849.056 753.389 li
796.456 776.389 li
cp
@
797.278 773.611 mo
765.778 751.111 li
841.111 754.444 li
797.278 773.611 li
cp
.0588235 .364706 .439216 rgb
f
797.278 773.611 mo
765.778 751.111 li
841.111 754.444 li
797.278 773.611 li
cp
@
798.1 770.833 mo
772.9 752.833 li
833.167 755.5 li
798.1 770.833 li
cp
.705882 .992157 .67451 rgb
f
798.1 770.833 mo
772.9 752.833 li
833.167 755.5 li
798.1 770.833 li
cp
@
798.922 768.056 mo
780.021 754.556 li
825.222 756.556 li
798.922 768.056 li
cp
.0588235 .364706 .439216 rgb
f
798.922 768.056 mo
780.021 754.556 li
825.222 756.556 li
798.922 768.056 li
cp
@
799.744 765.278 mo
787.144 756.278 li
817.278 757.611 li
799.744 765.278 li
cp
.705882 .992157 .67451 rgb
f
799.744 765.278 mo
787.144 756.278 li
817.278 757.611 li
799.744 765.278 li
cp
@
800.567 762.5 mo
794.267 758 li
809.333 758.667 li
800.567 762.5 li
cp
.0588235 .364706 .439216 rgb
f
800.567 762.5 mo
794.267 758 li
809.333 758.667 li
800.567 762.5 li
cp
@
801.389 759.722 mo
801.389 759.722 li
801.389 759.722 li
cp
.705882 .992157 .67451 rgb
f
801.389 759.722 mo
801.389 759.722 li
801.389 759.722 li
cp
@
780.833 829.167 mo
1000 733.333 li
1000 1000 li
780.833 829.167 li
cp
.0588235 .364706 .439216 rgb
f
780.833 829.167 mo
1000 733.333 li
1000 1000 li
780.833 829.167 li
cp
@
786.678 830.167 mo
997.078 738.167 li
997.078 994.167 li
786.678 830.167 li
cp
.705882 .992157 .67451 rgb
f
786.678 830.167 mo
997.078 738.167 li
997.078 994.167 li
786.678 830.167 li
cp
@
792.521 831.167 mo
994.156 743 li
994.156 988.333 li
792.521 831.167 li
cp
.0588235 .364706 .439216 rgb
f
792.521 831.167 mo
994.156 743 li
994.156 988.333 li
792.521 831.167 li
cp
@
798.367 832.167 mo
991.233 747.833 li
991.233 982.5 li
798.367 832.167 li
cp
.705882 .992157 .67451 rgb
f
798.367 832.167 mo
991.233 747.833 li
991.233 982.5 li
798.367 832.167 li
cp
@
804.211 833.167 mo
988.311 752.667 li
988.311 976.667 li
804.211 833.167 li
cp
.0588235 .364706 .439216 rgb
f
804.211 833.167 mo
988.311 752.667 li
988.311 976.667 li
804.211 833.167 li
cp
@
810.056 834.167 mo
985.389 757.5 li
985.389 970.833 li
810.056 834.167 li
cp
.705882 .992157 .67451 rgb
f
810.056 834.167 mo
985.389 757.5 li
985.389 970.833 li
810.056 834.167 li
cp
@
815.9 835.167 mo
982.467 762.333 li
982.467 965 li
815.9 835.167 li
cp
.0588235 .364706 .439216 rgb
f
815.9 835.167 mo
982.467 762.333 li
982.467 965 li
815.9 835.167 li
cp
@
821.744 836.167 mo
979.544 767.167 li
979.544 959.167 li
821.744 836.167 li
cp
.705882 .992157 .67451 rgb
f
821.744 836.167 mo
979.544 767.167 li
979.544 959.167 li
821.744 836.167 li
cp
@
827.589 837.167 mo
976.622 772 li
976.622 953.333 li
827.589 837.167 li
cp
.0588235 .364706 .439216 rgb
f
827.589 837.167 mo
976.622 772 li
976.622 953.333 li
827.589 837.167 li
cp
@
833.433 838.167 mo
973.7 776.833 li
973.7 947.5 li
833.433 838.167 li
cp
.705882 .992157 .67451 rgb
f
833.433 838.167 mo
973.7 776.833 li
973.7 947.5 li
833.433 838.167 li
cp
@
839.278 839.167 mo
970.778 781.667 li
970.778 941.667 li
839.278 839.167 li
cp
.0588235 .364706 .439216 rgb
f
839.278 839.167 mo
970.778 781.667 li
970.778 941.667 li
839.278 839.167 li
cp
@
845.122 840.167 mo
967.856 786.5 li
967.856 935.833 li
845.122 840.167 li
cp
.705882 .992157 .67451 rgb
f
845.122 840.167 mo
967.856 786.5 li
967.856 935.833 li
845.122 840.167 li
cp
@
850.967 841.167 mo
964.933 791.333 li
964.933 930 li
850.967 841.167 li
cp
.0588235 .364706 .439216 rgb
f
850.967 841.167 mo
964.933 791.333 li
964.933 930 li
850.967 841.167 li
cp
@
856.811 842.167 mo
962.011 796.167 li
962.011 924.167 li
856.811 842.167 li
cp
.705882 .992157 .67451 rgb
f
856.811 842.167 mo
962.011 796.167 li
962.011 924.167 li
856.811 842.167 li
cp
@
862.656 843.167 mo
959.089 801 li
959.089 918.333 li
862.656 843.167 li
cp
.0588235 .364706 .439216 rgb
f
862.656 843.167 mo
959.089 801 li
959.089 918.333 li
862.656 843.167 li
cp
@
868.5 844.167 mo
956.167 805.833 li
956.167 912.5 li
868.5 844.167 li
cp
.705882 .992157 .67451 rgb
f
868.5 844.167 mo
956.167 805.833 li
956.167 912.5 li
868.5 844.167 li
cp
@
874.344 845.167 mo
953.244 810.667 li
953.244 906.667 li
874.344 845.167 li
cp
.0588235 .364706 .439216 rgb
f
874.344 845.167 mo
953.244 810.667 li
953.244 906.667 li
874.344 845.167 li
cp
@
880.189 846.167 mo
950.322 815.5 li
950.322 900.833 li
880.189 846.167 li
cp
.705882 .992157 .67451 rgb
f
880.189 846.167 mo
950.322 815.5 li
950.322 900.833 li
880.189 846.167 li
cp
@
886.033 847.167 mo
947.4 820.333 li
947.4 895 li
886.033 847.167 li
cp
.0588235 .364706 .439216 rgb
f
886.033 847.167 mo
947.4 820.333 li
947.4 895 li
886.033 847.167 li
cp
@
891.878 848.167 mo
944.479 825.167 li
944.479 889.167 li
891.878 848.167 li
cp
.705882 .992157 .67451 rgb
f
891.878 848.167 mo
944.479 825.167 li
944.479 889.167 li
891.878 848.167 li
cp
@
897.722 849.167 mo
941.556 830 li
941.556 883.333 li
897.722 849.167 li
cp
.0588235 .364706 .439216 rgb
f
897.722 849.167 mo
941.556 830 li
941.556 883.333 li
897.722 849.167 li
cp
@
903.567 850.167 mo
938.633 834.833 li
938.633 877.5 li
903.567 850.167 li
cp
.705882 .992157 .67451 rgb
f
903.567 850.167 mo
938.633 834.833 li
938.633 877.5 li
903.567 850.167 li
cp
@
909.411 851.167 mo
935.711 839.667 li
935.711 871.667 li
909.411 851.167 li
cp
.0588235 .364706 .439216 rgb
f
909.411 851.167 mo
935.711 839.667 li
935.711 871.667 li
909.411 851.167 li
cp
@
915.256 852.167 mo
932.789 844.5 li
932.789 865.833 li
915.256 852.167 li
cp
.705882 .992157 .67451 rgb
f
915.256 852.167 mo
932.789 844.5 li
932.789 865.833 li
915.256 852.167 li
cp
@
921.1 853.167 mo
929.867 849.333 li
929.867 860 li
921.1 853.167 li
cp
.0588235 .364706 .439216 rgb
f
921.1 853.167 mo
929.867 849.333 li
929.867 860 li
921.1 853.167 li
cp
@
926.944 854.167 mo
926.944 854.167 li
926.944 854.167 li
cp
.705882 .992157 .67451 rgb
f
926.944 854.167 mo
926.944 854.167 li
926.944 854.167 li
cp
@
780.833 829.167 mo
1000 1000 li
646.667 1000 li
780.833 829.167 li
cp
.0588235 .364706 .439216 rgb
f
780.833 829.167 mo
1000 1000 li
646.667 1000 li
780.833 829.167 li
cp
@
781.967 833.722 mo
992.367 997.722 li
653.167 997.722 li
781.967 833.722 li
cp
.705882 .992157 .67451 rgb
f
781.967 833.722 mo
992.367 997.722 li
653.167 997.722 li
781.967 833.722 li
cp
@
783.1 838.278 mo
984.733 995.444 li
659.667 995.444 li
783.1 838.278 li
cp
.0588235 .364706 .439216 rgb
f
783.1 838.278 mo
984.733 995.444 li
659.667 995.444 li
783.1 838.278 li
cp
@
784.233 842.833 mo
977.1 993.167 li
666.167 993.167 li
784.233 842.833 li
cp
.705882 .992157 .67451 rgb
f
784.233 842.833 mo
977.1 993.167 li
666.167 993.167 li
784.233 842.833 li
cp
@
785.367 847.389 mo
969.467 990.889 li
672.667 990.889 li
785.367 847.389 li
cp
.0588235 .364706 .439216 rgb
f
785.367 847.389 mo
969.467 990.889 li
672.667 990.889 li
785.367 847.389 li
cp
@
786.5 851.944 mo
961.833 988.611 li
679.167 988.611 li
786.5 851.944 li
cp
.705882 .992157 .67451 rgb
f
786.5 851.944 mo
961.833 988.611 li
679.167 988.611 li
786.5 851.944 li
cp
@
787.633 856.5 mo
954.2 986.333 li
685.667 986.333 li
787.633 856.5 li
cp
.0588235 .364706 .439216 rgb
f
787.633 856.5 mo
954.2 986.333 li
685.667 986.333 li
787.633 856.5 li
cp
@
788.767 861.056 mo
946.567 984.056 li
692.167 984.056 li
788.767 861.056 li
cp
.705882 .992157 .67451 rgb
f
788.767 861.056 mo
946.567 984.056 li
692.167 984.056 li
788.767 861.056 li
cp
@
789.9 865.611 mo
938.933 981.778 li
698.667 981.778 li
789.9 865.611 li
cp
.0588235 .364706 .439216 rgb
f
789.9 865.611 mo
938.933 981.778 li
698.667 981.778 li
789.9 865.611 li
cp
@
791.033 870.167 mo
931.3 979.5 li
705.167 979.5 li
791.033 870.167 li
cp
.705882 .992157 .67451 rgb
f
791.033 870.167 mo
931.3 979.5 li
705.167 979.5 li
791.033 870.167 li
cp
@
792.167 874.722 mo
923.667 977.222 li
711.667 977.222 li
792.167 874.722 li
cp
.0588235 .364706 .439216 rgb
f
792.167 874.722 mo
923.667 977.222 li
711.667 977.222 li
792.167 874.722 li
cp
@
793.3 879.278 mo
916.033 974.944 li
718.167 974.944 li
793.3 879.278 li
cp
.705882 .992157 .67451 rgb
f
793.3 879.278 mo
916.033 974.944 li
718.167 974.944 li
793.3 879.278 li
cp
@
794.433 883.833 mo
908.4 972.667 li
724.667 972.667 li
794.433 883.833 li
cp
.0588235 .364706 .439216 rgb
f
794.433 883.833 mo
908.4 972.667 li
724.667 972.667 li
794.433 883.833 li
cp
@
795.567 888.389 mo
900.767 970.389 li
731.167 970.389 li
795.567 888.389 li
cp
.705882 .992157 .67451 rgb
f
795.567 888.389 mo
900.767 970.389 li
731.167 970.389 li
795.567 888.389 li
cp
@
796.7 892.944 mo
893.133 968.111 li
737.667 968.111 li
796.7 892.944 li
cp
.0588235 .364706 .439216 rgb
f
796.7 892.944 mo
893.133 968.111 li
737.667 968.111 li
796.7 892.944 li
cp
@
797.833 897.5 mo
885.5 965.833 li
744.167 965.833 li
797.833 897.5 li
cp
.705882 .992157 .67451 rgb
f
797.833 897.5 mo
885.5 965.833 li
744.167 965.833 li
797.833 897.5 li
cp
@
798.967 902.056 mo
877.867 963.556 li
750.667 963.556 li
798.967 902.056 li
cp
.0588235 .364706 .439216 rgb
f
798.967 902.056 mo
877.867 963.556 li
750.667 963.556 li
798.967 902.056 li
cp
@
800.1 906.611 mo
870.233 961.278 li
757.167 961.278 li
800.1 906.611 li
cp
.705882 .992157 .67451 rgb
f
800.1 906.611 mo
870.233 961.278 li
757.167 961.278 li
800.1 906.611 li
cp
@
801.233 911.167 mo
862.6 959 li
763.667 959 li
801.233 911.167 li
cp
.0588235 .364706 .439216 rgb
f
801.233 911.167 mo
862.6 959 li
763.667 959 li
801.233 911.167 li
cp
@
802.367 915.722 mo
854.967 956.722 li
770.167 956.722 li
802.367 915.722 li
cp
.705882 .992157 .67451 rgb
f
802.367 915.722 mo
854.967 956.722 li
770.167 956.722 li
802.367 915.722 li
cp
@
803.5 920.278 mo
847.333 954.444 li
776.667 954.444 li
803.5 920.278 li
cp
.0588235 .364706 .439216 rgb
f
803.5 920.278 mo
847.333 954.444 li
776.667 954.444 li
803.5 920.278 li
cp
@
804.633 924.833 mo
839.7 952.167 li
783.167 952.167 li
804.633 924.833 li
cp
.705882 .992157 .67451 rgb
f
804.633 924.833 mo
839.7 952.167 li
783.167 952.167 li
804.633 924.833 li
cp
@
805.767 929.389 mo
832.067 949.889 li
789.667 949.889 li
805.767 929.389 li
cp
.0588235 .364706 .439216 rgb
f
805.767 929.389 mo
832.067 949.889 li
789.667 949.889 li
805.767 929.389 li
cp
@
806.9 933.944 mo
824.433 947.611 li
796.167 947.611 li
806.9 933.944 li
cp
.705882 .992157 .67451 rgb
f
806.9 933.944 mo
824.433 947.611 li
796.167 947.611 li
806.9 933.944 li
cp
@
808.033 938.5 mo
816.8 945.333 li
802.667 945.333 li
808.033 938.5 li
cp
.0588235 .364706 .439216 rgb
f
808.033 938.5 mo
816.8 945.333 li
802.667 945.333 li
808.033 938.5 li
cp
@
809.167 943.056 mo
809.167 943.056 li
809.167 943.056 li
cp
.705882 .992157 .67451 rgb
f
809.167 943.056 mo
809.167 943.056 li
809.167 943.056 li
cp
@
780.833 829.167 mo
646.667 1000 li
623.333 716.667 li
780.833 829.167 li
cp
.0588235 .364706 .439216 rgb
f
780.833 829.167 mo
646.667 1000 li
623.333 716.667 li
780.833 829.167 li
cp
@
776.944 829.944 mo
648.144 993.944 li
625.744 721.944 li
776.944 829.944 li
cp
.705882 .992157 .67451 rgb
f
776.944 829.944 mo
648.144 993.944 li
625.744 721.944 li
776.944 829.944 li
cp
@
773.056 830.722 mo
649.622 987.889 li
628.156 727.222 li
773.056 830.722 li
cp
.0588235 .364706 .439216 rgb
f
773.056 830.722 mo
649.622 987.889 li
628.156 727.222 li
773.056 830.722 li
cp
@
769.167 831.5 mo
651.1 981.833 li
630.567 732.5 li
769.167 831.5 li
cp
.705882 .992157 .67451 rgb
f
769.167 831.5 mo
651.1 981.833 li
630.567 732.5 li
769.167 831.5 li
cp
@
765.278 832.278 mo
652.578 975.778 li
632.979 737.778 li
765.278 832.278 li
cp
.0588235 .364706 .439216 rgb
f
765.278 832.278 mo
652.578 975.778 li
632.979 737.778 li
765.278 832.278 li
cp
@
761.389 833.056 mo
654.056 969.722 li
635.389 743.056 li
761.389 833.056 li
cp
.705882 .992157 .67451 rgb
f
761.389 833.056 mo
654.056 969.722 li
635.389 743.056 li
761.389 833.056 li
cp
@
757.5 833.833 mo
655.533 963.667 li
637.8 748.333 li
757.5 833.833 li
cp
.0588235 .364706 .439216 rgb
f
757.5 833.833 mo
655.533 963.667 li
637.8 748.333 li
757.5 833.833 li
cp
@
753.611 834.611 mo
657.011 957.611 li
640.211 753.611 li
753.611 834.611 li
cp
.705882 .992157 .67451 rgb
f
753.611 834.611 mo
657.011 957.611 li
640.211 753.611 li
753.611 834.611 li
cp
@
749.722 835.389 mo
658.489 951.556 li
642.622 758.889 li
749.722 835.389 li
cp
.0588235 .364706 .439216 rgb
f
749.722 835.389 mo
658.489 951.556 li
642.622 758.889 li
749.722 835.389 li
cp
@
745.833 836.167 mo
659.967 945.5 li
645.033 764.167 li
745.833 836.167 li
cp
.705882 .992157 .67451 rgb
f
745.833 836.167 mo
659.967 945.5 li
645.033 764.167 li
745.833 836.167 li
cp
@
741.944 836.944 mo
661.444 939.444 li
647.444 769.444 li
741.944 836.944 li
cp
.0588235 .364706 .439216 rgb
f
741.944 836.944 mo
661.444 939.444 li
647.444 769.444 li
741.944 836.944 li
cp
@
738.056 837.722 mo
662.922 933.389 li
649.856 774.722 li
738.056 837.722 li
cp
.705882 .992157 .67451 rgb
f
738.056 837.722 mo
662.922 933.389 li
649.856 774.722 li
738.056 837.722 li
cp
@
734.167 838.5 mo
664.4 927.333 li
652.267 780 li
734.167 838.5 li
cp
.0588235 .364706 .439216 rgb
f
734.167 838.5 mo
664.4 927.333 li
652.267 780 li
734.167 838.5 li
cp
@
730.278 839.278 mo
665.878 921.278 li
654.678 785.278 li
730.278 839.278 li
cp
.705882 .992157 .67451 rgb
f
730.278 839.278 mo
665.878 921.278 li
654.678 785.278 li
730.278 839.278 li
cp
@
726.389 840.056 mo
667.356 915.222 li
657.089 790.556 li
726.389 840.056 li
cp
.0588235 .364706 .439216 rgb
f
726.389 840.056 mo
667.356 915.222 li
657.089 790.556 li
726.389 840.056 li
cp
@
722.5 840.833 mo
668.833 909.167 li
659.5 795.833 li
722.5 840.833 li
cp
.705882 .992157 .67451 rgb
f
722.5 840.833 mo
668.833 909.167 li
659.5 795.833 li
722.5 840.833 li
cp
@
718.611 841.611 mo
670.311 903.111 li
661.911 801.111 li
718.611 841.611 li
cp
.0588235 .364706 .439216 rgb
f
718.611 841.611 mo
670.311 903.111 li
661.911 801.111 li
718.611 841.611 li
cp
@
714.722 842.389 mo
671.789 897.056 li
664.322 806.389 li
714.722 842.389 li
cp
.705882 .992157 .67451 rgb
f
714.722 842.389 mo
671.789 897.056 li
664.322 806.389 li
714.722 842.389 li
cp
@
710.833 843.167 mo
673.267 891 li
666.733 811.667 li
710.833 843.167 li
cp
.0588235 .364706 .439216 rgb
f
710.833 843.167 mo
673.267 891 li
666.733 811.667 li
710.833 843.167 li
cp
@
706.944 843.944 mo
674.744 884.944 li
669.144 816.944 li
706.944 843.944 li
cp
.705882 .992157 .67451 rgb
f
706.944 843.944 mo
674.744 884.944 li
669.144 816.944 li
706.944 843.944 li
cp
@
703.056 844.722 mo
676.222 878.889 li
671.556 822.222 li
703.056 844.722 li
cp
.0588235 .364706 .439216 rgb
f
703.056 844.722 mo
676.222 878.889 li
671.556 822.222 li
703.056 844.722 li
cp
@
699.167 845.5 mo
677.7 872.833 li
673.967 827.5 li
699.167 845.5 li
cp
.705882 .992157 .67451 rgb
f
699.167 845.5 mo
677.7 872.833 li
673.967 827.5 li
699.167 845.5 li
cp
@
695.278 846.278 mo
679.178 866.778 li
676.378 832.778 li
695.278 846.278 li
cp
.0588235 .364706 .439216 rgb
f
695.278 846.278 mo
679.178 866.778 li
676.378 832.778 li
695.278 846.278 li
cp
@
691.389 847.056 mo
680.656 860.722 li
678.789 838.056 li
691.389 847.056 li
cp
.705882 .992157 .67451 rgb
f
691.389 847.056 mo
680.656 860.722 li
678.789 838.056 li
691.389 847.056 li
cp
@
687.5 847.833 mo
682.133 854.667 li
681.2 843.333 li
687.5 847.833 li
cp
.0588235 .364706 .439216 rgb
f
687.5 847.833 mo
682.133 854.667 li
681.2 843.333 li
687.5 847.833 li
cp
@
683.611 848.611 mo
683.611 848.611 li
683.611 848.611 li
cp
.705882 .992157 .67451 rgb
f
683.611 848.611 mo
683.611 848.611 li
683.611 848.611 li
cp
@
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zydd) ()
%%Title: (cbcg_tria2_052.eps)
%%CreationDate: 10/4/2016 3:07 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B3RDgp&KDGch$oP^ka2]3LBnX_ORq\r03fZ#WOp;IrR^MX](q*3]CJ[\%TD[j(NSS;l<B]=D)A`U\3HEesgRsXhPWL3RLgR
%%m`c)JsJ/cII*#oWL`m"Xm<-ejDdU+rPoIKph=Jg'ri'SYMYt[B(*7YHED>%S#o/\dp5L]r`s68%OuD\9-n^ZCG]5p8o6C7Y90^f
%qQBZoW]+[h<p-g;98QPQ^nmdt[..F?<"H`.?YZ-cP\*Ir>^jQ'??B%gW+YlGQg7GZT;^tTf'B$/U-YKBWRL5DIP.Q5s-'uTXhE8s
%]hYD*D`&VK=jNX>qm4`Hk_:`(Wh.g+gPnh/L1):dcSBn1IqMd/l3QSVoEG6E6kTCI:!'DF"0V?1^%SX`e5!,DX`Z%>eiUROqZ!8N
%MM`S`j<snJqVA)m/t2GSRPOu+8H<kZWn&)eL##1s;8I4fs+pAE>3!9DH)pVbG./CI!0m_pCA&*R6FlZ2%JE\qK,h:7c1BL4Snq.:
%b`lP7W'=.C[?RY).7ka/_!`KDb_?l"T<r\'$2S'T@)P,rH[4,?^X\e]Cl8)<G,JZS2cuDE#5Nh:OZ0e":%g62/R!M)=)5,+,NRQ@
%i(uk`+.U0G>KuGFlOu1N$\*%:,\\J#Bsca\=8NO+%<_3sVTZaY:PUOOT\b?^a8S%Dhi+Jn`]*b(h._;HGFQ?N@t/%?X0%^l$;IR"
%99HEaW=8b>rV%-+2d`PnB-Z+HCVS6$Yra))>KoBJNE2P7fIEjWX/W-lV]D],j$okJl(meRX7(*-:\:K8<bV5FQc85*D0!8^g;Anh
%*S1iG't@%ZL:TcQ>9.g+Wi;b[hrkU#"f;p3o1nB^D%Z^%BRF;Vd-B\-J(5`U?g56Kg/Voh]@MYWT.YAM_Dnkaqtou]eYm[VXUb.>
%lh=Mc"YB+!O.'UJSaYunlFbY^fWZY:kU.<f3^(pR^Le%XZJPZGj*u"1S!?I<rmn'Uhs7IprVLuO"q##_$]A=GeGVjYI^01L[eObZ
%LEY&G[>p8Z!2Tt'F7ue0n+@\uXHu\Y;m/W[7G-I(od77l;eP"\?Hq?1en5p=T[_YAV%(C?Zc(D$qc098'u=5X\Qn4W@$5GI`V9@L
%eBkm-fPe4te\ls6(=::n&='GH2gQ"@WPW**Z^.%MFjB9.s/9(cK[^V3YV0-6F^9Q];tM<<X+H#maLnC>RN^]u"A+d7IM>1EU!9al
%Tn1;aqA]Ff6biRhAcG)@Gj6DopE693A*>0&(6;<];^&Wdin,?P!h(S9JsV0V_(@,T3ldKi\r^]<)94E#kNumD0EeQY%j:&tnr@))
%^Dll_X>0V,Ub_5bYqb)]P:?[oKIDqCK_@c7rspVMS[hCG7\GrWXC\Zb6PqQN<+#l[2t1JY'u3c4r(RR%&'BZ`GmsJ\R*,@"fk@)e
%3HY*Yop>,R%:+\Z\FOsD;u&qq):9j;^"7HRFED7l>"_I&FqL[Scg[_(2p_U'3A]LX55eXKF;N?`4@:>MhjeihX>IYnb4))D:pGjP
%2Q]J^drkYXGYg8%buu)82-R1*[;%6HZ)[Eq'aoDg@kh,FZUfa*89d,4X,4)X^A97?@X+Q%iBW5)ML+B\;2]QPip?;e*"i#p$4D@'
%-OWcF^B<G'SZbS1C46'tOM?8qMCs!$^i.%0MU#XX9`6?a%@YXngO/u^!;'F[<N9`Q7PG^$kfHLt.GGU'!-#>;F/"^0i."-*M1=X`
%3kO1eqTFlL?e76<Q&leQ'D@?b!N=iL"p/'WFL9o(<S"FT`U?uM',t45YtgM\Vf5h?1lbdr*Q?CI?nE[%kIF&3f":<=jmRgokCZJI
%Z-Y/+8uJ,0MtE`HImq^mPNHaJOc4nQZ1V%!7+ASCB5>iP[+73TSW_sRI#_Fe3_UWFQ=t'6o#8t8hcdCbZ[kO!<+`V_(-oik6U*\C
%FYHK,JDEJU27CMJV-:8M7gAgkF?eQ5GMB6k]3_=2BCo)7'YW5'k@p>NMdBVINfAST];bJl?7U/%kop_OrdQeLY=KQD;[c;t+&0\1
%[D%!e2^3X)eZF%"TK,f]J;+I_iS:ic<#^\JSQ*)tq;&j'Ru8UYPmTmB=&=+QDCh`:jM#68>sX8@oku[jH56*cX[A?faU%5b-)'"?
%a0,<jWEGH0Z?!up=>a*De_mGO5DR=kr#?n2gN*o`)+iD\.ME7M/'U:/h(p!TU15^741/t.o4KXt?MgdY[4df3HDB?ogNC#GAP:gs
%b48NBdX:or($oq@D.-'!m\!U_It+>3o>?4TnG@>u(&J8>n>(@ZSjK@W4$N_!K3J$*_Ing-gi0WW/3'(<IJ;G$W?W<!+sqVjUA3,"
%:1k%0Ml3mf`?HAi#TD9mmb0q"dGbb+lrBLXCh8JB<52]8eLOX+C[96S7We%HqV/W[\f*OG>lCU,H*t,M7lB2hVmWN4.t"C7fVgDq
%\u(85h<%Ns,AMLG\T.Ata80]<]?t#2Ef#*-i'q(%W038=A`4/o?B'9;QKfW`N`idEla/i,AsBL$EO@=A?9O!uE2DkE;XVMpgC/cM
%]EpZ-d:bC]C&eSKD1cSAef#"s*!`2><8;;<2n??n="H44Xj5=t?enm=&n(bZ^%`5EI&LjkMe\W6(fHPb(eKoZ-)<#O0>V]UlZ,ZW
%$kmW'Hb,>>\bR_TTa/gYf6'bHQo;b6[f5RF>[g60HuL'jK8q/nP:`df7[(11MFBNnJYW/@Ja$PDRemcQj&.Oq#"QkTJ4%n"QV?_k
%>,Mh0c#,q-f1*H5XuI!Br^']A)`m[.j.g+J4/LG(CBD:X<gr^L4/+,cTr.4"1DZgBDSV'34)_NTHAQoS=M8OXH:ZKH3ss\.N't2#
%A\D:q=#4)C[>9"W;#N93\GP)o[J!\$hW_<plDBHj.Z7IpCB\Ge$X;FsT@I7Pc0@QE`^_9SdY=XnJNpZB&Km/u,8UQ<?DX>WQr=lX
%'/j_;\F)Rs(m"UHTu_XuX$&&\^1Ir$#S9b12!_[8U8qYOX1`^MN^5IJD0;kdWfMgu.NGmCcL9=!N]I="Q<8RkA-[McfkA.OED*Y%
%9<$J.E>LXmj)r<c)55L=[pM=qbeM4\5k2MNiZh:Y<YI41[Oe9-?a)DFk:F,4T.dT%iGI7"Aq*58oP;/+'trfDbH4i1_5rTAA"r?C
%RqD_Fca!.@$H\cGXLsb+!oXi\Wc_^LlrEZO!q(%A/qcrF+e1SG"Adhub0umbnoTn,k;J[*gS,I_6U4fthC#93pMK)lHfVorU4FVf
%[Z8]1J/6Xp!Z1)W-G2n2BRi,/"[J#GM?u&l@gGG0VOB*+@n>.>QluH`NMXXPTE-sP$b!d[n@S@VD^2NpK>^jc`'!^#kXqT^;6B^m
%Dnhs!I^m\5]3_CiQIDtP'KZn,OaPIeNJpqlFuNftJUWp(g2ICFWYGMin$QK;UETk<NX9]\LI9.9@<FH_P>_qSR;KFbaB(s"Gg[A_
%+s6sSBEM!M)lHQFq?d.ec1pmF=6"L#Cb0`C^[5sK41&>8"J?Bu!0bG7)58=-]AgT8RoD<KX1e-!ZOg*:%W6Ld#3,+2ea0]td5*%J
%45BTSo-BT.0Pe]oO73XAVJ>DXmo6QE\<Tha?9gGD#FY5pp$)`eE33fpOj7.CYT;/_]:N[4EAag5NM%NH>.=L^j=ba,N$u>hIoKC>
%\7Y&.^#A*fr96oLV;D*V(oA.GbdfIb[5U-l327'cOS"(MTEff8YQ[<ml]ues=*B=KP&L"g2;d]K_>g'YBi*&]kSengFoIFno`<Us
%e-lqH(jOuJHoNn09$FFh$A$a=+RNCH799=B@\qo4G2r8a&;!>#]f*KrBT4M7OK??h&cu*j[]E>?`rH@H(q+tggZM)@ec_1L-t.jF
%?/WT[iA.Q3-olKRi\X!"TNCU8k:83b^;LTJU0@W-1)HYTT0-:boEnqeX`dYa@%ce@3Ja]eiS=,N`s%[H9;U)HgJWA9Ldjkk6B9b_
%IU,g9q7B0*XH$da>Vh46S%B?//+YRe4'B=e]mR4"5nQ\bG3;r-)+kC4?MF?93i0.>DKX?Is/^oo`MgpP*SA<7:%.56[C6KUQO]qt
%Hp<dQ\e-n)("'_EN9IAe6@T_SiU2a8h0er;!dABfd"5H/*p>2FBRVj%I/@tbe,=0:^Y3t2:/r)-`^SE=*OkPG)p/#X^3Q^_<2<SB
%B/fA8>Iu)aRRC+D=((g%?ra0c"knKqXnHNI`PFFC@G?iY<56<SoFU#@g.*hE8-%tq\4U_J?f0,[0Us;OW-5tnRu$qD2l\^(QM5pE
%'TB(]8f=h)4K"ITaIhQm=1+CEAdc_Xe^T$0m-<g0IQ$ks'Hupn,$pAo)#]gu<!`[c>;[9P,A'\qrVS`Ni9"d_HLHst2doV_:.j#1
%i=JCdcuV^*?fL>6rjuAb[U(oN:ObBQS[IN)F^BEig8=T(qHpYMENSi5B%;"Ueqkkl]2P[1Mi353Lp9+m]M;Xq5rSp$2p_p/'6m\@
%a!*R;^'>n-@Z8<B@;uDU-l]bbMFSaW25+[HhBS/9mLD@VZM2qbG3W)1T7D5^9CCaq>A'3cCBmCLYI>IYFdEF^WnMcoEE31tM+(_d
%IIo3ujG#0u!8pAA#lnT(j4GFWpqR\sIV8UqF*H54M`!KG\EE49qQ+=204,&Q+a]<oY.jX@pe=YP:)7C+_hn%*ridfST(b.#^Wc)+
%SVbhW9(A6eZXS?JZHK0"H[8`L=\e,e1T+oRFEZbU.6W$&CSp:Plfd*pYC&D.]l9:/5I`>CF2EJR'UEYmG^MB^3I@KBV="AQ?1C9b
%4aLFs2[nBdDRIgFV;--kV-h>2ec%&b4Ol@;0V-M3o#plWqf$Ijhs@K_4%iZN;X7Aoh!3\P$H:cJc$=#KIJHm5>M#?d(jWF%`<"?,
%qDoWC4b*:;S'Dm3,Fs8-T>A)I.,.A?5?68+D#L,kT'^CE@<&XOifs7;TqIpH>!nLMe($QV2:+$R[7tjUq*lO#h.UpAa`"Ot\VoTI
%6mGrdkjBoScd$t#:<C[jj#alYSY!:KRP/cBD)@4DIImAg9"#[*Fo%uVpUf(kmQA]/%q)Dt#pO>``n=R->[!L^bsVub,Au"d$a"*'
%MM?*[XIdKTSY/iP3tG]3Mh"Y`?aS9S:@]>=:nVT/M*]>@;9Z$4&-#Ln`i$F)PHD:NW1ED?r++r$o(3ua9)"&Z===KV9*(f&'9gGq
%0@PDMjlTktSSt%nNJ`JTNgJH-;b-M5;nqE$gCp]0i2AGYA`Y$?_AAd?=(r17Ka9+\ON4Qc.CD*e=t2,Meh0Y!cr#j:AmG55SEno=
%4=WC&03e.KpinE7+$'q!0,XFr]q[2BW>F*oK(#Y!\b!_S;>%f0ZPbkT)TFWgg0/T!]*m;ps/=!7UN6<>T(a2340rrPqMgAe5m+1V
%ZSNQ.D852Lf%pZY;`OCiFhI@D:S*#-7t.3?V2'g=*YhUepN!ZuWK62XB$dIk@=/"LdXTb`@=>#=d;N9b17HeY:!Bfhjkf&RY/@Sl
%W%?hi;7GsX8rcbeQ\;Z9'4KBNc_rq5(-]$;(c8JRFt^=PG?Y@j<L_?"Whmb/;2`<-gk4i0'o!k6msZjirU(YsqMom13$SZg\mIO_
%Kn*%hEl-MYlo5F6]A3@Ug>UlTCrU\KbF.Ksi2C;W-^5>"UZ,_G^tZ`fIXB1de?V2Z;-I1-p)g]U2]asDjjWpJO734bb<6K@<qhOO
%UE6LQ4[#B!4SXs5E:gF$)O1^u#QB.H<_EIghAa=![up8(p$d2&o>ib!hbg"hF$QE$QeRohbGGA2]t"]_lCWF;UDeounatO&D@;H8
%n:aAdCX&_QhbX(^*VDjmFWI(,gN$j8O"/DUA9OJY/ITmG$gTM3]]\F&qYc,&R25OgcI'GN*B.9j[\fDUW4g`_CTV;mq9P4$2f?Q>
%-W-E&F>$\C0PVYi$EN,7e8C9uGI-HN27p@SY)uR_`Vl<:<:t[RXW0Ob;<>oRc$ecRPP??#]JO&)_7eXLHEG05GVAH]`p3#H%6Edk
%8_sX0nQ,&QSD8=rb*1t"3RjUXl,VA,?,?4,k!]-[%/Tf14P@4$=*>/u6<p#jBTDdp3kIC@^](D#Y-49;5-^N"57I;<k54p24.^m9
%o]+b]qnTCi1jAd9r:Rbo3+IG\"&57eQ_n\.".PX`buH4flc[\Z7DH#/B\LDPq!6*u5]^FJH=uK:9>:Coq(c6H?Y&J\^Zeg>I)5dS
%Aac^7!R7OZAMMC':S4gl;_NiHnCRQs_Qs-j$af)r7t!.sq=!0[HRJ=Ka/-._iqJ]=mIR*[nefjr/bijR%K*db.4a#$?XK9UBB9\t
%9rFn5n)jbeDQP"ne,mDQ8ZUl\#gh/OdcBa]5]_'<fNOkVX'Wju]"Ve&:V*V!lXkUfF$+ZlT=="7r@6aC4#a^m=Co7NX1)k7r)Y/V
%EPgaJDJg,/2D]QH[f",QDl"g=7!OoAP9:obVK7+H%2+_OT>Q^PPa0\g`R@QVEJ;K*3Jgm].PMKE6O0]_DD39g)4+s$O)sr6&?#:2
%@q@u]_nPk:KHVVREMogU?o2MXUj;ou.5[3Cd$VS6X8s[Up#VNC7-DS!5T\'.82ibJG"I!A#oH[3R(-fgmMrli4YY[,[t1<K/*XM[
%33#gOFa3%-.Q]S.KtdC8(IkOtUFKo?go/6O`Yg^MFaAAN*jn*"?9@7o!SIY;Q*8<U4#ZAI__LHC:#MrU_TS,"W/O`sU4p![f`bmt
%/KP!`]m0lilZfD03-bPfEj99i3%B_"n,B(7V=T/2&nqdc>b26)1?ML:7g17$gp+%?PDtWQ@jlkpYg(qfB6[ESn+$:])-Kb)pj1`,
%5&q4(J?%lr`BHmT2UJJmf<^tKb<EbgR89_q#i,]]mgc3N#V]n,N'c8N$h]@1H2GWS4&\;?.KQX-6?$4EcRuUcD%h#q@dZqh`fjLZ
%\*o31JlT6eB\="*\LFUr:!k'S#;%t<B!0emp2n[@QJ83m6aMLRi'u\=<h-IES@Sh6WZjO1l5*lrD19=IH`Lu2(WYacBb:$Qk88`*
%7,ZM[SIeA=RKK;mqSJgb22-M[AmRpNl,2<LRhH]p:@%.k#%@#;]JQrEm+U_FQZ<`A?@)D'fXCnM%s@Y5kH;1j#0OVMckW?dX:YDf
%gqtoZEML!__HPo'i!P#_^'NL]/?m1L7bGVE$W//-7D$DfLUT3^DW>piWjarI^R2?QJYDULqu/)coK[6P66C2@[f`3E(DT4)Ou@4&
%]`I*RUdDCG'k4fURaL/]F+<:;G@^#g\&6)pok+Tt%LerKKI?hJO'<BQ"/[lh2,AZtn6$*-0Cmu\SB$g@ir6t3/,su5GN1lYerKC/
%3-k2fr#d!1G]1%bVd\_c!L"sEj/f;)S=cZ,i5,4@1<a<FkTteeGg/t"3fG\#o/o*o-?rf)fW+bU=IG]4M8I.1^u/WLCkP(+']*'I
%AVNJd6=]DF5F=l@=16C$?>n*k39OiT.ODjY8!K,6*l,qnoloV;:5JKXi]R.KA#l<3$4hG*17?hL&):0nV=4S(WNH-m,"SO5_mi5]
%hqQP82(`]`BJmJ?hheIO^NBF?#mcM?X9l;k7DZm4KksE5].MS#^e531RfGe9O4k[F2ipT:A0pWte$7#Na1:MihGio;%bflYJB<h0
%\TQ_-Z'hWW[ZbI<Y:2RB_I36n%[g@9FY@,t8#LGi!HW9p3QSRZGs,s?@dTjLl';T;gd\eAi7PqZ329";&>Z]ngUM\03=JCHQSe>X
%ef5ER3GoX*dt[)R-="XV'5.sd?_9T1lAQ-b4EVSGBPiN?KAQ,h\%NM84`XeCrG^%DrCDjE5r<H=qE5j#nF8`7^")Z#*RB`2YK7X@
%1mJ>AZ^bIV#=,?LIQ9$2r2'QK,9&T%dmF1MV/+o:_%bU82#Nc]SS7R*0bZYXRS8)X0R+ofoRQ@(*3_E5cMhEB=cT%d!oO\4ZN9ga
%gCEG[mp,Y)8S`eG,I*9_lL@fb9Bi/IP3;JqkdOh_r2jpLML,Kc]\if4@M.Y!5<(D"Vh@(G3&bpqZQjlhc,"IiLsugN-3XpnW<eat
%O(mRK@(.4Ui*N*U07Xfudm)dhU$gh[r9kR@ncj+1^N[MqGSO_BYaVM-/G@#aL[K>5c%fABB0mb&"n2$'i8lu`r`Y=anFAU+JJ^Za
%g&Wki@@&@dO+Qu-n$rt@Y8HHL70P,=&FthlX*!"#'tKjR_`=LE1<8RLPIV3)VDr\.6&V3MAo[GefE4X#K1Mt%9G+Q[mX708C>!`V
%7d<>0U_,A08HUT%8*E+^76?$_k]78NbVq/ipg%ZtY_gd<\qgD#qZF?'!0@ru5TEX?W$ImLp=_Iu:ZFHPKFDkmO3qe;^<L6pSspST
%><&#XT8n=Q>.W"PX&33:ctB*#,2uq)k@WV"2%I"'ftbSChSc0cq]9ag%s6tG]"RRH$O9j5g3Eo-CBm3u_<T"(g-7$*\m87e4LnJi
%"0oBB3nDOlNmR=K>d/Fsn/`aW/lXap(((:0J=C45q)GBp9.9F>q":'0PW@Ch7p'o`gShKdd$=>2p._7>nAI##\FA&1'$iHhn/@7D
%pp_,Ed^37K#40Fo./NU'RG3g`L9PaO]msF^n%19X2lDoqR,s-8kC>OHq2CLNh8J0WJL?8A=(CO;2R/Tbs4<=Hlj:?sq*$BaJ^F=#
%S&7:V!.Y7jbsSI7pLDcAh7=\2:5g*K^">`W=o4*1RqO_KqI1<,k#U?6hF9uj/o9f2"9Sf7mC:XtS-kq6)Zb(+.,\($%GFZ=FgJ&4
%F@RR[io5tb/5#LQ)9WRjn3'(_9lnG0`$W`sPrK/I5OUr;aI'.UP))5(FXV="EX2@&!g@p]H3>3,B%?jjfhHSJO2B"LCl/Uf[WR(f
%*h)8)'>#+mZ/Wb;/?^]3Pdk"G".SKER2U`@5VEVMhk>_iYG4pt$<Jm3%PYC;YN.jfF;?X@iPskRIbigaR,6$<5:u5N6n?Kmmmg?C
%$U6pN.#`43<lRp`I1H)e$EpX&_u5e%S<m_>VT$(fYMooIKL,nfb5GEAgqSX<Tq,]2%,FeUjV[Sm_]?_Wr^3kHgsOL(5P3rZ3SJe1
%rpIi(YH[W^\K%TC/+e:<nlhTXX<0r"]JkE9j$G)iQ^@*niP0j$#5?URfbPWt!W2tJQEL/r\P&*GJ'P7p@Y3k$"J55N=Q_f0Lbk^C
%3pb5q.,)qYhf00KK+$U\&4eG^n^&J7Jf%96-<g0d1?UNKh;C3_3R:F-R1Gm2?XfP4EF&MQnPYA,)X!VmYQY%8KmfIIm+='[f3[Ym
%gADW)p&eTo@H>PLrUL55Gr)YEdmF?X(7Z??'LrWU>m3mL2kchW%^_$L-cp46n'fCES7)5G>>Yp"^4M,7"`W[3pFVqOSii,_?ZPK'
%,6[OR`=;":[a[7%%q!b[#j2SVj[6qE-CiC<W[!gjP0W%(q8-Y;?o9/8k9FUl.$fo#*^b_SKu`bDdEok+_te[M[:8sOr'D2)$0M\W
%jVq^5N!pZN(EUaYAk1eh(X<g<bD0fc.)Pf8eB7$+*FSX.5Fg&H\+/>$7%"Z%N-%0\MNY;kW@g.C#nI^;7,sY8aIL,;ZO#e`9Ok06
%X\q+-UFK@hjY9:Ah7R_QW.GlH]:s`P>M]kmK$'pOo(piL38'Z7'&kh4^fqmF[cNiLGXNIT'LG@Kn(Ql:Yfb;8b9Po_7#&Zc?Rt4)
%2r:c#VkP[InBl;,\.'s@!1qIb;UH4;Xha]pejjiO*l53s]\RUTEqc[`,Qdjj0<U4)\:7)CY1]QmNhL@IlJK?ebU7`0-9!Z$fU\YP
%j^;M@rV2]^MGXq.2hYed$C!&o8HaIW-J6(dP>[nV*?_:s"U9k'P^1t8[tJDAC\2n7^7rt;-AAUeqA51j\+E,_p!^:4OF>*]<lP[*
%0p(@O2M(ur3WK;d&Ar`$72o/^>*nm(LXC9Z<)E1E&V]8(OTto>fWhB"1flA7+>:_<?c7sRr/S@^qM?YK$'2ihE9Of`A)tYI4RZdm
%Rc0X_qaAf$f(_e>=A`'1T(i2n,uh@E>#-5(1%lZ3Coq>(f@`Z4;'O'sH%S(_Dc%Z=@2!^M=/!)O3@+SZD4U#AJ/039g+UgI?>G>u
%RO`buj8(+coV:+H%,Zobk#tUoTIl1Lm!\@$n@6.dlbSO95!Ht2-LiWMMX]ZZmu[.Tl8p5S#N']pl<rN$Gq=4pY`C2!iT\-PCu0?P
%T5ro"]8r%::W,lt/j0M\-)*XS!5Whu[1P\Iob6ltA^=b?7"st'fl[-;!jncE'CX9dKS0mfi!5HASNqfeW.%.^i)h3?kX,qC+p9AX
%:sVFX`iKuArM&Vh]tc_D00X4hY@^18s7`\^m/-?fnN[gf(Z]&B^&H@i_,_B^*nYM.jTufG>!@"j@a'[Q<"9:ilUuR<*pfe`#ZT3V
%\7*j,C2`ZLmEOg#T_9]<dfQm8HNS#$>f9+eT,`ja7\3l+:WLn(`6dB-NPmg`ooU+Xr8RG?B8D7)IQUlBp4g)n7E*.RXhDQJDt?U>
%"`-N"K>p"cq-d#T&2<<1HSHO@X@q7^)S:=P':b$RIT0us(aD2`5F<Ut?=YF<`/+-$TDHUi!#&;26'k?J?rfr!'6ZsB`@YVT?6&*\
%Gq(KJU-]]$YV+()&e#Egi]$M9BC1-6cI7Q0DU;F\_]8g=\L7MqL'_I7Lf+&CRa]>;5IW<(0kZTU&K6P%9c!n$k'?$W(nTdj7-4YW
%UIH/iLPHa*4uPGW05c`hOHFg3N/&W;DrB95JB0i;hneN:qY&2,ZK`^*DT%Z_0hCIU,4fVoE:>iL(m0)RZ/84m.Pf=gDgp=#7NImU
%k'W,ZKeEmP(SUqQ,7+4&q_#$oM)0PbWB$Z]@9kOsMr:lUbOmV?n4`NX\<##fN&B8[qHOFE.ZZZ[+-rb[F?)n%ic"\[BJ]a$i#WIY
%?2+$+.d#2&c7`:Neusuh0P#7-_asU1Ls:a$*\RWWlnR\`=ci_b"'U'MP`X8HW*H$7gA!?3af5HYis:lHXSV'MSiWaBMoCKsYW0Z/
%ob)Y2*8]N!*Q<$pO*[@01]4rH^7<GRmi=2Q=$OAY(#$"c?Bl=[^cB>NLU"?B:G'p1`eInM:$_]8jNo%&b4q0=AEs4]ZBaqr?c@W;
%#:`uc\Je>,m/>NaJn1RAOT`cmgtG;NA>,dWK4LYl:QTD>6eB^oA60g$gu/<c8S=h,POgp!I*Ubp\/MFZfA9qfnpIXKd0Jb:n'+CU
%o#C#Tn)F]KK*LE@!,^4OH#[EA+bT@*reN_>@=n'_:)3p9jb7c7S='YWYC_`irOmZpl12CS(fpJDnai$8>S\FJE#EB^J_jkL1D]%q
%kg6=sDaUK\H([1S:CaX!79_*X/7"b^i[1&K1Z5ihl%[lAinkJ=nA*Ma%t)8BNk6gF/p\mjo]?6<;s6F'%&,7Bn(WiFb#<;SqRola
%-eBD4k:=SWCPCWhB'F\C^VP3RMmlo][IkR-HuF'Ns15bO;:pZ2$YO="3DD@nRTledEX%5O"McUcmt-bV)(,g4/g[;Llu)@dk^_8h
%F/,c(F&P`r<`%H)F]bkTGJ$m,n-?oIG'CY4*:*oua=BQO5)0C?D<FT1<-Nr'Kl#?ZeK&f<ft"5<O*hr$(s,^D#n+?Yo7<ZKQPMf<
%K)N'5M(e8n4uh3`jt81bmP?EHYB><^2sM7';cp39=+c,'C12[Q-eH20DB7SNo?s'HaHK>DnL8/$'+[F'F%aQo^JT)[n3[6VWf+-n
%<:7rgp$aXlr:64SV3bn!oANU##qgWbg_XeZCN+(%CN%EZ#MGup3WF?8(%);nis=WIo#,jXSl;kHk4JKWT2t;=3FAqMp?:d']q-<U
%9Q/6SVUtFO+fS0sidLX4TF1>0m*j:X(aIdmKCoZ!Kf<CO4hn-RJiYo]6'3<Gd0f#P]SlEQ<^_+bYW;6d5d=[oc&arr'[FUdS*aBI
%1+(bZee*9aR_V,%.=+Z"_[#o27J/ZDooTCNq<>p:0/18Y5/4$[cKI-c^qLAlk9pH0!_MQg"8dgOGK13[o92oH&:2F54pU+5U\\4p
%?ke0?ISkO-`+HNp5!S;cE`!f^@%Ue*T5DOf=^W?5(`cJ%Q>>sQ!rMniqDb%jVulkoG*o5?7iL"r?sXjr@%Z>HQtg;fJUMuoaLbW8
%.'V#NW\8sT)C2Q5YH+omqWodpYV3/aGf[ZaG?9=i,6M+/Ze-qX@KcDt!OQ8:qu!2bW!RC,JUMuEI:N6_"G[<MoBX1>@V+3-4q994
%YpD)5AamK!5JDI1&,1us6O3>\7J44HGt&CukI4*m`FEG0IJe\"<*r>P1Ct`bj*sB(q1AnFq(6=)rITN+JUPg(Kuf'[+[ND/):?KJ
%qg19iRo<0ne8A5(cZg%1!47OL=4FM<[id/Y?NA8(l7@DSF%&K/nV\>Kf?;ILHu9/m<O!@cD>63p'U%=u)&gokS1KL>:'/2?nYY/J
%]cIFYfV",_$J`t7KhO#L4eobPiH#[82"dW9:6B6jh!;P9m.-t*G4PcAhkiAJZ[S);Ki%!HOhH8D\`X"I^g<(qaoC@93JL0*B:kZt
%r-tt=V1Om1p#uuMB_&nmf/!X1q>^<?e+k9ho2DO)o5<eCq4DeVL?AMWS"HF=s2BHAY.[',.SjBa&>re-c+n4Wq_<\lC`fS]NkE%i
%N;Gh,BXGM8fqDpP!o4gmna=COI=oKrNOcnuVhU5Sh=ksun_B_@?j"]6;((#TU_`$1#lohtKG-#7M.#&UN'"$GSq7FGlA]@/g-5N.
%a>X2*W^Sn?pZ$"BHAgn^*7*.BobPT)4PZhT;o-ia@eQ:Ce&F4g7mdOXia1gh(d^8nFqj;:eR&g.;<6[U@lYf))XVn6p;=\T-Rp1f
%o7kVW&)V#h,5M[l61^('fN\_@!ke]^@mZ@q2LX3b:=1p\kEYrg/o^=#$ToS7,7'6J5O7\1p-\0p$Ii9?4<UDkjGrHYE=@J@<+\LU
%\K;bC&2S20`E7A^-0T$p"N/U0fI3=G+?B/43.0!t5.W!%H0cnWT3Lg##:1XQU@/YN/40I$H+Y-AH$&0HF")qB$WN%VpQ#asHlbe@
%pQ&K?JlD^BEuou*rq41/&!?V4-$sr:rsa(/4F-tHL.EH>LVt4OW`uJ&656#>jS^#B.?K-g7$$QV*Ol]CpFjsc-YBaS<Oh?oCmoPI
%2%9*:`\c3"W1n_/^H?3@##%Q(4260!FqEXR%n7*eO*\p/^nV9]'Hq!ig;1jjL6A_kdcp;U)*%JaA.]7CK^:r"IN^N93KFOcGJpk\
%mpN6gGhlFDQ+u%u)4C18aC`F%Up<t"BViQ0deY_$6!%sKNu)JLhf+A-iZ-8U?)J?Lbo"da`KNHgj2OuN"]@L+!cMC#9Rh&kfDPqP
%NT$i)@&D?7ksl_seL/E$n/ulYapmg^a.S91iJfJXp*S/GA+OF)j)/f3IoS"$Wt)h&+rR8C5]B,2\"!1[TE3+D=,;mKosf/JU4m5T
%??[GQXUuhrV!9/VM6`.Cis,h/'12'AcLQ8N6epHFls1>RC3sU4ea1ubEpG`dU#3;>8Y"c4IAn^@XGdt;7>04-%\U'k*$KlgX/Glo
%Nl\m$`9#5uYM!rnVH_]c]5^:%NH)4#_'+B#n)jj/E)`MVbQUEYC(lg-l0O$i`-'(Zh$8^"NgJI?n>P(T[hl2Ea[O!Ce*Xm1hh"bT
%c%a0X*NR#=H/0?d]#/l=bH@M]g!&_e,9THn2DbkM`>sY'S7*ulmk5[dN2fTG.>Pn*TZFdDOAWJ72<VMikPmW3\.';*fPuRj\jno+
%NCnUZ/2Z4u$m'P,l_<Iqg.D'#DuE-m6GM]L$a+diB\oc[V@]LqiH]<L4[qR7g-VjLARCs@iAZYK&&PXHpfs\c+n?BJYZXX)9a"O?
%enIl/`q@UsMilS-3BY$uUJ1375GAcVYtrEBi&PZN3mN_)&'`%PYNkiM^E12DGkAfA*4L;_[G\'GlYm^BWj;s9\$>_eEA8HB@Y_um
%3.o5e.b5>Q22h#JNX>cFklYN(*[0#'\:O<;-ThgU!;>FW(,dOijmjPWVA8(m7]5:5@)GFE[dI5ZS>9q9B\bKYEDbo21$jo4nSNia
%g1G6_g&c25&M>tj13*r2)1bufEQ]+!#1odGp#o\;5&G'Lp@$$RXH@[hc@J;QgG*$d--"pMfF07[p`af7VW]#?'ub$h*M]&$7e4oK
%Bp=d&V:<6i3RC4qZ%!qp='l;e9$,+Cd-l<Q:A'P9j`qa'_s"TF_un'5TljXr51:;GP(b,50oDUph-jXqR-Jj*oR5M..Po>'0#i0o
%+ZRb"m((_-XL_nF_*J,WJeB(R<<Uj5aUuLX3_bgV9Jg]n@WVZ*da]2$Aga[hn2/LS'-"91A>(r#-Kma^l*YjJeQZ!0;-uSHY^lER
%Zj7%Q?csuNpVB,d6nnp=]R;(EjR8Q=65&=u,<Cluh][j58bg=N3a)-i6P;bffJ3'GYsK)``ZnYR@GcM*Q"\P%eLG`5@bc2rG&@Ab
%)ZP/XhaE+2[qGW#`45>nE?se1OMn[!Lf#M3n;tRG1*,hpgrTo&-_r!JiST`u0H-W0K#cjs.iaIn0Olr]$7W75rAQ)SF?.8<]93m5
%8CF8.<nNbmDX_1jA+%t,r]S@1S_)T1/Qnc3!u2VO=pSJpV\A)jX8W_QpA(`=TEu-SC?<]`ki\?h:r:+h(J0NO&"E&BFE*]\pd"5+
%kZ+Zc#nNe<[2MWR_shJt@su:B%M=HSG#TMBiLq>PDeD/mD$33P4QO<@PO3=*OFXY9I3O;#:jj]R%*s)V2KXCDRdb8e?"_rGLZ&8a
%A=*rS4:D`6M!5<eSa\=V]]X5?%ir^-'=$SYciYOU["AY_DSAq2Xe19%iOe>)h[G\;0Z]H8A35`[,D_WS0`:d*m<0M8n?@s9KgSAk
%#A-%;o8-Zj.,eTZ00UF_K-`YPlc#a^iC:"7&g#%8SYJ`#(`j\bQ1r0D4:Ls^i/%p82K6N#%l><[%`A$q1\F-^4:KPZk`XNnFRd)$
%bL_eDKu]0"hNZif,7D'OcZ[r*'aR?T(sX%E`2Gs8*r>La+,L't-Thh+,rCj^T7i!YfabnNL&H^1eAAL3&t1_1KSSO>%[h]#FMbqE
%_rF3%s351<N(qcq&fqP)WlIhY(b8D@n-KWCZQ7%%E?c);p6hgtd"I2"?JNjA"pDs<TCC3'q:=FJ5d:qCL5Xl4Qr,+k%*s)6-/uoT
%eIToJ36!7j*\-,WJ'UguSFFl?*9f58N=?__lUc=\BIn%n#nKCL&]\gEp?5rl%g2I^e5:u]^^Qe'0\.cE_^@PT=+`Mibn(0lrPI3'
%@Ee1D)^sZR\9(LeQ%r.[(bXWkNp!&A&,h"ofAX#rKSOPYcQNrC`cFus3oQcf@ru6C["fMSiM!Zi^=`uV#FOH_*ejpag/cuP'-;m4
%I!D:nQ13-\0t0>fE6cIgn1`WQ0c';T;=&skiRn^]aBM$L-Tkp\ndj0F(A@`7Ft*4A't8a<"n@.)\qor5lcSq5kB0=#(2O@irr-Ea
%*0NL*PV0$]@'N^</'Ddi!)lpYNg4TiCX;gB%3)![<7@q>5'.(3j_gt@Fl1[3Rb:>Hmg^_!_Y&[ZW^'NbHLbHT2_S^1l,)al>EM#9
%Hf3VidWdHA0'4q"ce4_GY74q'm;RL5l[(ulhcHg5qX&QFdTHG(RQ`_-3`WpYDXMU(YIkbYV<e&.^6;U@gWK--l,UbXp$=rUH9\SR
%WaD*\g98W!oi\-dHi3dUo["ZfNMYrAD)Kf?HIBR*3bqIW0R\)R3\r3t[^E)AGItJnhsV5&9'a4"JG0k8R]]ncT3\>cfuLM-o_*Eq
%?'8jOK[Rm>L/@a>\gM<0e#/b^Z^L'"N@QtIh2+YhV5q>c*F!N?kLnr`mOBlVc#FMLpUef:hR=U0T/kkK5^()X0&Dndbk9SO2NZ.h
%[_4V]DY*a.S=3Yh/+<;M$UY%K\2W7.aHPl8[D$9'1UZ8"bM2WRa_%FNHS[6&Dr24fC:Xc2Xa;U(2>o\q<Xuqhm\#C],h)(UoCFD>
%Z;sD*a"8Ythf^"b[(,-j>91oZd,ao]&qD/=k6Hq\D//[SG[%1Rj8>X@&)4#6g>QXdI'(b"g06(LX,A9Fio>:LC/'.FODD"82_M<&
%d4jlJ>5ADFFSWoP,q2;>@eN0EfZK]([Dd0tK@dO1fd_3tpTL`kZ<N[I47F1mn8TZ`Tu?Ojp0U[83`ra%$G?j-2a$aa8\1SWB@q-3
%#4%ck=S*s:;kLtdaGBQV[aC_joCu+'Xke-HT::,WXAgTb8I#IbG=T^ikGQ$eR@W/>EIR'K#n=eL\j+Af1OBl&6^IaKcG!I(Er:\_
%]k2[@n/pARDu;:5pMG9;$R-N"kP2?@bR:J!37!)!;l\E(4APi'mS'biE'm<V41UMJG_&3odA>EL\?gK2UH_QLc<oG6!8iuc;WW%!
%?_EVld7$=+%Il<b/4,U'6r&/fYH,88\J*]]lcB;Njoba&QR2^p=bqCD2q=]\Ro;R139OZoc*"3$_D$mU5!Rk:jPT+NO'dC%Mu1-N
%1E.ntK>Ju(rP4?$lmQ[@ZTG"[rk%ggO30D[bEMM&e`DP>4.`Nj5MR/qlY#+=or[!6YlO)&D)@P"^)trbl]m&M'Q+t'L1KHS\+J[[
%:@Nr;m4*n--l#N9iE!T@YQJiu3e)F*FELY/jbVG;Ho\Rl2qe%%+WYANIVS)m>M@u`CC0_2(9:DKo39'-NPdbq_6#LM\s<(%`K/-C
%f8hR`."(qnfkPD=p/,7AdL`4og!nTc3W"UE>.C*`2*9,%C7QYDZ@>\^+]\!5W"40#<-`f`#iPQ0Ib\1>i&B'[%C7$ZeUodaMA;a$
%SWo^!D`3MVA%#@j3k.$1/_g/%L"a_%#$@=\-^U-j92Dm<\#pZub`OW7>j@O_fK]jPG)NXXN:M"u7V>_n=dX(ub1>+_f-MW3F2b5[
%.SG_V[TCk3K>$8gjVZKjkhGZCadbJqDEdD]m&YS/I[8fn/'q#FqkWilc'TL@b4sgE5&RIEjVQj!*l&3R]'mL;MujDXmnnqu_5%a"
%?K2T2#O+?LE9A>PIF6kPf5`hV*dllXT/M0jM0&&d?QtI$YD\)r)q1;qiEqX]pML[q%mY%@5'/\U81^8#""!+\RlQi[k0kB_0-;-m
%nRfm7AJ*)KQTL\_+6uoPX0stN;;>KFKag)Y$lf>1+VO8f_J5_aIQJa,'pCFA;cQLdnS0c.S6RQYpQetalKCch.EoquMf7p_o*YlI
%!.7pNR/84K/O3A]a6a2$r$'HSq_3C\/NnH*CSnGAq).rPOe.n3LZHe7V8J#Zr8lsV3`h\/9kR8AVr?rE3k$`F^lN5Vrnr)M4ko5F
%VruOTjM?f@O%YBmQmTDag@92!mUuC;_:F&!b@3(Yfj!424E#YL289LECR6iT2s]Xb^GEjb4)GL*_9D].dV:4LYn189d=qCQ_Y[;J
%hC5&7*d+eqRdQgLYJ8Xl4.Vkhe,7M0qU+%qH2YCS^hX7q?ROZ.I,_a%LRFl5SSAp%S`ST4b[X2_f;$m4L-@'cRVknPaIC-b1^mRd
%lVmSI*=Hb.:mYgP>>PGj!c.B9H&@0e7rcn/,FGh(2jf%#h-tHck]lKg<)hE2IYYWr",@q-mrCBXk=Ok&e(i[:rVKMJJ,7sRr3b=-
%E</6ClLK6K?*q:Es#EbW\TjRtEf$r`FDgP[1$PL;I$C5.2CC%o(p]i0/<ir^(:IuNNK6cqA8CA<0!9W)(Y4MVT666k9>uXq5nBei
%XJ6a%Zj4Wm-Eld;J+gY5IK0V+mLSH\$R\@3=o"Xaa'C_,>5Zo@0&7W*M"3b/l3CQT4u\BMe$^Gc-rdp$mMX!?WH0j/9Bl8UFr=t.
%)2.C*oH=He)A(B(o_e%oU:bOdoBDd-HVDc:)i3!%:[Xpe!;0E%>*BH9+W_]?R7G.'IdH*ii##4qiu7m%[W]3r]N]^ISYrrg[A3KK
%a*qu:1D2b3FL$]5me@.oF9=H]['dn4dC.94FZg=>rTnXaWe#qK/0#81bK45K@i+m`@9.eI.Na;]'+9/Z2gbSV3kGYeIDNGgR),u6
%^(uZ!k<RtnCVc[MnZLOMh)8l"=Z'SjoYU,1F.]Yp0o]](#3+XP6e98OeJOpPbYNeu\WI[R,i.8rY0XS2[Ir.8_btJ3X7!+9[h`S5
%\#%s!qMt8s\G#7$]suU<GWAY@09;<!'O3/1HBT;oLXI'E*9Mpc@LImJhet%:)gS9$.F"s>D7an+m!5l<Ici5BPr)0dHq"1L2UU@'
%eo0HtcS)I_M`%j4J_$HJVnhr.S^[.1V)"7l\uh"-A*A"20\(L%"L^T_'!Jh2=EWDm-\58fm)@R>liYsnc,]^+4@](,5/\4T<.*SB
%"(+X=I"(;e&blTND/o%)[#\&r;oQ!V%]5+E-On$m`aGg6k4[\[[t.T9_cOg4H!Gk%F#sL`3I1mEW,%[R2^;][_Dqt#IMapem2?n1
%gV2q>O9.MBaGr:>%9-Y$mQLe;ONptTGE77*f;bhE6iXV(I`lho*Ok-/2q1-+KO8]fqJnPPN,SR0_sr;7/e`(2rE.c=(WXH;rc;d&
%f3:R#b'"Y.6tbVh6>q!rI7LulU[.+6%/hW>(8b<TL#PL#'E1/hNB\kBM]aYJm74$rd9\ZR5ifE#Ts6f+O7Kb=2`Ep4ReOe651?oX
%gDF#Z5CDAX=5B5kBIU[hUlPZm@agqH2_/eDmMeRUF3U6&E,/7$0)Bg[[^\P)]J"/@07P)W,CfBoh/PG*.S9AYjn=c"b\LlKC9t^L
%M'P7>&W_KaTXjIQS.3!dIV@GSR+BkL)t8pmd^6MG*Uf*_MeN871*AJ=k7#R]2n[J*e,'l4Dn^HGJJ.H+S\<:LV6^W-Pb*B)m_PMO
%l1t)2&"rJT"LH8q%$NJf8*S^i?Num.[\0XjcL%#Y,?,F>D$2(\eGHL5fPt`7)NBm5#l9bL]f(Hc`S!O'ktuEP-^]\WLY!M>aMC+\
%J^QGcr4t5!I3ZJ.:\/#(7jmAJ4tX]\1&TB$n^0$8Ou30/RbMNOcI/Vae!8T(7%`%HG=q&!au,Jd9'5oXNb'(m5mHr_"3WGURE^'S
%DDoM2"6YF<6/<-Z96KWZ\r9lqH39hP3)f-[^?Z<;.*\lr^AQ,Oha-r,lL'&rCbTs8a--'bA$32qW;MZAi:1`aUMQp!?EIKC@?'h\
%F5-q+Vd"lHJZlKS!>jPeIP0qRd'UM'bVW-`DfYW)Z02'62E?0$=BZZ_-AO7!%$CgS@Zq&G%M"'?IQJP,kV_RUnI?)'L[Jfk+;>#t
%1=_4=-[7F3n)-Ft\3Da@r+*(95*lP754h0Gc8f&X?abG"VV7V4<K@[T+n(&uor)>;#7UcEh[,oGL:Zm;31b*ce_'&^MTaG]9\5FH
%O$+L3F5*(?_HV_L=`-7NJ1ofVgjsnL8f@4i[R!0+b,7-E/[kS"g=*l-Ja3;d<k@-'D?!,5qYV`!>R'XuTtYOJmZ>Jk6@F;k"Uf7M
%m.-("h/j"sULr(t\:dAA%eoAFQitFE_Ne7pX^n<n'tX0c$;>f8AU6*ZaG7aS`?E"FV/Ii,IQoJY=Y$]'gtL:`Kq2V63;&uEH?1.4
%9Jgu9AGt_E7N"bS,'Te8^)e:[UrGAfkJinkC=WDB^u-g(f&,/j\[,-04nCFSH7r==Q#/W.#7??*$ODeU&>ZcK$OF4"&7@@L,9@=:
%7[q5&:$1@f[?Q,PE)6m"&7@O@m`10T5Tg@"JA^Zh8!CbtDTW9@S-9-Y.ZJ;\gCaPj/hgnJa%jHpg4hsul/#.T6&*pDiuZ2.NS/^f
%#WiRmn_Y.9$=GjSF+MC4iQ*e`O:,Lt6A9N3=cVCIbV4Il(LY*@J@u9XK=kA"Gqq]I&BD,C(cC5<8@Hsf%`45R%Ak+W+_;s<Oj66/
%Ej8FH6nMIFoNLk[n[KpamDG8ec-O%8lpEsKB9.t#cGb(&3SP@D5f7jC0RIlY&0#V<F"6M@J,q7iN^3Ne]^I-@%erWR%NMo7#_^Dj
%m7:gQd-a98CPW2P_5!Ur_f%A*r.Vd8(C!!49Vi)i77&7R6I(CSS(n_b-TJiRZb\]L-Ka_Wns:#'gDaM+Ztej7BNK=%on.SPnRsK4
%f7es!:M]hOP9#AXM;+):2jRR5()L2ahipY_nP6q)[.]))U;U@D6mMIm'/2$+6?[CG5m`X,BffL$*9unZXI`&3QZQl:+Bj3[.)#Pt
%'%b1Ij4$m.#_mVMb@VuL&M]-NkYH`18W`fr$lH13H>Y.<Gg.i'D-c=47-mq.N'i-n/nll$WF?(<O*::2*oG&8?^9Vcp?<L--#>d3
%R1hCo93o`gB[CO'!Y=L\#Y#_!l5)ZWI+:_*6L#@O$CEa2&5p:<;&Eo`+f&85psCf[$?%aEUfj>bdBPo*&428VN%Eh,g+R3*GNTjV
%UW?P7Ec)'k(X9sY'cjX@4U290N>jB?<\n^)B\Z]eCGg`uMoL_k"a,$=iM,fUKM2>9.)YUML)ceeqt1AX$tOn,mgIKG&>qiDP`i:#
%PXSM_+:ZF/8<@3hhjMIH#%Tal-i.i3aqMoSZ^-'U)ANgFk&JgV0W[Ba0C9P?f=a;_f)#;2(.YgUPD`XlIa=iuKa\@TUd*eT"Uu;S
%d:Y&:qgbXlVU-j:=Z5Mm8cTD]SL4Q`MT1l=DD,$>VQZ3f6%.Enc$Db72(KSdc<B0XYn>cpdiI,u`$BUD^P7LBga0Adk4q_<64q`\
%$.Z=C[mT&TpH/B3Q*EPq_pD;9C)Eqel$&oR3U5,OlHL#pi8WB2L%S_K]P(>MV,".9?Mgd)CqY:Iesa;%6E78=[^j"cW5[J+X'//Y
%1hu<^c=oScFK&mRs5JjPjab^9i\,BM@qXeC\Pi>OgoS"+&n^6rAK9q@h?MYuO!PFX2#gm3#JYn=3r?U0#!kl#FA=fWLiUf(3>]u?
%j&Z&i?-5<s>5FL8<;D_K*.njPZi%*mh`fh"gGc_p`m3"4^=9_o0"3n9[mKVnFE:bl?=/0#Qk2@GeUG!GnRB3W6u*^8>8:9.-*4MA
%Sh(c`&q#DUp;$"ROSE1U&$&s>leL)[#>UTDe5U)62'U=_MMi/T92F+rIGA9;I"jVk[l7,b?@Gc&iF<iLTLjFWr9Q`!DLhp\f.'Q6
%qV1Jm*'U*_a"DR.nXg1,39rXdqI`s)IJgZYkck-R?,8^0_G6q?ZGYZaF_Ceh)"qf,bC-EbDD&7+RlU@uj65kGljnITo?*2/I<`-P
%YO1F3]9igF3eZ8nDJ2"iLn0u%a72>d%d$.QpG_qf.[&0CeVc9\o6?8e%-C7Aj7'CKW47KkpDbBK[1/(Z@+PB*[;;K<It[Oipo"1]
%g3GNlf-L4a!r"cH2Q1SB-Pm9<52`N7B5MgDE-\+b^+%g@H"Os%;t"S+=K!cF0>'/T/kSc@b&@/'Pq72nAc)=WIsm;>_.Gh?"Fg5]
%QHdYdG3Q5#cgDYuVQgT>e_3^a]XV0O:=Fi<F"LSnK>b)fNMd)?A2b7B>'blmZBldU=[,]-i0T?'Hh/'PE@lu"jkX)3gRUkgYEqan
%`S?a*I_A]kp01P5IF.rk35o1cn,mCgcg(XLqf+!fh]>3-"^\!meaa'<d773FVYVK"VWB1Q`C\A\?W2p&ps_8FZ.e7)YK_9nFL9FL
%-4Go`'#O^D8&PVUher)S@o(:A>PL6tNVZ9;V=uBogYs.,d1qfB<gE#tkf,bS/+!48fR%3-N7?]qBl8**;8:>7+-`?-VG,2db0s-l
%?.doW_HR*Q)J'4@#RZ(9LV>EC?Ej@D]Jg221Zf`Nhr(PY9qB]BY--a7aA=)W]l4D0FU&N0eT7X8RRoWj\@8bR1H5JW2e++3G\dRs
%5jlXM!oXR5JD:SBdgq'e+Eui[_L*2jO9`r'-d>ULqD`3=(qdT&YRh37g#]QBC5Dh-BqIKg7gtKKk:__1!3,B[HthICXFo[bQh:SJ
%^%HFD`S4"'V*0mAFSY(JZB\a@D5B1=JBbIT.QJSC-75nO41gP0dK_jC.bS]k#Gn=9C%cU8#FedagjXVaJ<cP!AX0GZ>4s\BKssY'
%1%*#GWlN/$#X\s-4Bn+KHp$Y'BFhbDZ>jk$A>[T'HP>"#akQm_GO'u=c`OjQ$Y).2-DghY%`Rk("b_4D#iBhr((dWc+AeLb*s3#D
%g.<VYiD<Z?EWBOA)fDn"4ES*$;V^RJ@gBlMVjQ5l?oI<gU=J2'b^S2t3l!ugl@VIHYW`+MYV#=JRK<<<\mLlc[ik$>d(SuA;&S9:
%%^Q]f/Pub(a"t(5b5rbq+h.Ue;rQpBd@gCk$UNS?7j6Rq+M85T)6Ii4j>i\<O.Q<AF4()ERuRu[5a:IrD"J^7fOT7!jSObF,8hO]
%]cAdVi1,S7%i[ZaG9kD="$aK<U$!PsQ&1']bc`=s%i[Z!TG_nX3_60Q;`oD8IG?Yb?9L1R$Dm>'CVD_<mWpTB/^/j'a0^;H9/19A
%#h.cSR9:KXr34,Z['57o#[uUm1@)faJJM^)=s1CH@G5N/VT#,p]Lt:K;nP>gI7W0aB-227W??[^?b?3>cuZuo\1[#3J2,+)AgCRT
%?da#SkS[+5k(^CAZ#ULLXh^=lbe'K[cL%%/&FFTJ68T=VO(RR3_^(CLX(1M4=!HfZh^C*/j_.VXYaSB?j_.VXfJbod90!n*,q)\Y
%[?RF`;.=lDR$MbL.S@@B0J2C"<0UmB9SKM]8#)duZX_#R[?RF`;;1='!%m;G<0WaWKP;l*US<FlKPDr+US>]-$.Dc^V4n+_fZq`,
%6`FZGrE;.a9KC:<K#]GMaQj@'im=BDlk6<u+$Z@*$nGUQBC\FnU;ou.Vu]]uc=RMX(:)rFjR3gMK<9?7;56c<"RkDk:'/L!S]>Ge
%_"S3LkNilaP!n^D/0gNnfq2m6i#1A-aqqQ\5$JL5F&Wg_3Rt!j?<P06+[a))LmY">bWFW=J/=l^ah#UIhC;G*0$gd;*bOqf,[M0u
%+[Dn8F4o);Ylh^NE"O,ER`HBkA(<1YA"Zi23k*3KHbcWhek`LrJW988X'+QOS#CQ='qNm$hecUeIG1X5eXP[ChmLb^+(C-*,G9PE
%Vf&A"a[f"'MZ-GG[/;]Q7g@R?M6j0:=Gi^Xl^_@ern=E^R[)1UW<HOMI8IZ1/Z':]V"PJ%]pQs83=/K[3r1[k9rh&De#0H8K[`'\
%\Gk+4+%RBb#j_0qbd-:_pLc>"?_<<)WfX:RHCaoUGH]So"/5-DQ2f!E\9b@IogZ>fCXQC,Wj(7Efq74nn*bFZIa5%0FF0S$CG5?Y
%H2W!R[(`$[fi6q)=U3FK)&fgVk%ss.V=AE1T'.?A5kY(*2CkE$hBMhmcn*0*=o&ZeQq=L<CXg46rm+@'luN!fr4UtCC=M1o_uZ%1
%c+N?b4T-RE52i?4hmT*X%Kr6u7]Y&^rG?^mQ!UT(nb;Ha]@H/r3mLZ6VD>KWl`:&VR6Jnijh(9Dl7A`gPs=TbeEu/DA0..RXo%tp
%NtVUG*Vk6u;Fg4DTN<03F'X>0\Fq3?n+GT-f,jeU2_+]+8eb/.WOiBY<?4FK:WNIUM5HG;;hh9FT:]VC(kQN$=_<0G6pW/Le*<M+
%X22!4o./2$J`WH9=5(''HXl9F^=^X53qH3EmX=F4"LKL&1tM[5%.g>E8TIGEX-0I)$Mm1WJ*Z=5U+(s$'F:^I8FVP=.Cu0<("ng>
%NIq(MfO!,l)j_@Kc]lqq=AI<9L+K6Eai+5XoI`ltn/(D/G8!sJ'!sZFo]?F)acL%#L<[gjWaV?@Vt)lT&Gj@6X&*6(R]`S'&,U4M
%%b!?,RZ,lV>upNZXrCoR"t_]+=pcdGo=CfWN\YPEU";FYAdjS33OF?p/;n157UDE,M*aU>X-ZY09nJ(6W.H-_N\YPEUgSe5>02qq
%dM4bqC-#M+Y2rMr1M%C=>&,n4%D0^12YgGtMg7US-+"jZYDE<D(HO-*$sJN(WZ$._dnE9"[s;Ge5U9l6V'q=iXf6PH%7AC`#heaJ
%J`u\/SsDS@#:)ps<-feO7+KLSV?t=^+hD-E"4%^m=sdkMAP0NjoNdS.cDr^)+"`1(b6VRgj='UXrrEt0:qEN$7)oj)B:>?8h'VZJ
%g(VE_b.Pt4K*a"R?Q-rb.3cInFGeR]_t!<!!`-EMJ,q-nC-'Z^d6^40R3'9P@1pZsH.jTWpGGRVFIiS$N/afNJDiD;QOq7P&DPEq
%H(4g6/C5h[1H=5^;X!+WA/>]t+(uX4jD(/$/2/LB13a:"UnrfX1H(sq0gjt]+F!E!J-@9rDC3[LU",@=O<a<WjdJ&u5B=5.$mH6f
%ekM&1'&Y]9Zg_+L$MYlc/.g\gq0T:N<9b'?hFM%N*6XP00]J#96;RKSlor#R$2Z)h/<Hi-BisK,*M%49I$po*&&8=);F&(\N=:F\
%GfK48/?3*C\D&;6!G$MSM&Zn6YX4W8G=6c+3=7poIfK\oK`)QEp.3dAs/5Ff+:6+7?fGsk(`Z@#ooa.j7i1E8=);25@Zh=)k&1%u
%p0XY@/odDD`X3HP$)2_G8"li+@^&+m'MRZa+4Xn+cLX(X'c$O2:\,ZY#s'AM1?4?nRB>7VKbUCGk0"_r'8$>(aC-J:'BCbrqj.bu
%^/-UC2>_NiBsbndDt%3_\hRGd*W&36QG28X,7?9?:8QW\<-ktLN%cp?c_`b**r-3BhL2L_d')HAGX'B>4)p`sXj3incFIgqZXFR2
%2nm4AVbFOqc#$Ss&\3EjUPVQ$[8@-!QOt2LE9LaCAAP?8bHNsCk%+P%-Ad"R;+.^'GO+<g:Iu[6O=hbY6<+=W&.^4ITP[a#W%eI3
%Q</0670(a+VI<A/_qd@&GT[W"&a#)'-Eq6EWE,u]'sF&Eg<^@NEL)"k-Q`^aR;bGQ0MB!;R7gg3q[@d>>__3gi+aA7CS4O7,)<dM
%@ZWht4HM2=Q<9,INK:TCBpNudU('$r"VCjp,+)L"Bq9W.!9+Jp"B_K-^ecFdW<n6)_SB">Jn\s*(qPG#cB_&TIgIo#AE&>7<fD]!
%<Q!6@Pi24,KX>HLXcu5iV"uBMe&:^gJBtHO(8RZW,ROoV;%NhD@$gpF"I%ULRVErnCO"\'Q3l5mKW>Bd9f-]:'#BGO-9k*jQ\<tl
%O[GdU<3.MF1f!uJlTj)j*Nt9U'tQr7S\`H&3+PpC:;0`lBq,_S&4OUbl$6"RA@cG?'Qg]q_;]N$a)'s#_?!%:7EQ1PgEmsF7"ql;
%Z9d!;!"=GDQR$<F7Z0+&I8/1iQW;_n1b&<?OIKGZ]9$pg)aH1ccYJ?D%$n!S?.TWPCiMf0VMX2Z,j=0m$S0(VhC&$"_g$)B*Y6Fb
%!":;06Tr[Jo;FB-%%am65l_5HBluieMBe,W%gY3p&YUKpM8rRI,F_t'q>5#,r`'O:?NUkdagH!lU;cF8)PM*5mN\'Jfr&[Rp)>7k
%/?5@gA))bqCIGtid5EcuerVUfLUsd)];KB&&HH+f=H$7YJt0W.fZ+Hd@gB4L#b/"BJVPsKm\WS/IZpc^^iteo3T(r$M$A,4OVpAN
%2+"mQ@2?B>dkpULNtt&!(e(\\$(=2C>h<gW$7ZYRLrcnX:YUOFJ>*W>7A70]:[C]5Z!,aJMk+9sJ1bOOI_2'rIfEE!E\Ll/,:6u@
%*ANAN,ZX7dD?t>iQkLlp)^]+aOn_[r'XX(.8m&9M(SHEZN(C,&AUq::`pgJW-@b3$bf.r5!e>noE*<L-EfbFegpp6,Ml1bW9ZXrC
%`DKs\[M4)2b5PuPN583aT><)C"uEH6N5V_F>X1VR9kHHFGBKbbJE<N_Yp9bD[I#.BXf<5rGUb4[g!9;JVk4N?-\rrj'p;th%Rncu
%gB!.hU2'#570>8=MB\l2;mnZ#Du7K2JjD6k\k)d45)Fk2lU>7@9L5*\Fil'\VQCO&[f6rLJ9`J=YbW[D).TXJj-H)H2,[?fA@p4E
%3^JQe"9:`!,g`>"&hKK64:tl!pb#PMK/jFO>5ed9^^.(NU.$2!)O@.LAs>&D3DlUe:_dh2bM,-F3.R8_RV>u&%*CfP\f!it7"s2k
%7GG3;D>kb6!P=&!VJ))^6_NR/";-P%66$dWVc:br.X@L2#SW#\KV;O:OG0^P\sZP87r@3h:dn*G)!u2>,;=Z[6UPDV;:>j1dmVm[
%b8"/C<ON:kD%hR+TJT)bTg]/Cjt=La49Sih<E!JHVN(#`56;#XlHks.a<N\+"8W*^/8c"].PPhgiO:g;:\+^_JS>s7NLF_s61@;X
%#o^&(bosNG<)aU]0(lUN!JiumKUQL'g(F;(>%^QoCcWsO'!\[>.Ru9XbnG^8-4u)7SWQ1*R#,8!KGcTQ%uBXD>=s(Iq@VJ#q%#3k
%#Ws3;To,@ETg:3/RUR(Z=sn"XaV#?+,(Gc34c)#CG+?boi&$79;)OONOPPnG"<(ZoVCAf&3ido["FsTZTWXE`YNd+Fk\6S11]Z(;
%-6!`f,<c8d?F;'bCS[QE3L+jCrWjdbiiko*4ZF*_9G,C??o1\)mY*))*3^;/*"<RgrBrRiR25>9dE>8E%*CS1,KR#+-79_D>Q4s;
%+<7Y^=C`"KM6W=?j4$=SL"93t:6bH/:Cn]]%m&+Fa<*Ci'@oVeCf70-2d=fh3RQL8r't,r^'$#f#s^nQEY:XUiW.YA*h&a@6F4:L
%;D:D6Ie+Ho]Bq4$qj77;juE0dk.%4Vj*[qHY.#X>C5mj*,iXen==u.<D7!7s3R6>.7Imf[2`r*+T9@>R<(E9ga>8ARV&u][E$@1j
%2%3^Dmd2,GfUreIdIL64UfLSK<!sZn`<m'F;`qTp-Qa!9Q27[U<2E%a6;,/m@&r3g.6J/P_9(.l;D:CJd:e][?3i<">ad/,2AKbV
%L94g&[7rh#W3?\9OuZ"\+K2Hc0&&L608/AnS8AqGq_T&n;)'SE"*)r"<98KCm8ARXm.,=]Hn<VmVM!bU-@+r4?".bMH&DeU2.TJ5
%noTs-CsX#7,B+hR`,_a%.H`*%/i"^,S^5b?q,j:GG"4C"(R8^.WnTQNX3_DpA[K'l;D<X[ZS!.s0J?TQj+qf@UOoSsi72h=%[)kZ
%PhPGtD4\t.']E&`6Y;%,^tIl+Xcn>CN6BV:<uQEZRW(Zlc;?l.$B[$NIbrmHnhG^;!'52H+Y]VN?5#/U7Tu./@9Xqg*@(e-YRIUk
%Z7RG>,5#/_3c/;12[!`ij.$!trFa=a1VT#2[V;]fEE7=b<7a,tXf$fIlp!mV'6Ih%-aIhdmGX<DRgcT##RB=ip?iubNt7sMfcJFo
%'.k;f?:-KR9d#:3T^&'9L:_//0L96N%9!q%7FP./jYZO/WNP_?"]#Xn!#%bTo@RE8J;!0\3@>!2&>DHBB.diW`*e0bah=?g!],6f
%%bu#>@Rpn&LL.X<IfL6TN9=WN!!*BXeUTZgW2-OMin4N3%uJ+,Ap+4TCg1^V(is5,atg"skP]_?4o>;=O>5i5Gag;8Snb.GYEt%O
%S8$a.3'!AA\/^'HE8Or'%Oh6f9QeMX9Qc1Ie]Be#?-#BsW^>_/X9*$mKUa'MZmVW<_=CKC\_C(dU?f;3]T!S#5@I-pVJ2'<DPg1$
%,3Eo#5WFG^..K2i&.Y'/Jdn'i%0FF\*[_>f<JZ^OM7ou7:X^D9!1GDSgF%8<OCkcX1:[_08!kt$[S@5@d!&Bt9Q#rtL+L]#Q<Q(D
%=!fk%b9)9:QlECf\H-&*1\l$Igba<qX<L``"Dtgr9:@)f)_fJq0%uH.:"Ld[fO`pj5@XXm"<U,T2pa,6Fn.!9'FgY%E$TVuZqV)I
%?mQ\W`!sc*@^=$P[\:u[i\HGVEAdV*]C4&(#*pW\$9(C.4Ct+m$/0dtEYb"Z9gknL&3VXO)Zg_nGb4;B\,?=UTTb.`\HHdo`4TK0
%BHt)4$fj-X*(/e%RMZI[an#6)D5(`@R`D7>;^?Z)1nO)S\,Ht!5_@h&oPG3jU`$g)Q:M^0IP[QAEjnaS(8uEA2?XE!eMc#(:oROV
%\/r90O4\VOju,fZ=JA9FnM.".ba3TY-YVPFm)nL.P99uLP<>,V>`7]M^;SLo7pl?5CUpN`P+kc^aI%<WVt.&li,4jJh)Du<gE`%q
%DWgSs+^bnXkK>uiJ&)%^2ODV?->E+bF)nFbWihk/SsB[L!W%8R`UZR8jl)3,o<ZOGQ$TtbGLIY=rT'nu.GH+8UstK)mDq&r+o*lh
%lNH/HQ<j<FD3??peSrX`A-pGmI#4cgO2(g[Ar!3u6WhVHo\&#\8.RgajD:3Vh03LIo9>O=bPi@mRef5^>-^k9*g<!9&mS=[Bd/C7
%1f9q98bQ>!.Ka_B&m-beQ)L4i^st:;A<UTWi*deVbCNTa6dc<<Pc0ltdFBp*HZ-L">[m8cV)9!emRZGU"cd3:hfVN\S,c,)fZn9V
%d&O4g'A*V12,26-983\t))%XCcs0;EQB-Qs;=aHeQ<i,rb'@VLErZ5h'Yq_;8$f#X\86D/ggYUF#EIj9cTMNkDOUKO=!S=M6P'U%
%H\qq(YsuZXD;*f".=88^:-=<PJdHR09KjlE8\-?T%X'a'riW;bqZJ;o<J&n>"@-@E6bCFq0IaW:C2PS(%!mPGg(%4=Gq>*:K"GI^
%G?tqgp^[m!@EKs<pl@99)CGkRRO)Os29gd8]#f'L%Q)3;co><uX(h/!SQ``JYYZb0'-&BM]ROKCa+Zq0H/0dQ,*7m,2*!K@nHLn;
%lQ_Zts5SHDGbeJ2U[S6IL'.It]2"kQCQ)AarJ,RPnAq\g7SbsUaB'XL-5<n!<b'''l[OBP?.,gK19X_OR['fq>iVV_A#.Q>5F#a'
%,I8jL`G*Vg$._c+^>rg*F2Tj"Isg-JO#3n6;ie(A%Y0G/_'dlRN`_bKLJk/Z/t#^:kRLgGS$5`Kg!8Dn_FS7hs7D=%Jk)80AELP'
%33]$FIua+47P)g`6i/K^A6)-2X&C!/:41bIc;kpibk`F=HdOFi9$E.<Q=d,d=6JWaEMV%L5IBa>=([^[d\osh5@`3krb'_Q[Sb5g
%L?2"3Q;"%h]]"`R]-Y^JRR_r$(hg%?'ikbePr)EmrRue2D;o9,N37YN/T<A0Z'u:5HL0SsOZA;5gl"SWeqq3ER6!0_p:KPH"c@;+
%[ib-nLB`Pq7'r/SG[(1J4HO6<&,.E3%'L?'GOX;.nXCdLf:;e!['sm]YQ4"Zkelk]`;:8o^2?*Z-rL:19bJ;niu@rINMefirqQlR
%+GsLUYb,feoQ`hZ_EGs&D4Qcj#H&q9\_&-:GhK=/@*WA_/a=h9N;t=pWLgS9iirKL7+Q(@eh^mC:./ZY9+*(%ImF&?46tbSM897:
%bB#-)R#[NZKE0?m&o@rA0@&>K#N1/n<?Vup%@#gchNVd'F?uW-Cm)eEWT>WXB#E=#A_>=Qb8O7HWhu==<+JadRUeXWibeVr2OoN5
%_o"7r=[lO?qHoL\*@nC=!&T`1osRU(*\b0CfT4M(n@DXm'C>$Z&uj;IiuVq-[f$5/_"-LL](Ho.X:T6Q`]]h:M$EPUcoF/NDOhUq
%_":=0SmqnY(<l+Oer/>sp#FIGK2FeGd1=lUQ9ACf/:!UB1@[A$,agXp81$h;h/*h3na'Lrp&eg_`CBJ=G,@2iVXFLu1'\1_lQ:W\
%bQc/M8<bDMqJ\+68d]]e"b>5>dG6i<GegOe2/K6.l[sJ.?W(S$K-lKreT82o4r.OQVl$J[4=jBqT4GX@-rJh$Sgl&Yd*X6j)fMr$
%<UEK-m%"5dE#EjIC!7S_[M*k0>Q95UVa6p<Rk5.\<JTV7fB>R%)YXB2[r#TYJ?=PPrr"*95/qm$ISj.ol+8[SCl9cf>5nRRTMPN"
%MOh<Y#TYqqG/a_XVuD::XP1bSBq6)'!&7Q]!og^SbFUru)$??,56G)p%;6euRJWi"KNc^#-QF=j.Y8%2WQ[1$Lc\KKHm]aDTbW;R
%/!bT%-_F_6e56_GKfD^^"p[dN%,M5DM>*<57K`RH+k(,XVf>%BJ1u@)CNa9HZGr7W4.Wfo]sD8(aBVH'^]+L\R$/\M[SEDnOpr`]
%l$7uq)e$mBTnF5ZE4rPQgSAXM-"OS<gX!qi1c>D,L[9EpX;j,Tbpr3>9`FbOfQW@\_AEj6o*ST.bD$ED7JtT6At.7SD3M:$)YK3p
%5$/NPRu2mUWAJTK?8D,L=%UB:[r(]FT:1LW7.F:R\su+=%8$XieVGfnH8u!If2FO.$tn=jm(\F+j^d+L-7[NW&g@Q3Z`2$;PuK^n
%TsJV,\"?*=_<kku0M6JDRUJ?(!GO!%//bKip1^"\rE!Y8(qSHY<?n$:_BMA+jXA"#Lb(m@5eJ.JJio$VNrf[^"d'6eM(G[NX^8IM
%V2Gt5F@rj`A?N@45ld=acc[Y,*D[c>,t&9K1lR\3-2(5i88FN>=skBoA/Z#6<hpZ]Ka/&2K[:'*PFMoHlGsE3cD**GX,<Zp;QrF'
%ZE#1rLSRqM1,Dqb=d2+L``pmX7`jP3)@[,NLG720_4\--!`W58/Or\O;(@A;HfSn3P^R2*R@nh8`5\jTW^'*6_oTEf0UG%X&koh.
%Zq`e##[!ZuCn$j6lihb@)W6`Ke:GFR:Ru?dJcPq<>(Q!P9TMY[Je2+;3+0%&aqR+6U!1"fGN6UdJB23=&DqCP(slA!SS6-UU5Gd1
%?+3J^/JE^9`!8tK)6NFT=Y(kc`u\n;Gro0<9k:E8akqN!9!jJ52*Dcnm#bh#h]'.%cG)d^1mP%nghi7\r<ANk+cOhl(BALb#/6[K
%2K/qX@kbJ8W.=2OS,E6:YsbX+QL=f9WD@"5m=5HB&4n4bjZIap:!31q<,UgHaLKF9ral+giQV(hi@Ii\1JRR,39GZddD2V7lVD_g
%KUa&WAh4O\PY>)Ul%IAJVOQpX(9Z$=4Rr%Wquk(e_5/GV<KSliIWJRL=fN[Kd+^Z3R%UZCHoj3RWbUlX8IMS=c?!GQ[)tLJIfL6<
%nU\;O<)$m6NS6=IDHJQ0g4eDGM898;%<JMj</i3]ZCdf@XmB#1RB,E[^]9'C8CRf5eLAP_]r_X)"OWmqAZh>Ufm3;Z&=8k[eYsD)
%k98=-$UoH:\+pQM!1%,T925]=LZGsd3LE('T\6sD6>uJ6?ih"*mJLLp_=jD49a#J=Z)4`<:V.^!!E:-&&sT@Bbs]Ms*n(kA;s%e`
%R,+Z[PC.s;eRYOu/fbgcP;H&Wci:ME-Q`^qJS@_ncH,""D-R=X.5@gVAY->%_#iqF/hT^5"C2Vna!Du5a#X"i1roW@Rf<@=?uHd"
%=j#[Y@6t_i)QudbR1iZcD4VS<TF*H?W_?p5M="AHFStbh=5[oe"88>"\'1Zudo_J.4tW0TZC5$l[s;HVSgmG0>\,nK*3Y+?9Vu$^
%WOP95o,iJh/3UD3Xpdg/@^=)MI@WMb@[22l,mFI=#(Xlu#!j'tiH^I@0j.5bd*qmt?i]mDjjKE.oYl)>3LN@s;]KAoQANEX/'!sp
%rIB3HO?WR766'j'-"3t#h=_*?^@`g5`tp0U%1/s"d9&5gUX7IP.9N7j^f!@));Od>,m23Okfg5h0D%(s4sjqo8KA2dK(D]\gh)3r
%QD]m!F0nUL##GC-QaFt8<q\3DB<5q3s/^$.\$EQ'C?/1@AsnfsAOD5[dL@sMm#?PI8diIs_H[eV6<2MeIl)*8jASja1*mMPOpp?9
%L`mt:<[u`?\=bucW'Y64;:(`2dFgW2QsaK<Yp7tFl?*9a6fsuVb#Bu/a3usB=Fe<l9b_1*V1h)'0fWhi`+^qbIB*q6iJF1e[rkT1
%5bf_:'5'WH=Hd=6!&;?tQ#!Ht<<ZU*nha-+,%r7i=LB2rdcmg!+@*3Y**/r:G'nnBAR[@/7*LbpW2nk?.p0&Bb7$gJ&Qr-P=CG@r
%QD\`n[pQ%H%P%Tn>mq38iXIt[eLH47?WjbEVf>URJ;'R=fpKJHU>ol,%.7CK;PG)<8%,=$o!dM\p`%?'Wp$P2OR2aJWt;@OQC?4M
%4=M+T=BpeQ=<"nj`WV-ujcF?p_Wut6:=\)[q1rE6%`a"u;.jfH#^5\m/(4XU;q9>T.7diM>`:q>@JD)X2M;;J"RBn/Wt6g9N8O.`
%:HTEVN8k/L&p@?s&7JPpZm3/a6Ej%cfKF0EKOBC,*a_4>VJ9/&3@ppeJD$<(&Nop0N,O_g5@F4'G9bOLFb#.ao&t6&]2],CW%=O`
%gH6ps0/<Z#P!9_2n[]Tt#<t#!i2dKc@-`R:1f$:^cu^A6,5)AJ:=stIXIk`-I>osKSp!]A!/^5#U6_,HFEkX':o/kWXq9GKTReZN
%f#^D^M.&VXKp],6\"mBMi*6n/Tn^jL,s6OC-Nt+G1L5C^$XI>;H(lVLZ8+*k=i\A72YgGt1CcoS=Ep0MWIACDGmCAY1WD7jh:">4
%.%j[9N6K06FO_"G2'rH.AJ""LQlSu_jPtbWGT=g4nC3j]<4&:)Yf[+Gm7UO(`,*3-`Rs<RDdbZ!n=QtpM8K9$DEl%s``^rAEi^S;
%kQYob?n;Dn+F=A)lmfMA[7MUga9\Y$<J-0``"q`VSTl?9hu3^^)0XW-=uOa&J[>FN7V5h'A<eR-E9n)m[^[8("q.A.2AVD<K1Pe9
%#P_Sim)SQ+&L@o\Wb1#;]Zkp+)Q6&N"JRYu-:ZU$To.3f),q1V@Ja&pF-#Qj]Zh+B#q?[O"T)I5>r/Eb;)56=;c-8hA_&jnZ`!U0
%^]a?XP\FbKd$]*@b2j@7fF&=lDO]\!bnG^91>'iZij,\$;/)^RgNn&I*=Jr:;K^[@Wd($5!),Ye]cq5OM3Oii<]%<1dIB_N+k&A#
%Lid+L)h\DNV44r>@PE@f0S'\T1;_-iKLt:^5uLApiiMF6F_,ferr>_(WH(ipCu5@r#VQ96NroPPTSP>Ri#W#?2bsi/LkOpls&J3U
%"hYp("fc#rR\pKRP.h+@6#&WGkAC2#0S/>Kd<+\SD,;kEhc9*t(fd@Lf2OBuR(%?=0EI"jR"g/>.t(21GTC%d_@oh3ktrapnk=dK
%).hW`PE,p(0uAeoE,T@7X5X*q!/%9XbQUE=f5<9>W!5:?P";gmdlK3c5Te6NC"c.<^5NRh,'H^]l20J?D4P`+q>jg('CNmr1jp"G
%"2Y\ee(M[q7TBl6$`JesOn,qUbgpQ_Xja5P+^VQAO]rVRU(>SFOR'`ehU(sQrW-+d+,U19!40Qd=b$b_^]lR>#EB"#LVQ!lEmXD7
%:CJ/?`/^_"=7\V4]-/e[bF]Y_5q#W.HaI\fI6DN?++OY)[BN2j*W:]u4)n+SD!rm!-%h$(VO^f)gH73X+L@$-U?/$T+mrJ/KhTu)
%fi=>k%3A3I4HhnPIfLh:6o+t6KUDX#KIIIT&YrR'%V[Dg-O+l'^G*Wi[s;F:5p@L-_IG+,%VUTQ5_+renMp#=!^?:WaTZ^0Rf<@]
%@*(h?c,r!IHk<ssFB]k!C!\9@S\_H;DtCnT!qSD0T*4WtQ3.Ko+Uak957:cF/Ta/\3R:ooM7(\Zb]hTD/pOeANM,!dkbsA0#V?#:
%TY#(3.B+jPpC7ZO3`Ro=8%&C5=K:@&S9)/5b5P$jo*2[3=^kVNL[OMg4mSq!=2X+f4h;kO8.Pq4SLE#gK0'Ch>g#>dj_gQPh&!3g
%"aeK$;`'u4X^rYaEL]CJ]4LR-?^.+L3Yh@5TI+X@J7UC@?BoLe9?OsVVB*q*QA^DFU*d61;,l3oNYhVG,4;n]hg%M!_42K%W7B;<
%dgE=paoq\]$$XS2m(_K;EAWR+Rf,ti2EKhVB%SUOmY6SUHe"/4iBUg#8[ssLSJ2L8bhY0#]<@ZdQch[]),UX[(;<_$1A>aLVe,Gn
%T;C<#5bYNs`<pf%fGcR]3H-iLb2+A7cGSc-#19,[$A\(2nM/rC9CoMbrpK*LQiAccU+F_llQk]TC`"-:i,4sIrRY?Na;"e`7+4-;
%<n<f07QR%:J3=^^]T5YOVA^iPb1-)RkBMK#gSF2IVL(<C\@k.+W`a?oA7<FU[[c:=DOLG$B,Pm'`$,9U\'qj@b:J"*"Wga_V!Pd0
%GW6[CT^$QW_elbgia'd!!I*;Zn%KgX@m`Tt=9+D)&f>!%d7&9&`9b7sk&=:^4sd@Q(Rf.dk$gSp2,+#+/#nC!;8JM=p`,ikHE#)U
%cLF9i[Ro/#VTn)O%$.c'3cE3Me;]>Y*ogt&r;Dt)-gq-Ik60snR?tXYWQQ:YQT,Eb/Ao`oGfn2.AcIj#9_tAi/5_/,S>9X'OkD8W
%3RIso4N1p$6lPl;.F"B"&or/'dT?QMfZPpmYm)^IlXfKsU8/D*.<lN16>ub>PKk/$k(oabQ=L6k+cqNDU/Xsg@7Ml*,1@eD]&fOF
%D4_YM0SiMX+rE]h^^Jb.W`fR4gnkR(U.G7Q1r7K-l#$GFDumU$'sq9eK7b>Ad6`IYp+9t-6eSgeO$0TYKEsQ)636h-huq0-l!"s]
%Toj[9/I)Ml8Do"F=jAANk!&nX0UaNM>sk/\F.u9&"@**j9E?=mM-'kV.19GQ2GXl2@+13hLd)8Gab^?T"bk\1fA=!DC9hC%bm!qS
%2:4+IN-FF2"rRgSCkLoJ_2W!PPt]BRptn0aI`@^ob4_cA-T11h\7_A8aB0=jT53W6ilP)SN6%tTm-a(=&:o5-R_>254qO^(Xb`2d
%M2hg]8s/s(%D<c&L^2ui<7oPAQ$4MGW8]J_[U/`n;&G-H1UY);LVJEHFRu2DJmp%u6u;P-Gnl1S_:Ki&N3kQiLBh8ifSn783eeKl
%3E'ic>q0jk.>>9ib/":2"V%F"\jH/qPsk7,P3<#.JS7\(k1"qXo1lLo[2g<E#5<8b2nIksVKGSu5ZVeV33InZ]JXWch9dkuJi%/j
%k"X_(JRip>lI)[ea\VkM#Weucn.#sr";ZTjD.r:t\@Fs9R3m7!MmTcilWee2??,n]mQ.I\Ees6./mZ-'9/g53j-sk%7gD)'g.gtj
%,_Zc-8)qUmMdX@XI*o5hRDtJ-f:Uu&d"$EOk'uA7;EU!`]a".Q;3rO1DHGML*?Bq?YkdU`*"Tlg]<'hk*mDm>Kk>,ag4k"Z$.r*%
%;1a]Z`@_X@]c6,PnP[.DS>`uJ;_QeNJOi%"7TG:;+!"(eeW>B\]JHuEScM6PZpAP!^Oc]$![Bh#d_\N)`VDbU-oC;ol1a@3OZed:
%F<DX/1OP+/6e`@om<T:!rJr4$drno5pPs\+&'3\L<CksH*XIusaX+YS]BbM/.MqJoJX7AuKa?dNjXP)/d]7kF\+oW[`F"ju/&,#(
%Yu>^J,#2ZOF,lfYPF&u,$W@3)&RD-#TV"E189\:\&lj0a?Z:]G^(7InEAN`<P[<4q,454`&7@gpnCKVO-k&Y05Uc5%A>X#,<l=D=
%M65Kl02"SnORZ+28Y2d62QQtZ=*C5h-b_d&jq7t>2U(D5\[8H8,pdFr7$4d@[)duKZ,k&i(]WtbFca,MJ=hI;p+ORfqBUegJj#2m
%%\<iAn?5SVp@FTG9"S@59m>s7QOOo6oND3XGGO]Dfu6R$ai/ekBj?Rcq8<JG^^51FHd$uKLk2C$"b`r>cZI4:%juWF_k2CK47(%K
%SAeh=O[1MBar'q?'^,B-(ZaLGoJZ5(>I]-_raBt-/)0N(mbe`rro=Y&T`j(Pq%^CsXdiYo=!,BY/uf0TM$n@l8bQ32VDQ&!+/mdm
%q,cB)"UR.gpdE+dGMtVAUb`*P$i4sj>^[=*bA!Qh+D7>B3if0'ZWH8'ht=mT/O_5dO.Qr4gf_@,oe\&j3oq>_SMPNsBM8t9s+u\T
%gg0@ro4,h&G8Tk!0jSn=XdC()7)hIg>OO1aD_YdhG.;(toKi,u]\?4eOE3'XD^QX9R"W;sq0kB/V0dUQM%"n%V99<[NbuP,(na"h
%g>\^l!u9qM,tLmspo[o6d89<'E*^ZK[f%R+r/oS^Dg!n&[O6?Yd;^G_N'7LUM%PgBM%"Fm3*k6D19\)kZ4fk$kE"Bbp7))=N.:O6
%ZUPNh]`P<]/bHrIL$`J.5X'-Qc<^1,b[5e"I!rKpM_\T2GGZm6VJAh@EDp'7`pKFu/u]&Gcc#)oUhV`!T=''B97AQ^q--H8G'*L0
%'BsJ#6^5,g<BI@;2jZ8m5\fEC"6$5"\Ml%GgV?Zg:ul[o/t\Xlm3'PmAT[9SO?3o>n<(<f`HM"aBHVs\djN]Ic$0dZkmY01,4PLu
%j<l`'LWmZ'GBarO'Wus:UKd[:Bo_'G8$8ai`>tq%/um+n[\C>RrW4E;%q_M\BSF#+FO3=n+@1D`d%j/\OZ_E/hVhn1d't(,E6BPU
%"fL$Ee\rE'ZF1pO'p!f!O)/C'48]7UOHR0M+1]i/3K_,e"fMI+L4[oM^AmdQ/FN0'*BX`D[%sCB@C>6KF'FgAo@q:lJio?;`Wgnn
%';V,![*A_:#bKJh=6C6r]LG[bIkm)QWuF/.'<9Q9QBnZ7TYa743`UWjfG!_cE%,KB4qVI`a(I`((4oG4EnYNME]S-O*OeI>W'QQI
%,ErXN2J)ml@CX,7ddqFkl%WGq'5gZj>6q'(prPXGZJL=b!>?qU:R#nS%&&<"/ghKBJr*GPHo.L/OYK7">*4#V(a:e.P?HW/OSB0Q
%"L!gET\B<.&.eVgHN=40gB'p*P'+\]*n4X$S$7`=bCM,][Mfp@QQ7-%!/!DmP)"6gk+qa$nbXC3,SXCkQFGh0IK9u?H:P@Ch<ji"
%3a4m\#\_Q#/PZ.g8\"3X0KbH"R?ElMj<D7W8'cL!0)<V:/W),!4?aFU+$`#18^_kW#CD-j3+'cJkGrV>>"5#VFB`p5'IGZ9OY/).
%BE%h3$/%I6FAN/&FH?$AHL]ntIfU2ia&:)0Yp3u,,,4*TY^YXV5FM!$;5OdDL'aU,<DN(;s54iV9V$RAWH30ls7;f;O4`AD@"RT@
%jBIe0Ik]p927U?H$>ljAageC$1,a@o-HIIRq:JrZAR#*/al4tre$\(Y]%D;>Dt7q<Ht:Gp?'.>D!f7H\0@MMRjD*pZC9)Ip?+^,g
%pigG7RfZgB)4bjCda<qs[/4+>$F'[H5hLNO'K4GdjXWu.1SdC[`?&NGai\'uP7gZ5Hm[>iM'm[$<=C0ZZAP<mP.?iXBV1ZgZ2K8&
%9PD</6M$OD%.03dbj[0ce_=,?cb@!hK(s.q\FEF\i)6RVP*VZ84&m)4>6;+&fJ"kd`)T3PWoU%;1h8Ji0:eu1I'mFaR^:^s6$sGi
%@='.n.Z8^/oZBZXb!\L:($"P[]OgsD;:s7G^l^]c`IoVDcaI@0BF+bHbo_EZj0N-\flO_K:pSWYehlT*Xk?db?P%np`q4&s#on9I
%Vo9.OeTh=C%Y+?Zn_#$D5'H!j_FjZH],m=lf!79m:NR9tW5Z)D[ET`WC3Ea&?`h9N7JC.#T*acnP\D7e[`5ItW$H+Kc;l*cCamTq
%(IV[6q8;u/9:[n>/o`@Yd5$e@P`"e\#Ohm*:m5PGa<m4<bRc6G'g6:f,u7J,^E<jcW2Z>$IPoI.-Om^3/+8b<\r*M59@iIE+[.!2
%[.e!%0!rn&^f$^H95'*$9Blfm_h=i:c*^=%BY)p'c-c#\oSU/?h"D[n^k?6a:UL6W.dQ+6^U\<nY<qNk=1@&uL(QFK:RpMo;AFZT
%m+.7MhJ9dg$%DspZ<9DTRc6i3X(rQo=7>.V4o9.'_hMW$:3M'=<;#r,99R_)YLRmOI_uO1;:lLbZJ.r\WaeoBZ,L:'cP%:R$"iRp
%b@I&Yp$67k^F4ffJ#Dd&V=<"!JDc"d%6\8K/!OZhA++-F-S3>S</O)09"V2J!j@N@GB5KRR+mk&CXWsG,i0"AJ!lVuI@sh5l-12f
%Hq%\YgVmM14;!O^J?+6H_&Bo=iDGsbEu<7@A6fp%l"i<M`1\^#3`IN3(\sm:*1mF\E/e'>*i">A/Yh,iR2pXHJ#:!q7O?6"V]?e4
%"k!GR5=(!l;jT^-Wds'57?j1X:UZSB[J9S.rW49_!mZS7V'0p/gMKOs'S6MY1!)k*G7S@($=pT-i($YH2!oSP9XeogrG]iBRqk[+
%fa`K4"iQVEh5?[!FB'4DFtNV61'P$b=6e]%;4*GI@0`JPD'hlTaF[Q<4ORkAGo`n$dVdG,,Y0\C"/@D)EL.5O^n3@@:+`<jDcs/Z
%54.hn,`mnCR^7tWcDNLV1elKI^+4D1[<g9*e$&5e0-ETF9Z1Mqm#8;'9m#\R;q4j5\m-T0]n+)*TWg^\1$DJh?-Xh7dA*T1?tnAY
%]u,4F:"\k&(XO;2WIkM3>0`8(77aT^Kk//#W],D80Qg]C'0A;b'2C%*0[W5NZB-m/So:S^Hn`l=hh;S;r3JVa.g@:m>2GJkhdr>4
%jX*m9feR<h.[3?W%ZbZ(V^*0q5>@^s<uG_3n%T`,#V+7>U[0R448]7UO9(-M>B+#QHLY(!m"9XY:-m(J7,'Y6(_TfQA4GNC&GFnT
%L`<h;ffWCmE%SCUdFWU+(N;X>=&IhW-*Pg=N^#J$1oZ1^MB6f6aX*%p_ZgW="=_I&Re;q4FboCQQA8iHU;#%'mBW$RE-N;^>D.bc
%lr7c7o4VSBjl.U"PY9,99#Ia(*?Kk<),n`"P.<6pVF!'fa%"Ok0YPVq,5DfF*W?*e+A^?ZmtF"G/S1PY13Ia[356rb<LY&V0GLI%
%cp4B*QB9M.q"9ii?^-Bd^GBlW1ND:thV^t8.1MJn%\&B?<'C6:)J2Bg++%)G&Q\)(Q#76l;sE;%%Y'P6jH68d(,lWk1EI_-iT7'@
%Gj)9ZR]d_PKa1Tj#5Eu>(SiDO(0\7ccr&?PIeiWCgQ%<?K.=95V2="n%n&n/(Q+jSo-jMDACNq<):/j'6\?_pR#?)`&g!NKX@]OM
%7PmkU>;kgU3,n-Teh')q6#_,iBb:a!-_GV.90-NL7j3G\'CcUbkdq2=\'ll+CQ]a#]Z;ttkkI8R7Ba1/d0IlbTMWeu!Zq,Uo&U.N
%(NHa(F;Q&U]u>^@q<8$@HMc>+8h\R4=M#rT2tRK&+N;(^ZAN<0jO!L#C7OrQZ-$HlfI/$/VqtmLFbo5mTK9``(7toI"/,`HAQ_)U
%4pcPdqp#$$0Fs*%Wlle"A6\8@m%/FUd:%9mK5B:Zl:ogGaY*+CH]dd4d;<kn^OQRK&<Win$Gi>3k1>p$":I.8hi:Moe9&oh%`<p'
%\fbOZONr6T<CY!mjcGg$V%6E#UK8IWRL=io9R71ORUt=A_6q(&+spaAif9%>oL%fQlO?YEB"JTt&bU`q/b%MD0'W-?r;n%]!/R@*
%eEDI>?'ps5;CKDV]dN7Sg<j>RE9l?A"&j="2n;F&.=kQPR@[\s@RnK%_3M)X9Y3VF</Z[^Wd2ZXNQD;Ra4dap88qSB`On\Njd4[1
%VoDG.OZnR@X2DTF?U04GpRA476XGb!@_E]hbi&60(15kD@<cbW/QSucS`J=7gFhoR7j42el%Q_g3^+'R>mX``>!3S&dfUKRON"*2
%OZ->0kU8R'-3)@ug2^EpqL7fJjl3H#\[_.>\39BUS4XSU&XPJbKZ[$DD<@<C>qX+I-&8%tLXe;%r*)"9<-kOg'=")aO(kTNl*gr[
%k%j44H%;Z/+H$S0WA^^+RMdf-:cCp^&?(.;Hg6H8!<K"hZ]sFpU9K]HDJpLb3h"Q*Mu-]t3",h`CBp2nCmnOrYf7TqF!l/JD:bW8
%q$E"0r^h^=g?/29)b6,`6OSj!%7rm(QqV3kegEH"q9L"?[GJ7GH>o.JE%di]jVF'R2WRckG'p#k5QYq[9"#*>h5qAW7R*!gd[74+
%r6N>^-8or_(8qb*L@70=R=T-hU`tDn`=pH73'IYUF.rA2CNpAsL8kX7-0EGARU>n12@9U_C#pnDhgS96.!+t%RoD$njNb_#:E0-6
%*0=qG%1MqmM@>G7rlul:RlUFb7GeVh(^_N((t5L-R_C9e"S9S!g;an2MC)djXVIHjdGZO)'FJDEo'NpGgbB=:b,9[cdqG7[cdd0@
%2foTHE,Bd4rT5?d,kV"kkm'LqZ@Ak_Q2?6Ii7pb[*g:X:+_9!=JCgto5:/Ru9iR$r#9,_J\P%])k/>rUV8$I3r3@g?jm&\/)`g.j
%1f0\q^C;n1N2s(.@M$,FaX4#/,M9e/8>)EOQtE%]StC*3ot]!5Q7"D.:k5D2_hNU@$)F."',Bn['Nlr\%=u;3Rmc-0]-5'G5QVsn
%0J>N-rD%#'nU2p0kuY&Fg7[ts?RPYWP,pg*PO4mQ#_Cpi(Q6A"5W3]u$4Nm]ak^hud$Z.d5]JZ'XkF?XaK;r;M1,I57#X;g]+f8&
%&asf4&W5e,jXNrJQSre"'$-Tem(&3pmHaYW?^+j.IqRB-B@i`SZqZ0.C2PUr#T`;(>-HQSr8Vos"B?,_WJJJh?b.5#FSIp3oiN1L
%CYdL1k6HSC;cb(2P)=FGh`aGH#=kIR,&'.[FG2;>8I@YV(.FJ9V04N>PYYifo09&XTe)W^o@$!T>e:bBPnc$oL-a'2WU`GI+i#O6
%7hj^WSD*0f4n>r]]VP!])qeeF2KX0b@(Im\W:k!)D/bU\*1"3^:QY'XeUUtO*:MK<fH;Gi/:r`?C7Uq+n:5qc&u(J.V]Z?#TV^Ca
%#KQ#CV/j^>I<n'f#VOOJl=E.@kn18mAlm71*?9b:6RifID67ZaNg7=(P)qMhZE!/+aS62-U&fp=#$SX*ODUlZREG_JA=H\/.(d@=
%%ZeI-/\.aY9[OZHp'gs=&kQ[?2/1KQ)8G+Pl<f"Wj"g]f]5p3]FbeGFXW3pGD+Tu2OuG!UTM[+&K52BdXIt_2g9X<STqK7RTdKB(
%g?F6`G'JBAeD_t;3XdI6S,[:kbOe1P(Ko;CB;k7f-qo_s!DMh;JHRO"SZU6q&]::_VEs;S8Gn[\.0B+9Y*rN#(Hqb&M@WR=,X"";
%<+HbD;eq"U3Vb5kJ0ljCj!a!770u]c(-PC!q.dCU%ZeqhjHJ@mK,`ieW/RGWgG'_2*9>h>FQ=)RK`jsT.$meun,V[ul`d^KcT\'g
%(mD&[TH,)G"PU@TPA`kt"pUaq^t#Q^q.E_?>Xeqdn/tCqB\!&iI5l`GVk6WIL?271kQZlu>.iMG!=_g*<)g)IF,S;<o18@`I,W=2
%6EgI`&*0G6&DH)?-ub#p&R)P@mf`f4l-Hm&bm*GlV]X<UTU5ZgO3`J&ZZbbS4`*0"0!`3n%NT%O-l<(!!3=IqJtp\#Le'-Z2Jk(k
%[eTNZ`F"gQbNJ?,>H#2=QcANk`T%nkam3c=a_K\Q',KXLl6o+i[6BS5<\6&.ctUbB8E8:CB'6"S4EbiAS$Yt(RH$rJ\noT4Y3:ek
%=u2/O0gD;3m=4tGm2[7&#a.QJaV82eeOhB2pAGilm%]@e\p@o6gCB4hJnYo4T93('\.^2FE-/Ma^qX=,SX-e7%ZeJYCM:H?Zj^31
%f:L2=nps8?82Y<IIEp"GIfU4_psn18mH`]I$QJ4^h[,=D6>]Qtl5^dt"dtRrjA;halBU"+BVjHSO3qKsbpq5W_dC32;]</9GEoj7
%)O`A*6*nq5AW=9E$aB'g-qkJXKlSaP8n.'BDr)JAF.HgS4i+@Tj7?Y8%AF>*`KB42:[mjNR%q`)O*Z0OdLHf*K-IFu[uZko8Ze`R
%T7?t>(QLBV82]G?_dC1^nYG,A;P]-VoZ1?2<gb[=We]e:]hb]GfV)/Ecn>m#Xtq`o_\9(!<O[k6/O<JI\W@H"*?LgVo=Ie%H'!U(
%8CY<1`EpCa5dcrA]E7csWk9>nL'a+mohaTfp+3VNj9s@a<H6PNS3B4l3;XsU<KLJnQ"U^i=\5MeJ=X+j]*@pX2V2l&7lgGnj6J0Y
%G;@gIFg6X.*,+uPhkC>WgJKi<GBeK^[%YTrdjDe;(+ou7q[5*mqAaps]FA<TLZ(O1hBG!I/hhHs%5iLFfEgUmKo,*a0[UA[!=uI_
%g6/;ng+??']nRie?kDko142@)%M-G[R<4?qSm%Q3.7.2kCP;,(83V?'_:fU26fYL\mR.]70#-,(=@mc12(R:j[)Z\ETc-<\4:2I2
%PM7-VqRGptmp'tAUQ;q)X%u#Z`)/?^]#.mj"Aut-#T?g*-R)8HfR)'LVfKKH$`p+3LPB5g(dP%9dA5R3q"9ii?^-dJ^QW]cPB'k3
%NYdlAk^o\m"p4'hbZVTYj#S\PM!uplgV=bo[5@fNZD5<EULW^jZAcaBNpDoP1[JoU>hELhbc2[)L'V6Bi?,3O\SIci]*js@$.r^-
%F)+:d-N`9VP[$XSQcqE,[g^Qa3aVMq=\SR(hj,9(Ka:7,2"2#W^B44U[O?p_44tel(tF>mi@eS*PE[jaJgDp+:qqZ?6g_%jAW%s]
%jN,i*%7>c+,O._PTP;kL_C<[8&mM`Sf<=Z$nS+)KjOm0\QXefNWo';4@+Z[!Ggm8WiDGu(X3PN0QBjm$$IO-AV/7s!k3.hS!>2^.
%TLa,\4cgr'B3jjK?%aVk/T1&+6msG3\eOUmR.%IOQ:nKaJh9<EaZ^L[4?aF?Ml3;-;CsO\FOW>\"dV!8/`pe"6T[=;&K2TNpkNX+
%cp55](EcTa>)6UFd+pG*BS4'M#U57Y/a;1,e?@8ZO"j0tG[&D:>9S07'IM?%-U($YO"X)9\[ndnjfZ/*"VUjj+Z)Zr2V='iZjmLX
%+PZ(n/D4Eh&=kU-BnM1$pVAr/5?o-pkN+AaJ[\GOZ,M*9Q/3"3c\/1/d;qsLQ:&>4>Q:&In@"];':RV%;2Ck[B_[?umHPN)<uPJH
%SVDi7O]5H5(>@\"+G,nbQ"gEZ#0-O[Dtrl=f]%1fQ*eBF0]D$VUJb>O@#X63bVZZaMl5/ZD<Ua_^h?B@6^q<._U^HKAA@q*>[L1-
%34$Mt&-:U[e.YrQ.;>H,S%E>!D/iE[basIDi@eSjP[`"*,W.MMdO@?413($q0.lmH@`-PXMKJ=ufBUn7n`qQ\^F2%-J*5tNOdfQQ
%ESnuo$_!VRb8^>43lF^4&7d\phQ2g6QGN55C!l(tiSgt<[(NYXRB-!M$l/Y8rA$mTeh.9PX4W6m*?KqAR;[Q\DL/+X':Y,I<@ph]
%Td^2(`cEYXg<_JqJjpE;/,-lf,5WeuT;IO@(:(<qjT7;$4:2\_-=hppQi2meKhiP0U4uX<[KQOSL':c6hZf.f"Dng+4(6]?n+$pt
%/-_#I3:\dP:TG-c2fol\'Zh_nflW0C5:%V6]h1NrX^`&^JHgm0`,>&\&4&E*bkJB8<%Ie\G^cAr1c]484l3cfUG--5H9;]*QE^[E
%E/:XD7mI5lcn.O4LiiOD\/cN\"r^OY3!`1'C&K,+6]F:;,f?=KeRNa-)a"N<7"PqjIT3q%'TlnBSYlZfb;MESp/["ZrW4E[55K:#
%V_N$s17IW?JL:$=dbTrb8iB@f6\ch:F?jA:jSOSQ&(i^*\VATYTr"9<+,nOq`>p"l#h(Hb3D%+M8l;%p7MFX-.G\Z;)M[hI%7<3>
%$57`PjP(se\s*)#N/qNS1k$D73P9EN"hij\M[]LKeN/K*W?Yjgl_i!eo)QVuZGdh*k3S:j$?!=s8DH*Q[@'tKL(&7@\2<XiIDY##
%!?$*MnBdWgI$8j`d9hfq)TIEWJ@O[(jE>>R)RQ3%*0M%]_t[j`-_8i^e*a:^AZN:;Dt"Ri^]oC59@3>TNH7($F-]TRhb%ZKd1[RU
%#t;j>ea,Y!L.k..+%*GUqPaedjNd@WIK:&1qC.br1#]k0JUs2g.tOCcFNjO.5/"k/&>;^5DD&(Q7\.@`l[69:S-R)5F'eJr2L'Tr
%<)LrF@B+hHq3%i_R<.V@kXD47o@M`0?q5tqK(Oo^lm]Mon`qQ\^F2NPI])D(Vs(k:aF,:S))b'a"c_eQ<"14NX.(=gT.XI\D4)C<
%^rF,[V:ouBrMY$T,1pY`3RoT_jp,b]-j1AmGhXf-2kPrF<FJ6e=ok?:A7T,%OEhU;FF4^/(t.3c0Rj1.n/P%^?(n6ll5`Zt'mDtc
%fI.0l=dXQHOCdfk=^+M$E3uJ'Cg'OP2ZEM>LQiX(><]2joq-459(!.qi:2]Rj4'2p)`e<2.,e(hBs'i]QRTPu!0pb0T6GV@q14OO
%JBD20WQBIbCJu`$6T$_52ebQo5Xs$>N!DBN!t*AA[Xp]+Z^&CFN$R$@*Q2=tNm#J_D<UaG+Ful'bYd7!V&51Y8a8Z.ItbM6c.2SW
%7616e$"psOVfqG37WGcqhPq%-=U)i^kkJe_:183bJaXcE:L5<(lhiP3%.m!4one^G!i46+^UfmK'2Fs*Bd6gg?CaOq9=$LJ'_fCt
%B)naKR+$[D%J2JF-3DFW)ENI.&U2Z)YIiH65o;<UM_J3fDC@Q?.$?Od<3c5!$@72Rih--;:+\6#,+DF_1%hNg6qeR_)/^TN4sTKH
%NH4;O4P+a/K&&d%bE>^>%tZ*RZhqTY3^*YAqQA$q]dDI+d7>':-AGa4WqAt3*tbuUUTgDRn(P(n2S#Y$(KI?4Jl/om(LrSLnUZ\G
%!0QIsbsc09ek0`$gsE(qr9`=e)`Gk7=7KOn#HRYX)H];=DT+KDgSs##bB16'*M3Ff]\:qA^3f^hd`gbQ*m?C%-<V,sHXNU&TSVdb
%\eUlIJe<2b0#g&Rps[8lpf+a4*M3@8I+miHBj.Vb$2UaT4,-6uT;[g)gX&f"ON<&k/kPk@q>,!j(M2(\mqc1+Ctb#^8%Mn[m6D_h
%9deZ#AFdFX=X5mHQlrTWO\p7F>sJ0s<=&p'Y$a!YeRPD>&V_lQ\_75tIs2t/)V"UNis,E<W0Qa??K)0s8:ah8QDZ)g$3Q1Hb(bBu
%N\lJ[d9Ju@gmg#_?&BOs)u9^P&5hjGRp1/G]Vnfj\[r-t&1Ydn[tW3gF;Pc-*q6L04ZY9+RAO<PlGJS'aV0c7:/*c,2Y7AZ!(iQ?
%I_]ldo^[QYla;uLO]TV0$Wjs:&2nVI(.`c<*]E?H850jUg3LVQL3CMF16nuAft="c^]N1\3g96Kc3GQ4H:Y&M2DIqgcW>]k=f'JU
%LPOgh``D2JrklA4.NPM27*rU1,peBm6\eVsa#j2&9TV9FC$>U]P-3s,NP--6Kd]:XkfOBr_LsDr]9GFm1A<A8W];`/-&<dNS]gk`
%loR<n'<6/TV4=X8i^iZ,E0;NZ!l/fm?ok:+c0L>^?P%r"/52\u-Vp!ukJhcZ,pjO75H'hJD(MRm5&BF!0EJ$&Bcc?BM6n/u8GEhI
%ap+#W#qe25a@Moj*UNPT6suk5<*31d\'6.n;0aJ<VXp7<2RfJ7nIt^"%Wq^<Vg;P=n\B@pX8t,<-8A]LeGlSKW?!%7!gFn#s6aJ*
%a1:T$@g&]B&s"SriLj8UM3e\M!Zjm]%E>*m+WYdU%d1eiaBab"gQdY?GShLWI&cZK[.sF+DXH]\EZ9[%.*]3C5O@n79L+@GSEA=,
%$/rC)Xu^lZh.s1aPIKj7n*h`!5X6%BU!tT*'<pqFYp0[_CPq)t,1H?QXnl^d^OQWR>"efPD2;]cia"Z]<+S*q\m21RLPK;i]\mM6
%54d0ues&!G,i+JrO"DJJ:6_:/%Y"Kmd(e@SlG_/n]VB-8&BrC'4LIa(.R[gS2IhMt@7',h\V]`=Y0l,C^OEK`Mm@EkGBPT`G4(cV
%K/M&*9RF.bcHT@4%XKiu),(Hm)6pP:V^D#nNqnZ7d>/5Nrsm<?>kI#cfL<nA-Qi5OOJdbaIGC_8[QLfl#`qFpY87lHSji`.iKhh?
%!jhOVO/lA#dftiYJ0\'q\ngcZa2+JEBif(/-[]Y!-&s]20>2qSE8Y9QTkDj!5YdWZQ+,B1V:%BsG)XmjE#Uc##Jg0jcaIJ-17GEh
%G*FaFQ-=AG#G`[,4k[VJ3)Cm-hRtJ6aUf,!:24/W6"mR/O#B*;qZM];!8ZsBULR8/1":.4=AYX]QEn`,LJP$\V@=Mu"3%7?#s#B"
%_aBe<NTCb6;kTcr>Y=,Q'-!MDK5S(`)q&K9`]"pT-5oNC.%Yem,[tTja9*CBr6oAP0.V(.TiS.<>Jp@Wn9'8#RsNR[D#!Ttdb3&S
%;e\E(b"]eQdfS-C9)g]K@J_fBYYi]<bO<%:3D>L%X;mThC=165NID;UT>jtTaRFtWPB\ulT7nn1fL*h)2_)AR;`U*@?TU*cfk52#
%^qX&r9=cb/#5LfNa+9PRIac#39`-+O.F=Zg#(\=qauOS6nnp1=Z=KTBG$pC608WTgpfC*mZRQ$RV;;Q1eB.QVHs5OG!uLsl0q&<_
%d-eUGBM5"O_W`h$=-nLGmr3_"UE'3Nen`SYB[JH9+]BWZb$'7(4e,;Ypp5`"""L/Z-'u\m]6NRHa.^i:da?h9h/*[1OJB!g^iV4h
%7AC4bHsJq:Wc?=W\01&M)#rZ8^:p8f,N<%sjuh%VlruYaE'VY`piupnS:&NHVY4h;<HGocW!q"0:FD4i[sFJ"q?2O;q:<*jH>\Q,
%G(('7VY<NlX7.L0\PC*W)!0gscLppJPlf:.YA]bV;.cp0cAVqQN,=t:mUM0I)B7INZLiL@H:\6%WJ!*FplZ`t>^l[(n967'7!;At
%<-tXNj$Ul=nImoCJ+0`>KEkrf9g?D#'GXIFnqQW$Q)FrrQh%ET$%0Sb9=%ZA=^cshk^\`+H7slXFa^>TiF1#=$:bX2PPeNT1>DH2
%o9'KVK"@O<=.et`n=]_.SRY+;BGTU"<eHrHOVbsf*#.Vl.H"RgG!bhb0/ai\8)(0:P96i$paaX\?/]3$9(sX(^8lO1WAQ8UX?P$?
%BY]T1fdn0WG=Ea/fK2V,07X$"q%oQIj!.<:#[LHVG;Y$F#<u7]kWl&km<!73N$3-8=A9gi(iG"Lone,$$UA>[APO:0`cq;7(*c@R
%FOmi)0[0>cjZM3Gr8+3mM8&Cf20D[i_2m+oq??%hRHA>(8.;K^ee`C_AhMM1>&Bo[3Y2b_h-O(Q;:t8:c(3oA=:?4&]].H&b+jT!
%`P3Z7?=/X3m6:>JgsCUISN34GGrdd%'485_fJGs#g5j2^r;n$rF.9c;^_oIV7ouGj_^1Ya5(5]>\VnN7=pjr'T2.W0`N&2!KBqNO
%I`8khk&^,B=HU)(/I%7o=*uQ:kWh8'>@!KjnElRRLSMCk,B98sklH/4!O@+4Fl4t-CUekuJc^kT;tWZ4`=3oD!a,e7m\Rr:(OMSe
%?!D-7,(Aq"iWal9'cIg88h2gSor*6qbNI`K*#.Vtq0oB^idL^`f2!03;;Q-ecC5!`S*bL,9`Qq^k,cX>dEA7oFR-PZpEa4MWu/V;
%8k'>=r2[/[Fk!IA9@0NZhi6r.JnV`alRIAX^dhg"Aad-1rFT;.ki9gW/!.0?@hV%&n^"pA!45i-R\9>B>m9F[He).sF7EkB%3O]u
%Rh3,WZB0`7`L0oY-b?la+l2YXRF"4_^'GW_&j5HW7o3b+@u>DG`J$>N9.Gh1GNG`BWJ=<9A<F$,C*hAAr<GOcl$":rn)d3f]rTmm
%q[ufX<ChDgF*ci@0VOC61YhI;*$N#Gm\.Cn]@f.%',1E4LKZNEZ&!K6p5W?F]#mH1_MBR'b1S;-qmG'>6gYrY(n09UX!f!o0B*We
%T*]POpId(^U&#q-ikC^9E.Qo.'c#iseX5UQ@eXuPHW"&6*aMKuNO.U(T=p]erE]Z3eKQK7,Os=[<0th_"!<4'jOX%Zm@MUF0&B65
%CWVLr5&`/7IBdJ*\QD77k,bG@037Npg#,^;+5m['ni.Gta0_3LHM\o)T?TKGio;g<SUA25j<bJlppmCn7"7pVpc%.F'B\qN=>"+6
%Zu31Z86Ym78h5>_M1<A+-_^@WMc$;,DRgPJlQVq;;K29DLZ(R3mZ+BW:M!;Q7F,&$:fSaD_MWZUl"`H;aGX2s0qPhlI;BM,QF?RA
%LH58V>TRH2I]E7OMp60uf=cPNT(!OMTn).N28E!TXSh22Q_c2aMUr4ecKVD&ZA:>TMdJ\Or'`'BlZYrQ<(a:RBdgc.5`[t@6Viue
%RP43,c&6h@K"OE]g4G`'XJ_1_7@F^+@ud&%)JqM+T<[Q34j#iIr;Bbp@S7WRo<>h`2>:;f-oq0@js8Cun3CfoeqO[PK4tRQ'HNFj
%A2_N=Lrqa(?R(0:ot:)bPG#+ZFD]qPcsZhuag,?lKdaDqV2oYqBpfu_MJO"KM!DP;kU89TN\bC.@89SG?CWq*8@l5/WJY[tm_SoD
%gJ1=/>b:0S4@kHGNk$67jQkHV^]6+Vi\1&J!d0`MP':KXL1*CDe!Y9Hs6qb8(Cq%/5$NaLM9-l?'R\)(q9R^fPss&2K>2p@-XZ%M
%6#.\($Q"tr-"Iim[\sU7]pX@H]qZShKaHq]b_=(k7,.s4>,UUEQ[]'kr-)thM.#/"N_]f!eA5"84*bPHEY4Y$VPWL`8M)X3'Cc[!
%:O!^#PWq#2&u-iI'_+6J(=4q"Bj!m39+*5WBlMe]GF%1u48]7UQp*>9^6qb?bP9a92;?3VX7/u;fJeY7%2]#td6WSMmqLe/C_+be
%&P6>?g):#E&@3u5eQX^N$@eq8]OD$2nF/ieW'$k9;=gHM9VP9#B1Vc.$Lag_XQkcmU/FND4:DlQ$+P0+CSB!rFaa]&lZV-"kHNDB
%GepAW5BVo4TN==`iZ6#?;4&@M\#+'KI1lGqO$\!YG'K6M7o_!4_a-<q^+f48Sa75en?rV-i<7O=@,Lg'f\u@gE6T&l_)GZfFF#.d
%Z[fVk<OaYX^na%6*T&o2Gsd?1JqSMJ<'W_lC`DJiAD^W.0<,m\;'J[k&1-3SrW49SnVQGlYY#N40gj);VTVUBnb"9U!@<#[DqX)H
%QnWE_rLrj2l?=+,V?i<YK3*HXq,mI-;^J0N'g"H?&TH]kjb*AAY]fM$WYF-aH-R<VU?dobU%q)UoR)FL+[V`DqS8)_3"1[m_u(fR
%kW6s1!7s5+3qoaGcOPF*'='BBSj$[\nO,Ek?H>:XNrYaQr[T%Fq@,ME$k5sl'O`q'C30*fYFdBFU9r_S4"V73/b_sXY"G_>gY\_P
%k"6Bo@@GTA$r3a7ggaE[RF,!']L6Fa)ksmT_o(B."j54,=bVtEQ^XL:B29G"hE#DY,,R]dOd?TJgYlS.+;*.gR[I4ldKc"l6RRf1
%O(r8#)k(4#9'kd:7&W[^#>EI-&6+>t&31X"l`-9#[%_]M=C7dV:O!Qtbh]LiSWY;^C+`t%[:)))=u63>0eLHn'i7!i"\]br@@Jn3
%-$'huWPH'SQ<e7>ZB1$kOkR';BV:L:FEYCYC"#Z5Wp&o:+B-7k:Elf8e<44_%ZaD<<]KB/1_2lJ6p:lI[91gG&T8X5/#otk_o"1%
%97H9P(3uoOrFqM/8Ue5d%_G&$`DUjuq?99sfbD#99?pO;LdZrlk2C';%`kET5er,763BnY5c4>u<j>V$MEs&,VYR:D:+[iC.uq8Q
%l_!D9/Ei)hHqXFW+'bqe8N:es9'AkF#7.KrOL5N;L'/=Iq01fG,MI8";EZu?)Fu'1RDn<Xk@^FNp`p]5'@$8cTr=t9W6jk'dn+;?
%k.p$Jl!#)f$4E`=F'Y5tX%@>Ne)6FcgGB`0_9]kfKA6NQ_3&re1LJt<Q>4Pt?M,9r:)q7dKjl!e3;C"7_jpMH%)",tj0\%rj[Sjb
%Y2r-W$TPiX_:8u7T*#oa#%RX)D#DZ?3'$F3$!Fh$nU752guX1?T$Sko\/Kk@[4qIg0%2-$Ibs6g_2\>`$M^'lD:fX9i*mX<%*QK;
%o3rs5>%Xn!guSCDim"\H2@9P(.Bc*<:b%Um.G6Q==iHE;]n#khZie9#hOsBFJC,L410WA,E4\kH\&#^CTNEC%GX][o5b"F4/3U7H
%#U$Q;JtT>`B[7=[S0t?`)'B(p]4J>A2f*^C9Y*%QVbp*8$hQ8*a+D<F&KlBd5Glo-<SSNIaRQ#1J`8fJo5379fCs'q-JMSHhq>I-
%fsWK?p)MHq2:\"h'Feq'?'TnY/qpIS\\6JY,pX9dK!MQI^EEFpMCihm(*l;D\uY,/p1&P-1o-R>6tor^iF05=AeSXig@%su`.B*P
%UE9\>APf[L=kh=W+@9]WnWmp=$E`3UFN'USD1k9%%u8`&`=3iB#4dJ$OK<n.0m8.X`m[XYpAe3A*)0WQ2tRJ[co?r2Fn[SQ%(:kc
%QC:Y7(8^k=D$,P:606JhA@@7o$3pbY261_kFPi7!>o#Bk$V4)S3'=3rR,Lp#A]L/fm=EHYb[jlm2folP'Y`JfGKt5FBAu`"l3c%Q
%cKXrh)t4"6OAaAqXo>!K;V$4H&h7RVhA/%l(]n6nNO3SW=QoLU5QM)==Dn:`[`B(b(,tjn=HJp1OHG]h<l>TL[1*bL<kqm@Is>8R
%^gTbVd1K>t9D]s.k>]'@oP0(Jo1:^Lf>S3t!YV#.Al>G[KUt]mC-,*BdV>gfjT\g'2fo`LUmhIbA,mce8fg70eD8B74lBmc_8JQ\
%R!a])k%;;6W#qZn)\a0(cWd7YI^"Wo`=3jMe>7X0_jMgF>Yo8B.u'qmBId^3H[f>VcnAeCOM[]#3O[?Ka&c,?V=bRkKSA$C%2ss&
%&e,c?cEcP1KuO[,f,+a==?&RQ/8jYf:dB.3n3:1_)4kltf4$2:HqC>d?/3e8=<L2@UQS'l2ZZlh618=Oh`BSr_4QHnD+D?k#$!4I
%FIGjY-nlCf*7GV-7^lTVm];=.4:Df/Vp-rP;F:QUpF,3bR<7$DVR;*CiXUG=';X`?L6kJb#TnFD\2[*d?FOruR:Wn0D<NZAcpE'^
%]HpCa07Nk1nJ<M/ddQ7$o]4a_eb2t<%%DPn;Q6N7ZA@`6X)`R2AD5d[I:iGoYOBgk\4;>Hm7hdjUJ3YK!D*LG'Uug+alsue3pUe?
%cr#%LOsJ?8%^]gmM%bk'-#,gkP]YgW&(9(V(:O_mT*D2N.lQ^99^VPPWg51F;C%gZUNgll!s`68N$Sh(VGuquR_#r:G*ehSOq&qn
%ho#<FG'%sI^hT1tc"sMS3mr[N@S8`IPsng[ja<r6nH;@U_/u8N/8i$&)J2U12)ndF[^Abt>V;'cmHF=%\?o`\22e?B<n+IYf$&)G
%BnAe%;<iFNF;,dT`n*4cpJ$$UrqgDIWC3!5"i0\#_s:QO@!i<'8MQuU;^5*sf*W1s29glEIie4105GFZiDDQg=j@)TVsBO6+GlY(
%.'RG,dYV31FL8@H[dE;R6tk/[S?:lj+ojamX]ib$]%\Y[#O>7%'0A5^&*C"?.Z%fD3[?+CENk^[nX4ZQM0IJ1eWP\r2L'TneAeun
%I9RLI??n$53"]Z436IPaQc'e@';:+_)`e<:$>7giTH4/;n9TjKZpB;8FN;O@\s&/2J*KIKeQ"JkZppn_DOUI#FF-<)SLSRILJ&!h
%T&;#PY%&gHC3"(9#\2!0m+&Z.&kaTZ/i<>+a6,]'J+tWsOi0%=V\sH3%0Y2`Q4u\W<>0CKA/#)YX7C@N>[b+G8Q1B*=s8@2!MQmA
%b!!T2$#kbu_<!EW</sZ>9KqMkkr`dl6Fs[XUN#-BS/Smi+2fj8A?rar"bK2pN&46m9egS=n.\.GK<1TdVppfa*mC>?")6[>de,i>
%o1;!W2J`p/+Lj^?655n\bn3P3K$Cu5FTnihqXa+N:)c)T""k1c\;I7j5Z<i#)HJAu,On;S^)l\\4J>UXTX/5_l,*8VS$fHgf7$Ss
%/cSSRKhAb\M^@ukpqMVW?IUB\X&K9O5#=OOT6<fNg@Q1T5-?`A:)fN'L5&1Jdo*3ZTu5c\fF^Q5VX827;:B?InNB(YAR$uO(nl-o
%.(Z+iYWrVmBfi:h$ku*T6A\ELR*U9rb5LDWI\L.fp_*?=Qg7$rS(-A+E5td"]"*.*L5p<LpW<GAUf=b*XfF)88<u1R]t(5?dX+@%
%B>H/0n\ltd6`O6#=<\](1`78bK71Ht0k$)JRS`-j9+@eVq.(`\VGU</[u++?H4sT>cn@A%Oe9B6AW5dQ.3)6:S?@NOntYKCL?<CH
%L(;+Q_V)0JHhsu^36=];M((6R*SH<Vo2!jD%U[qsmUg'-4&6a>0J+>?RZ/jdJ<6ibDWid0h`0bF%l8C_.=m";'7\!R8R_rLJ"lSl
%cnAdX1a>B/60t8!_@_YG[9HB(J^S)]61'oZ]-f9@!<u%X:d_/s:I@2b,tOLu?B%n;=AlhLEJM;Z![7c.UpsSqD7Y324JOR&h"^j!
%Bl;I63UZAj9OP\,.CX,I:&=[BUV2P'S#SKX/)UT/I]NCY8!.!*_O9P,E*W]m@VB=2A*=40Ep=[?)9KTaeVp)#70&LR2nA;P&2PC7
%@jUgY&'ooH1H:ReJ!q-Gi(Y#?^N\bi;Q]difRRBYO<iJB4Ta-EkV;"L=,Wq73FnotD/k3CJ-%d%.XMT&_%5\_^=dA\X3P^S=,"3j
%4$3obMNgeIMZU:0j.(,O@bC;s2a:BfCp4]e5R3ZhNrufS$IYTmV!]<fMGnZYDdV;X@0duInPhU`"NQhWkOnJ*?Y);q?(i7qi@eS*
%B17]rKr4Xlo,&'5d@a4[0-A/bb-4[Z$4:kH,$C1g7t^NSYFdBFU-r2\SOa-[8DCF^]Wh%4`QY(41,#DHhl4\u-^Xe9296tF..%Zd
%rm$1,83qg`oN;S:P`e&[jHscf_LRu"PUeH/fu*f_WbI<UdXJfegSm)#_:FXIX4aks_Ol0>Df34U0=O*",2r--4j#5.g2W\O4+0Gj
%S33\3O`YX;*M<1N]Qq!WpLDi15@O(X?M1pVZKHa+3-Esio8mhVk\<4CJ5OTT9Aa_RID:b1]J*M\F!eJQ$$5An4eV>k^(c^8]DYlC
%SuRsHIE,,M<Y!HC5(QSV?3dFN<uq/Y[fl_p[27KLd?=@M.kL\1=4&j>_k2QL7$IC6?d%/#S)*cKBU"^!-^T%amQ6_DdeUhg/;4"O
%'I38a(B<Hh`.2X9\UB7k0P-2=4(VVXMV*;P@$Ga$U>+8S^?aKJI+gGqCI^;;rX"R6p5lD1g"tN(S+^Wm.</'7HX/l]VFAZmED_aF
%<4!7i::^5g[M5pJ*(b6#m)S.YoT0ZIc##L`;8@?@;2gTCQ]C.Hqu[huX=p!"f\EE@1'ifmkNoAW^!.pSfH7?m#EOln,eL&qFHb5(
%68lF2m^eYDDL\=R*;Vh.KVc7;L[6CRn/?_'BfYnm1AnZnZpQ!M?eqBEIlq:!&7=h9O=YkTKEXC2EQYetlGd(?$-"(C#%Q@".k*VI
%n]r11;98B22s"d`i=Pb5Calu!rr>MKFWGa3h39EFPbr#pF-OETs2[DinP:2%E(JV^2r[Hik--o5`R^l[0E2+ijiiWr/64^j*_Tkt
%0)_N7<rJT<H::TP;croj[%L!m99f$o[Zp8XBr-GM;fmb%]>P4`(,pL5M\H%aF9=GQF[^hQ'PibVR3UHH%'m$Qi%Q^l3H$4ort=7d
%X[%eCB8@(<Kmi3BN.:gtk0R3#[S"(bW['IiC3<rb>-?Jb%34L-mgRB0MaN9T@E7b@T_5=*p.K&^!dhc"M_n$hfcRqR5ko>%4)hl%
%JC0]a<1(Rh&VV'>."uSYouZM[0%\XT;S]N>D;Z5#]?GLNV\Og#-fhf2e[tn[X>]%_Mo$Ro0HB9rb/s&iX1%"2>>(la^?kJ*nUbgp
%G%Y^t)#9I2G1E+K`kM.sL,j?Ua;JmLA;TOk91*dDr%\4RH\,TiJ6Q2"ZPbon:.+VZ4UTmM8%mNN#;XBrUPtftH1(96b+jXspGkf<
%Wu4jIS:=ZKIimV<kDpO19&J*6FOl`B[uNA#WN0W+Q-lJPg'/&)!=nH9M78t'*8R@b9o#,3ddlu_3,fbfI'i"RYJMG:$nF/kO!^Vo
%QF._Rk/a$:Eljf#qIid+fW4cD9+B@][\I3F"0L!F<H!=3Y@W`*Q?Z.@@mChg=IA]hE6`=XrSC=YZ`<A%bG+O4Y3kEhS3Q9SMRPiE
%kD)HigK5X['&QpE5&a@/+)`_A=L.:+Y<%`G236cgFO-:3B`*KY,2dJUDu/cgo^RrBQ9^H5pQi3-*JOZaSQ(PU;ie\+Z!f@f@;YXI
%(+a5?q?9!C!?"DPr%(5bpK2`k:C6JA9.MR;fh9u#FpmbUCL>u&rM&@Tqje]7SfHLK@Gb`I7a6uccFEcK;k$H&6\h#bLpb<O!D)HX
%[.K1bIs%JeSGQKY$]7ZJJLgchjQVe)U`HPo*\Ml8UTd#E&UWR:8s'6#_8>;*#O)J*g#3,)JhoXe[(6e268k4l16:D7>9UnF)EQ=+
%2Q,PcNcO8fHD#UfF<X0K%?WA<N)sj$CG(^UU#WIe^<>=VV%nT\A.*O\-A$n#X(^&,6D]^"EpcYB[lq8]/7JTYpYXd\Y1&Bi+_9.%
%JINY"gm_sXl.5*EPX"!N6@uhJ!O@S]Vj=RO-s5j.M%7E)Xpk$l5Lb%!`2)6p%s,mX]jg)6%oiJ5Y@?Fs74o7*q_WZ$\lLF75aKU;
%9,.&UNcOj$n@ocH0su#t`Hj0S6)Q@o$m0?r>;CaK3^*p^U/JVu8]\!$"$(;)IbG@TPU(sY$RX#qQY%7rB&sGh*d2(TLtDHGZZp(c
%$K7T?(S&'a_/q(]4cdhYB92*X*do$U$\lYdMk<2\;-8pZF]#7\C$7cDd5sPpWrVASoC5V(P+986Xh*UM6lc#1'f:1<#1"-u>paCj
%LH0=qFgUGrc&g%Ua2t<pb.GBu2=1$)fS5D^K#D(9DuN.u,@0`cqh[srWaRPr'mY>(*.="6bVWX2%/c>DNb]ct(8,ouE'%[L`]s5s
%@Pc7:U+5<hOS#)JoQWC;_AdVHNI,'.0];"?9hW-')&AO?QFY9ckPFmV9*"):?Z=j7QYEAP4"0ZRBp3K8]MB$a+L,68VXq_13U_9P
%nZM`>[-,_Olc!@sGRiL_joo]C2EV*,FPoU"MOq`Dd\gh#rHL.u"5U$nFMU@*o1L8_eb/C?[BK&NISg<Ns3?/ns#mPMs3j42^E1r)
%9^Mf<5:qBaqR7.-DuP1^07X#Js7P^(s8+I!4c[)BGQ73Zs6uBTr7=15[t"7t?iTh<ro%5ar'15Pj3Rc'ch&Xbqts5Sro(&1q:GZ:
%07WrDO+7,KJ,*GR!QY7jpNM,e+9(*RrltHDqaH+&~>
%AI9_PrivateDataEnd
